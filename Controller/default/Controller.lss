
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  000011ee  00001282  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  00800170  00800170  00001392  2**0
                  ALLOC
  3 .debug_aranges 000001c0  00000000  00000000  00001392  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000429  00000000  00000000  00001552  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000028ab  00000000  00000000  0000197b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000154f  00000000  00000000  00004226  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001852  00000000  00000000  00005775  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000360  00000000  00000000  00006fc8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000547  00000000  00000000  00007328  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a9d  00000000  00000000  0000786f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  0000830c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__vector_8>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee ee       	ldi	r30, 0xEE	; 238
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e7       	ldi	r26, 0x70	; 112
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 38       	cpi	r26, 0x88	; 136
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 6e 00 	call	0xdc	; 0xdc <main>
      8a:	0c 94 f5 08 	jmp	0x11ea	; 0x11ea <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <setupMIDI>:
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
      92:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) baudrate;
      94:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
      96:	88 e1       	ldi	r24, 0x18	; 24
      98:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
      9a:	86 e8       	ldi	r24, 0x86	; 134
      9c:	80 bd       	out	0x20, r24	; 32
}
      9e:	08 95       	ret

000000a0 <setupPins>:
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      a0:	8f ef       	ldi	r24, 0xFF	; 255
      a2:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      a4:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      a6:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      a8:	87 e0       	ldi	r24, 0x07	; 7
      aa:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
      ac:	11 ba       	out	0x11, r1	; 17
}
      ae:	08 95       	ret

000000b0 <setupAnalog>:
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
      b0:	87 e4       	ldi	r24, 0x47	; 71
      b2:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
      b4:	87 e8       	ldi	r24, 0x87	; 135
      b6:	86 b9       	out	0x06, r24	; 6
}
      b8:	08 95       	ret

000000ba <setupTimer>:
void setupTimer(){
	TCCR1A = 0x00; // enable normal mode interrupts
      ba:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
      bc:	85 e0       	ldi	r24, 0x05	; 5
      be:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << OCIE1B);
      c0:	88 e0       	ldi	r24, 0x08	; 8
      c2:	89 bf       	out	0x39, r24	; 57
	sei();
      c4:	78 94       	sei
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
      c6:	81 ea       	ldi	r24, 0xA1	; 161
      c8:	97 e0       	ldi	r25, 0x07	; 7
      ca:	9b bd       	out	0x2b, r25	; 43
      cc:	8a bd       	out	0x2a, r24	; 42
	OCR1B = 3906; // 1000ms Delay
      ce:	82 e4       	ldi	r24, 0x42	; 66
      d0:	9f e0       	ldi	r25, 0x0F	; 15
      d2:	99 bd       	out	0x29, r25	; 41
      d4:	88 bd       	out	0x28, r24	; 40
	TCNT1 = 0;
      d6:	1d bc       	out	0x2d, r1	; 45
      d8:	1c bc       	out	0x2c, r1	; 44

}
      da:	08 95       	ret

000000dc <main>:
void playSong();
void playSong2();


/***** Main Loop *****/
int main(void){
      dc:	1f 93       	push	r17
	UBRRL = (unsigned char) baudrate;
	UCSRB = (1 << TXEN) | (1 << RXEN);
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
}
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      de:	8f ef       	ldi	r24, 0xFF	; 255
      e0:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      e2:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      e4:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      e6:	17 e0       	ldi	r17, 0x07	; 7
      e8:	1b bb       	out	0x1b, r17	; 27
	DDRD = 0x00;
      ea:	11 ba       	out	0x11, r1	; 17


/***** Main Loop *****/
int main(void){
   setupPins();
   setupTimer();
      ec:	0e 94 5d 00 	call	0xba	; 0xba <setupTimer>
	PORTB = 0x00; //Turns all leds off
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
	DDRD = 0x00;
}
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
      f0:	87 e4       	ldi	r24, 0x47	; 71
      f2:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
      f4:	87 e8       	ldi	r24, 0x87	; 135
      f6:	86 b9       	out	0x06, r24	; 6
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
      f8:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) baudrate;
      fa:	19 b9       	out	0x09, r17	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
      fc:	88 e1       	ldi	r24, 0x18	; 24
      fe:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
     100:	86 e8       	ldi	r24, 0x86	; 134
     102:	80 bd       	out	0x20, r24	; 32
   setupTimer();
   setupAnalog();
   setupMIDI(BUAD_PRESCALE);

    while(1){
		uint8_t rec = PINA & 0x04;
     104:	89 b3       	in	r24, 0x19	; 25
		uint8_t play = PINA & 0x02;
     106:	89 b3       	in	r24, 0x19	; 25
		uint8_t mod = PINA & 0x01;
     108:	89 b3       	in	r24, 0x19	; 25
     10a:	fc cf       	rjmp	.-8      	; 0x104 <main+0x28>

0000010c <record>:

/***** Create Methods *****/

void record(){
	 //writeSong2();
}
     10c:	08 95       	ret

0000010e <playBack>:

void playBack(){
	//playTimer();
}
     10e:	08 95       	ret

00000110 <modify>:


void modify(){
	//analogLEDTest();
}
     110:	08 95       	ret

00000112 <playTimer>:
	}
	
}

void playTimer(){
	while((TIFR & (1<<OCF1A)) == 0);// wait till the timer overflow flag is SET
     112:	08 b6       	in	r0, 0x38	; 56
     114:	04 fe       	sbrs	r0, 4
     116:	fd cf       	rjmp	.-6      	; 0x112 <playTimer>
		PORTB ^= 0xFF;
     118:	88 b3       	in	r24, 0x18	; 24
     11a:	80 95       	com	r24
     11c:	88 bb       	out	0x18, r24	; 24
		TCNT1 = 0; 
     11e:	1d bc       	out	0x2d, r1	; 45
     120:	1c bc       	out	0x2c, r1	; 44
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
     122:	88 b7       	in	r24, 0x38	; 56
     124:	80 61       	ori	r24, 0x10	; 16
     126:	88 bf       	out	0x38, r24	; 56
}
     128:	08 95       	ret

0000012a <wait>:
	midi_Transmit(MIDIoff);
}


void wait(int time)
{
     12a:	af 92       	push	r10
     12c:	bf 92       	push	r11
     12e:	cf 92       	push	r12
     130:	df 92       	push	r13
     132:	ef 92       	push	r14
     134:	ff 92       	push	r15
     136:	0f 93       	push	r16
     138:	1f 93       	push	r17
   _delay_ms(time);
     13a:	aa 27       	eor	r26, r26
     13c:	97 fd       	sbrc	r25, 7
     13e:	a0 95       	com	r26
     140:	ba 2f       	mov	r27, r26
     142:	bc 01       	movw	r22, r24
     144:	cd 01       	movw	r24, r26
     146:	0e 94 9e 05 	call	0xb3c	; 0xb3c <__floatsisf>
     14a:	5b 01       	movw	r10, r22
     14c:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     14e:	20 e0       	ldi	r18, 0x00	; 0
     150:	30 e0       	ldi	r19, 0x00	; 0
     152:	4a e7       	ldi	r20, 0x7A	; 122
     154:	53 e4       	ldi	r21, 0x43	; 67
     156:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     15e:	20 e0       	ldi	r18, 0x00	; 0
     160:	30 e0       	ldi	r19, 0x00	; 0
     162:	40 e8       	ldi	r20, 0x80	; 128
     164:	5f e3       	ldi	r21, 0x3F	; 63
     166:	0e 94 6e 05 	call	0xadc	; 0xadc <__ltsf2>
     16a:	88 23       	and	r24, r24
     16c:	1c f4       	brge	.+6      	; 0x174 <wait+0x4a>
     16e:	61 e0       	ldi	r22, 0x01	; 1
     170:	70 e0       	ldi	r23, 0x00	; 0
     172:	24 c0       	rjmp	.+72     	; 0x1bc <wait+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
     174:	c8 01       	movw	r24, r16
     176:	b7 01       	movw	r22, r14
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	3f ef       	ldi	r19, 0xFF	; 255
     17c:	4f e7       	ldi	r20, 0x7F	; 127
     17e:	57 e4       	ldi	r21, 0x47	; 71
     180:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__gtsf2>
     184:	18 16       	cp	r1, r24
     186:	b4 f4       	brge	.+44     	; 0x1b4 <wait+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     188:	c6 01       	movw	r24, r12
     18a:	b5 01       	movw	r22, r10
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 e2       	ldi	r20, 0x20	; 32
     192:	51 e4       	ldi	r21, 0x41	; 65
     194:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
     198:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     19c:	89 e1       	ldi	r24, 0x19	; 25
     19e:	90 e0       	ldi	r25, 0x00	; 0
     1a0:	05 c0       	rjmp	.+10     	; 0x1ac <wait+0x82>
     1a2:	fc 01       	movw	r30, r24
     1a4:	31 97       	sbiw	r30, 0x01	; 1
     1a6:	f1 f7       	brne	.-4      	; 0x1a4 <wait+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1a8:	61 50       	subi	r22, 0x01	; 1
     1aa:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ac:	61 15       	cp	r22, r1
     1ae:	71 05       	cpc	r23, r1
     1b0:	c1 f7       	brne	.-16     	; 0x1a2 <wait+0x78>
     1b2:	07 c0       	rjmp	.+14     	; 0x1c2 <wait+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1b4:	c8 01       	movw	r24, r16
     1b6:	b7 01       	movw	r22, r14
     1b8:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixunssfsi>
     1bc:	cb 01       	movw	r24, r22
     1be:	01 97       	sbiw	r24, 0x01	; 1
     1c0:	f1 f7       	brne	.-4      	; 0x1be <wait+0x94>
}
     1c2:	1f 91       	pop	r17
     1c4:	0f 91       	pop	r16
     1c6:	ff 90       	pop	r15
     1c8:	ef 90       	pop	r14
     1ca:	df 90       	pop	r13
     1cc:	cf 90       	pop	r12
     1ce:	bf 90       	pop	r11
     1d0:	af 90       	pop	r10
     1d2:	08 95       	ret

000001d4 <ledOFF>:

void ledOFF(){
	PORTB = 0x00;
     1d4:	18 ba       	out	0x18, r1	; 24
}
     1d6:	08 95       	ret

000001d8 <ReadADC>:

uint16_t ReadADC(){
	//Start a single conversion
	ADCSRA |= (1 << ADSC);
     1d8:	36 9a       	sbi	0x06, 6	; 6
	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
     1da:	34 9b       	sbis	0x06, 4	; 6
     1dc:	fe cf       	rjmp	.-4      	; 0x1da <ReadADC+0x2>
	//clear data (conversion is complete)
	ADCSRA |= (1 << ADIF);
     1de:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
     1e0:	24 b1       	in	r18, 0x04	; 4
     1e2:	35 b1       	in	r19, 0x05	; 5
}
     1e4:	c9 01       	movw	r24, r18
     1e6:	08 95       	ret

000001e8 <analogLEDTest>:

void analogLEDTest(){
		adc_value = ReadADC();
     1e8:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <ReadADC>
     1ec:	9c 01       	movw	r18, r24
     1ee:	90 93 7f 01 	sts	0x017F, r25
     1f2:	80 93 7e 01 	sts	0x017E, r24
		if (adc_value > 30){
     1f6:	8f 31       	cpi	r24, 0x1F	; 31
     1f8:	91 05       	cpc	r25, r1
     1fa:	28 f1       	brcs	.+74     	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB0);
     1fc:	81 e0       	ldi	r24, 0x01	; 1
     1fe:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 60){
     200:	2d 33       	cpi	r18, 0x3D	; 61
     202:	31 05       	cpc	r19, r1
     204:	00 f1       	brcs	.+64     	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB1);
     206:	82 e0       	ldi	r24, 0x02	; 2
     208:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 90){
     20a:	2b 35       	cpi	r18, 0x5B	; 91
     20c:	31 05       	cpc	r19, r1
     20e:	d8 f0       	brcs	.+54     	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB2);
     210:	84 e0       	ldi	r24, 0x04	; 4
     212:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 120){
     214:	29 37       	cpi	r18, 0x79	; 121
     216:	31 05       	cpc	r19, r1
     218:	b0 f0       	brcs	.+44     	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB3);
     21a:	88 e0       	ldi	r24, 0x08	; 8
     21c:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 150){
     21e:	27 39       	cpi	r18, 0x97	; 151
     220:	31 05       	cpc	r19, r1
     222:	88 f0       	brcs	.+34     	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB4);
     224:	80 e1       	ldi	r24, 0x10	; 16
     226:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 180){
     228:	25 3b       	cpi	r18, 0xB5	; 181
     22a:	31 05       	cpc	r19, r1
     22c:	60 f0       	brcs	.+24     	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB5);
     22e:	80 e2       	ldi	r24, 0x20	; 32
     230:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 210){
     232:	23 3d       	cpi	r18, 0xD3	; 211
     234:	31 05       	cpc	r19, r1
     236:	38 f0       	brcs	.+14     	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB6);
     238:	80 e4       	ldi	r24, 0x40	; 64
     23a:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 240){
     23c:	21 3f       	cpi	r18, 0xF1	; 241
     23e:	31 05       	cpc	r19, r1
     240:	10 f0       	brcs	.+4      	; 0x246 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB7);
     242:	80 e8       	ldi	r24, 0x80	; 128
     244:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value >= 240){
     246:	20 3f       	cpi	r18, 0xF0	; 240
     248:	31 05       	cpc	r19, r1
     24a:	10 f0       	brcs	.+4      	; 0x250 <analogLEDTest+0x68>
			PORTB = 0xFF;
     24c:	8f ef       	ldi	r24, 0xFF	; 255
     24e:	88 bb       	out	0x18, r24	; 24
     250:	08 95       	ret

00000252 <midi_Transmit>:
		}
	}

void midi_Transmit( unsigned char data){
	/* Wait for empty transmit buffer */
	while(! UCSRA & (1 << UDRE) );
     252:	9b b1       	in	r25, 0x0b	; 11

	/* Put data into buffer, sends the data */
	UDR = data;
     254:	8c b9       	out	0x0c, r24	; 12
}
     256:	08 95       	ret

00000258 <midiTransitTest>:
	}	

}

void midiTransitTest(){
	while ((UCSRA & (1 << UDRE)) == 0) {};
     258:	5d 9b       	sbis	0x0b, 5	; 11
     25a:	fe cf       	rjmp	.-4      	; 0x258 <midiTransitTest>

	midi_Transmit(MIDIon);
     25c:	80 91 60 00 	lds	r24, 0x0060
     260:	90 91 61 00 	lds	r25, 0x0061
     264:	0e 94 29 01 	call	0x252	; 0x252 <midi_Transmit>
	midi_Transmit(MIDIb1);
     268:	80 91 62 00 	lds	r24, 0x0062
     26c:	90 91 63 00 	lds	r25, 0x0063
     270:	0e 94 29 01 	call	0x252	; 0x252 <midi_Transmit>
	midi_Transmit(MIDIb2);
     274:	80 91 64 00 	lds	r24, 0x0064
     278:	90 91 65 00 	lds	r25, 0x0065
     27c:	0e 94 29 01 	call	0x252	; 0x252 <midi_Transmit>
	midi_Transmit(MIDIoff);
     280:	80 91 66 00 	lds	r24, 0x0066
     284:	90 91 67 00 	lds	r25, 0x0067
     288:	0e 94 29 01 	call	0x252	; 0x252 <midi_Transmit>
}
     28c:	08 95       	ret

0000028e <playSong>:
void modify(){
	//analogLEDTest();
}


void playSong(){
     28e:	8f 92       	push	r8
     290:	9f 92       	push	r9
     292:	af 92       	push	r10
     294:	bf 92       	push	r11
     296:	cf 92       	push	r12
     298:	df 92       	push	r13
     29a:	ef 92       	push	r14
     29c:	ff 92       	push	r15
     29e:	0f 93       	push	r16
     2a0:	1f 93       	push	r17
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
	eeprom_address= 0x00;
     2a6:	10 92 7b 01 	sts	0x017B, r1
     2aa:	10 92 7a 01 	sts	0x017A, r1
     2ae:	89 e1       	ldi	r24, 0x19	; 25
     2b0:	88 2e       	mov	r8, r24
     2b2:	91 2c       	mov	r9, r1
     2b4:	63 c0       	rjmp	.+198    	; 0x37c <playSong+0xee>
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2b6:	e1 99       	sbic	0x1c, 1	; 28
     2b8:	fe cf       	rjmp	.-4      	; 0x2b6 <playSong+0x28>
	/* Set up address register */
	EEAR = uiAddress;
     2ba:	3f bb       	out	0x1f, r19	; 31
     2bc:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2be:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2c0:	8d b3       	in	r24, 0x1d	; 29


void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
     2c2:	88 bb       	out	0x18, r24	; 24
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2c4:	e1 99       	sbic	0x1c, 1	; 28
     2c6:	fe cf       	rjmp	.-4      	; 0x2c4 <playSong+0x36>
	/* Set up address register */
	EEAR = uiAddress;
     2c8:	3f bb       	out	0x1f, r19	; 31
     2ca:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2cc:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2ce:	8d b3       	in	r24, 0x1d	; 29

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 29 01 	call	0x252	; 0x252 <midi_Transmit>
		eeprom_address++;
     2d6:	c0 91 7a 01 	lds	r28, 0x017A
     2da:	d0 91 7b 01 	lds	r29, 0x017B
     2de:	21 96       	adiw	r28, 0x01	; 1
     2e0:	d0 93 7b 01 	sts	0x017B, r29
     2e4:	c0 93 7a 01 	sts	0x017A, r28
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2e8:	e1 99       	sbic	0x1c, 1	; 28
     2ea:	fe cf       	rjmp	.-4      	; 0x2e8 <playSong+0x5a>
	/* Set up address register */
	EEAR = uiAddress;
     2ec:	df bb       	out	0x1f, r29	; 31
     2ee:	ce bb       	out	0x1e, r28	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2f0:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2f2:	6d b3       	in	r22, 0x1d	; 29
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	80 e0       	ldi	r24, 0x00	; 0
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0e 94 50 06 	call	0xca0	; 0xca0 <__floatunsisf>
     2fe:	5b 01       	movw	r10, r22
     300:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     302:	20 e0       	ldi	r18, 0x00	; 0
     304:	30 e0       	ldi	r19, 0x00	; 0
     306:	4a e7       	ldi	r20, 0x7A	; 122
     308:	53 e4       	ldi	r21, 0x43	; 67
     30a:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
     30e:	7b 01       	movw	r14, r22
     310:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	40 e8       	ldi	r20, 0x80	; 128
     318:	5f e3       	ldi	r21, 0x3F	; 63
     31a:	0e 94 6e 05 	call	0xadc	; 0xadc <__ltsf2>
     31e:	88 23       	and	r24, r24
     320:	1c f4       	brge	.+6      	; 0x328 <playSong+0x9a>
     322:	61 e0       	ldi	r22, 0x01	; 1
     324:	70 e0       	ldi	r23, 0x00	; 0
     326:	22 c0       	rjmp	.+68     	; 0x36c <playSong+0xde>
		__ticks = 1;
	else if (__tmp > 65535)
     328:	c8 01       	movw	r24, r16
     32a:	b7 01       	movw	r22, r14
     32c:	20 e0       	ldi	r18, 0x00	; 0
     32e:	3f ef       	ldi	r19, 0xFF	; 255
     330:	4f e7       	ldi	r20, 0x7F	; 127
     332:	57 e4       	ldi	r21, 0x47	; 71
     334:	0e 94 0e 05 	call	0xa1c	; 0xa1c <__gtsf2>
     338:	18 16       	cp	r1, r24
     33a:	a4 f4       	brge	.+40     	; 0x364 <playSong+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     33c:	c6 01       	movw	r24, r12
     33e:	b5 01       	movw	r22, r10
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	40 e2       	ldi	r20, 0x20	; 32
     346:	51 e4       	ldi	r21, 0x41	; 65
     348:	0e 94 14 04 	call	0x828	; 0x828 <__mulsf3>
     34c:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixunssfsi>
     350:	05 c0       	rjmp	.+10     	; 0x35c <playSong+0xce>
     352:	c4 01       	movw	r24, r8
     354:	01 97       	sbiw	r24, 0x01	; 1
     356:	f1 f7       	brne	.-4      	; 0x354 <playSong+0xc6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     358:	61 50       	subi	r22, 0x01	; 1
     35a:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     35c:	61 15       	cp	r22, r1
     35e:	71 05       	cpc	r23, r1
     360:	c1 f7       	brne	.-16     	; 0x352 <playSong+0xc4>
     362:	07 c0       	rjmp	.+14     	; 0x372 <playSong+0xe4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     364:	c8 01       	movw	r24, r16
     366:	b7 01       	movw	r22, r14
     368:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixunssfsi>
     36c:	cb 01       	movw	r24, r22
     36e:	01 97       	sbiw	r24, 0x01	; 1
     370:	f1 f7       	brne	.-4      	; 0x36e <playSong+0xe0>
		eeprom_address++;
     372:	21 96       	adiw	r28, 0x01	; 1
     374:	d0 93 7b 01 	sts	0x017B, r29
     378:	c0 93 7a 01 	sts	0x017A, r28
}


void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
     37c:	20 91 7a 01 	lds	r18, 0x017A
     380:	30 91 7b 01 	lds	r19, 0x017B
     384:	80 91 7c 01 	lds	r24, 0x017C
     388:	90 91 7d 01 	lds	r25, 0x017D
     38c:	28 17       	cp	r18, r24
     38e:	39 07       	cpc	r19, r25
     390:	08 f4       	brcc	.+2      	; 0x394 <playSong+0x106>
     392:	91 cf       	rjmp	.-222    	; 0x2b6 <playSong+0x28>
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
		eeprom_address++;
	}
	
}
     394:	df 91       	pop	r29
     396:	cf 91       	pop	r28
     398:	1f 91       	pop	r17
     39a:	0f 91       	pop	r16
     39c:	ff 90       	pop	r15
     39e:	ef 90       	pop	r14
     3a0:	df 90       	pop	r13
     3a2:	cf 90       	pop	r12
     3a4:	bf 90       	pop	r11
     3a6:	af 90       	pop	r10
     3a8:	9f 90       	pop	r9
     3aa:	8f 90       	pop	r8
     3ac:	08 95       	ret

000003ae <midi_Receive>:
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     3ae:	5f 9b       	sbis	0x0b, 7	; 11
     3b0:	fe cf       	rjmp	.-4      	; 0x3ae <midi_Receive>

	/* get and return data from buffer */
	return UDR;
     3b2:	8c b1       	in	r24, 0x0c	; 12
}
     3b4:	08 95       	ret

000003b6 <midi_Flush>:

/* flushs the buffer of the midi */
void midi_Flush(void){ 
     3b6:	01 c0       	rjmp	.+2      	; 0x3ba <midi_Flush+0x4>
	unsigned char dummy;
	while (UCSRA & (1 << RXC) ) dummy = UDR;
     3b8:	8c b1       	in	r24, 0x0c	; 12
     3ba:	5f 99       	sbic	0x0b, 7	; 11
     3bc:	fd cf       	rjmp	.-6      	; 0x3b8 <midi_Flush+0x2>
}
     3be:	08 95       	ret

000003c0 <midi_ReadUCSRC>:

unsigned char midi_ReadUCSRC(void){
	unsigned char ucsrc;
	/* read UCSRC */
	//note may need cli() to disable interrupts
	ucsrc = UBRRH;
     3c0:	80 b5       	in	r24, 0x20	; 32
	ucsrc = UCSRC;
     3c2:	80 b5       	in	r24, 0x20	; 32
	return ucsrc;
}
     3c4:	08 95       	ret

000003c6 <TIM16_ReadTCNT1>:

unsigned char TIM16_ReadTCNT1(void){
	unsigned char sreg;
	unsigned char i;
	/* save gloval interrupt flag */
	sreg = SREG;
     3c6:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     3c8:	f8 94       	cli
	/* read TCNT1 into i */
	i = TCNT1;
     3ca:	8c b5       	in	r24, 0x2c	; 44
     3cc:	9d b5       	in	r25, 0x2d	; 45
	/* restore global interrupt flag */
	SREG = sreg;
     3ce:	2f bf       	out	0x3f, r18	; 63
	return i;
}
     3d0:	08 95       	ret

000003d2 <TIM16_WriteTCNT1>:

void TIM16_WriteTCNT1 (unsigned int i){
	unsigned char sreg;
	/* save global interrupt flag */
	sreg = SREG;
     3d2:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     3d4:	f8 94       	cli
	/* set tcnt1 to i */
	TCNT1 = i;
     3d6:	9d bd       	out	0x2d, r25	; 45
     3d8:	8c bd       	out	0x2c, r24	; 44
	/* restore global interrupt flag */
	SREG = sreg;
     3da:	2f bf       	out	0x3f, r18	; 63
}
     3dc:	08 95       	ret

000003de <EEPROM_write>:

void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
	/* wait for completion of previous write */
	while (EECR & (1 <<EEWE));
     3de:	e1 99       	sbic	0x1c, 1	; 28
     3e0:	fe cf       	rjmp	.-4      	; 0x3de <EEPROM_write>

	/* Set up address and data registers */
	EEAR = uiAddress;
     3e2:	9f bb       	out	0x1f, r25	; 31
     3e4:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
     3e6:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1 << EEMWE);
     3e8:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeporm write by setting EEWE */
	EECR |= (1 << EEWE);
     3ea:	e1 9a       	sbi	0x1c, 1	; 28
}
     3ec:	08 95       	ret

000003ee <writeSong2>:
		PORTB ^= 0xFF;
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
     3ee:	cf 93       	push	r28
     3f0:	df 93       	push	r29
     3f2:	c0 e8       	ldi	r28, 0x80	; 128
     3f4:	d1 e0       	ldi	r29, 0x01	; 1
     3f6:	fe 01       	movw	r30, r28
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     3f8:	5f 9b       	sbis	0x0b, 7	; 11
     3fa:	fe cf       	rjmp	.-4      	; 0x3f8 <writeSong2+0xa>

	/* get and return data from buffer */
	return UDR;
     3fc:	8c b1       	in	r24, 0x0c	; 12
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
		midiData[i] = midi_Receive();
     3fe:	81 93       	st	Z+, r24
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
     400:	81 e0       	ldi	r24, 0x01	; 1
     402:	e6 38       	cpi	r30, 0x86	; 134
     404:	f8 07       	cpc	r31, r24
     406:	c1 f7       	brne	.-16     	; 0x3f8 <writeSong2+0xa>
		midiData[i] = midi_Receive();
	}

	PORTB = midiData[1];
     408:	80 91 81 01 	lds	r24, 0x0181
     40c:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 0;
     40e:	1d bc       	out	0x2d, r1	; 45
     410:	1c bc       	out	0x2c, r1	; 44

	midiData[6] = (TCNT1 >> 8);
     412:	8c b5       	in	r24, 0x2c	; 44
     414:	9d b5       	in	r25, 0x2d	; 45
     416:	90 83       	st	Z, r25
	midiData[7] = (TCNT1 & 0xFF);
     418:	8c b5       	in	r24, 0x2c	; 44
     41a:	9d b5       	in	r25, 0x2d	; 45
     41c:	81 83       	std	Z+1, r24	; 0x01

	for(int j= 0; j <6; j++){
		EEPROM_write(eeprom_address, midiData[j]);
     41e:	80 91 7a 01 	lds	r24, 0x017A
     422:	90 91 7b 01 	lds	r25, 0x017B
     426:	69 91       	ld	r22, Y+
     428:	0e 94 ef 01 	call	0x3de	; 0x3de <EEPROM_write>
		eeprom_address++;		
     42c:	80 91 7a 01 	lds	r24, 0x017A
     430:	90 91 7b 01 	lds	r25, 0x017B
     434:	01 96       	adiw	r24, 0x01	; 1
     436:	90 93 7b 01 	sts	0x017B, r25
     43a:	80 93 7a 01 	sts	0x017A, r24
	TCNT1 = 0;

	midiData[6] = (TCNT1 >> 8);
	midiData[7] = (TCNT1 & 0xFF);

	for(int j= 0; j <6; j++){
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	c6 38       	cpi	r28, 0x86	; 134
     442:	d8 07       	cpc	r29, r24
     444:	61 f7       	brne	.-40     	; 0x41e <writeSong2+0x30>
		EEPROM_write(eeprom_address, midiData[j]);
		eeprom_address++;		
	}	

}
     446:	df 91       	pop	r29
     448:	cf 91       	pop	r28
     44a:	08 95       	ret

0000044c <EEPROM_read>:
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     44c:	e1 99       	sbic	0x1c, 1	; 28
     44e:	fe cf       	rjmp	.-4      	; 0x44c <EEPROM_read>
	/* Set up address register */
	EEAR = uiAddress;
     450:	9f bb       	out	0x1f, r25	; 31
     452:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     454:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     456:	8d b3       	in	r24, 0x1d	; 29
}
     458:	08 95       	ret

0000045a <__vector_8>:

/***** Timer Interrupts *****/

ISR(TIMER1_COMPB_vect){
     45a:	1f 92       	push	r1
     45c:	0f 92       	push	r0
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	0f 92       	push	r0
     462:	11 24       	eor	r1, r1
     464:	8f 93       	push	r24
	PORTB^= 0xFF; // blink
     466:	88 b3       	in	r24, 0x18	; 24
     468:	80 95       	com	r24
     46a:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 0; //Reset timer
     46c:	1d bc       	out	0x2d, r1	; 45
     46e:	1c bc       	out	0x2c, r1	; 44
}
     470:	8f 91       	pop	r24
     472:	0f 90       	pop	r0
     474:	0f be       	out	0x3f, r0	; 63
     476:	0f 90       	pop	r0
     478:	1f 90       	pop	r1
     47a:	18 95       	reti

0000047c <__fixunssfsi>:
     47c:	ef 92       	push	r14
     47e:	ff 92       	push	r15
     480:	0f 93       	push	r16
     482:	1f 93       	push	r17
     484:	7b 01       	movw	r14, r22
     486:	8c 01       	movw	r16, r24
     488:	20 e0       	ldi	r18, 0x00	; 0
     48a:	30 e0       	ldi	r19, 0x00	; 0
     48c:	40 e0       	ldi	r20, 0x00	; 0
     48e:	5f e4       	ldi	r21, 0x4F	; 79
     490:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__gesf2>
     494:	88 23       	and	r24, r24
     496:	8c f0       	brlt	.+34     	; 0x4ba <__fixunssfsi+0x3e>
     498:	c8 01       	movw	r24, r16
     49a:	b7 01       	movw	r22, r14
     49c:	20 e0       	ldi	r18, 0x00	; 0
     49e:	30 e0       	ldi	r19, 0x00	; 0
     4a0:	40 e0       	ldi	r20, 0x00	; 0
     4a2:	5f e4       	ldi	r21, 0x4F	; 79
     4a4:	0e 94 b6 03 	call	0x76c	; 0x76c <__subsf3>
     4a8:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fixsfsi>
     4ac:	9b 01       	movw	r18, r22
     4ae:	ac 01       	movw	r20, r24
     4b0:	20 50       	subi	r18, 0x00	; 0
     4b2:	30 40       	sbci	r19, 0x00	; 0
     4b4:	40 40       	sbci	r20, 0x00	; 0
     4b6:	50 48       	sbci	r21, 0x80	; 128
     4b8:	06 c0       	rjmp	.+12     	; 0x4c6 <__fixunssfsi+0x4a>
     4ba:	c8 01       	movw	r24, r16
     4bc:	b7 01       	movw	r22, r14
     4be:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <__fixsfsi>
     4c2:	9b 01       	movw	r18, r22
     4c4:	ac 01       	movw	r20, r24
     4c6:	b9 01       	movw	r22, r18
     4c8:	ca 01       	movw	r24, r20
     4ca:	1f 91       	pop	r17
     4cc:	0f 91       	pop	r16
     4ce:	ff 90       	pop	r15
     4d0:	ef 90       	pop	r14
     4d2:	08 95       	ret

000004d4 <_fpadd_parts>:
     4d4:	a0 e0       	ldi	r26, 0x00	; 0
     4d6:	b0 e0       	ldi	r27, 0x00	; 0
     4d8:	e0 e7       	ldi	r30, 0x70	; 112
     4da:	f2 e0       	ldi	r31, 0x02	; 2
     4dc:	0c 94 be 08 	jmp	0x117c	; 0x117c <__prologue_saves__>
     4e0:	dc 01       	movw	r26, r24
     4e2:	2b 01       	movw	r4, r22
     4e4:	fa 01       	movw	r30, r20
     4e6:	9c 91       	ld	r25, X
     4e8:	92 30       	cpi	r25, 0x02	; 2
     4ea:	08 f4       	brcc	.+2      	; 0x4ee <_fpadd_parts+0x1a>
     4ec:	39 c1       	rjmp	.+626    	; 0x760 <_fpadd_parts+0x28c>
     4ee:	eb 01       	movw	r28, r22
     4f0:	88 81       	ld	r24, Y
     4f2:	82 30       	cpi	r24, 0x02	; 2
     4f4:	08 f4       	brcc	.+2      	; 0x4f8 <_fpadd_parts+0x24>
     4f6:	33 c1       	rjmp	.+614    	; 0x75e <_fpadd_parts+0x28a>
     4f8:	94 30       	cpi	r25, 0x04	; 4
     4fa:	69 f4       	brne	.+26     	; 0x516 <_fpadd_parts+0x42>
     4fc:	84 30       	cpi	r24, 0x04	; 4
     4fe:	09 f0       	breq	.+2      	; 0x502 <_fpadd_parts+0x2e>
     500:	2f c1       	rjmp	.+606    	; 0x760 <_fpadd_parts+0x28c>
     502:	11 96       	adiw	r26, 0x01	; 1
     504:	9c 91       	ld	r25, X
     506:	11 97       	sbiw	r26, 0x01	; 1
     508:	89 81       	ldd	r24, Y+1	; 0x01
     50a:	98 17       	cp	r25, r24
     50c:	09 f4       	brne	.+2      	; 0x510 <_fpadd_parts+0x3c>
     50e:	28 c1       	rjmp	.+592    	; 0x760 <_fpadd_parts+0x28c>
     510:	a8 e6       	ldi	r26, 0x68	; 104
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	25 c1       	rjmp	.+586    	; 0x760 <_fpadd_parts+0x28c>
     516:	84 30       	cpi	r24, 0x04	; 4
     518:	09 f4       	brne	.+2      	; 0x51c <_fpadd_parts+0x48>
     51a:	21 c1       	rjmp	.+578    	; 0x75e <_fpadd_parts+0x28a>
     51c:	82 30       	cpi	r24, 0x02	; 2
     51e:	a9 f4       	brne	.+42     	; 0x54a <_fpadd_parts+0x76>
     520:	92 30       	cpi	r25, 0x02	; 2
     522:	09 f0       	breq	.+2      	; 0x526 <_fpadd_parts+0x52>
     524:	1d c1       	rjmp	.+570    	; 0x760 <_fpadd_parts+0x28c>
     526:	9a 01       	movw	r18, r20
     528:	ad 01       	movw	r20, r26
     52a:	88 e0       	ldi	r24, 0x08	; 8
     52c:	ea 01       	movw	r28, r20
     52e:	09 90       	ld	r0, Y+
     530:	ae 01       	movw	r20, r28
     532:	e9 01       	movw	r28, r18
     534:	09 92       	st	Y+, r0
     536:	9e 01       	movw	r18, r28
     538:	81 50       	subi	r24, 0x01	; 1
     53a:	c1 f7       	brne	.-16     	; 0x52c <_fpadd_parts+0x58>
     53c:	e2 01       	movw	r28, r4
     53e:	89 81       	ldd	r24, Y+1	; 0x01
     540:	11 96       	adiw	r26, 0x01	; 1
     542:	9c 91       	ld	r25, X
     544:	89 23       	and	r24, r25
     546:	81 83       	std	Z+1, r24	; 0x01
     548:	08 c1       	rjmp	.+528    	; 0x75a <_fpadd_parts+0x286>
     54a:	92 30       	cpi	r25, 0x02	; 2
     54c:	09 f4       	brne	.+2      	; 0x550 <_fpadd_parts+0x7c>
     54e:	07 c1       	rjmp	.+526    	; 0x75e <_fpadd_parts+0x28a>
     550:	12 96       	adiw	r26, 0x02	; 2
     552:	2d 90       	ld	r2, X+
     554:	3c 90       	ld	r3, X
     556:	13 97       	sbiw	r26, 0x03	; 3
     558:	eb 01       	movw	r28, r22
     55a:	8a 81       	ldd	r24, Y+2	; 0x02
     55c:	9b 81       	ldd	r25, Y+3	; 0x03
     55e:	14 96       	adiw	r26, 0x04	; 4
     560:	ad 90       	ld	r10, X+
     562:	bd 90       	ld	r11, X+
     564:	cd 90       	ld	r12, X+
     566:	dc 90       	ld	r13, X
     568:	17 97       	sbiw	r26, 0x07	; 7
     56a:	ec 80       	ldd	r14, Y+4	; 0x04
     56c:	fd 80       	ldd	r15, Y+5	; 0x05
     56e:	0e 81       	ldd	r16, Y+6	; 0x06
     570:	1f 81       	ldd	r17, Y+7	; 0x07
     572:	91 01       	movw	r18, r2
     574:	28 1b       	sub	r18, r24
     576:	39 0b       	sbc	r19, r25
     578:	b9 01       	movw	r22, r18
     57a:	37 ff       	sbrs	r19, 7
     57c:	04 c0       	rjmp	.+8      	; 0x586 <_fpadd_parts+0xb2>
     57e:	66 27       	eor	r22, r22
     580:	77 27       	eor	r23, r23
     582:	62 1b       	sub	r22, r18
     584:	73 0b       	sbc	r23, r19
     586:	60 32       	cpi	r22, 0x20	; 32
     588:	71 05       	cpc	r23, r1
     58a:	0c f0       	brlt	.+2      	; 0x58e <_fpadd_parts+0xba>
     58c:	61 c0       	rjmp	.+194    	; 0x650 <_fpadd_parts+0x17c>
     58e:	12 16       	cp	r1, r18
     590:	13 06       	cpc	r1, r19
     592:	6c f5       	brge	.+90     	; 0x5ee <_fpadd_parts+0x11a>
     594:	37 01       	movw	r6, r14
     596:	48 01       	movw	r8, r16
     598:	06 2e       	mov	r0, r22
     59a:	04 c0       	rjmp	.+8      	; 0x5a4 <_fpadd_parts+0xd0>
     59c:	96 94       	lsr	r9
     59e:	87 94       	ror	r8
     5a0:	77 94       	ror	r7
     5a2:	67 94       	ror	r6
     5a4:	0a 94       	dec	r0
     5a6:	d2 f7       	brpl	.-12     	; 0x59c <_fpadd_parts+0xc8>
     5a8:	21 e0       	ldi	r18, 0x01	; 1
     5aa:	30 e0       	ldi	r19, 0x00	; 0
     5ac:	40 e0       	ldi	r20, 0x00	; 0
     5ae:	50 e0       	ldi	r21, 0x00	; 0
     5b0:	04 c0       	rjmp	.+8      	; 0x5ba <_fpadd_parts+0xe6>
     5b2:	22 0f       	add	r18, r18
     5b4:	33 1f       	adc	r19, r19
     5b6:	44 1f       	adc	r20, r20
     5b8:	55 1f       	adc	r21, r21
     5ba:	6a 95       	dec	r22
     5bc:	d2 f7       	brpl	.-12     	; 0x5b2 <_fpadd_parts+0xde>
     5be:	21 50       	subi	r18, 0x01	; 1
     5c0:	30 40       	sbci	r19, 0x00	; 0
     5c2:	40 40       	sbci	r20, 0x00	; 0
     5c4:	50 40       	sbci	r21, 0x00	; 0
     5c6:	2e 21       	and	r18, r14
     5c8:	3f 21       	and	r19, r15
     5ca:	40 23       	and	r20, r16
     5cc:	51 23       	and	r21, r17
     5ce:	21 15       	cp	r18, r1
     5d0:	31 05       	cpc	r19, r1
     5d2:	41 05       	cpc	r20, r1
     5d4:	51 05       	cpc	r21, r1
     5d6:	21 f0       	breq	.+8      	; 0x5e0 <_fpadd_parts+0x10c>
     5d8:	21 e0       	ldi	r18, 0x01	; 1
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	40 e0       	ldi	r20, 0x00	; 0
     5de:	50 e0       	ldi	r21, 0x00	; 0
     5e0:	79 01       	movw	r14, r18
     5e2:	8a 01       	movw	r16, r20
     5e4:	e6 28       	or	r14, r6
     5e6:	f7 28       	or	r15, r7
     5e8:	08 29       	or	r16, r8
     5ea:	19 29       	or	r17, r9
     5ec:	3c c0       	rjmp	.+120    	; 0x666 <_fpadd_parts+0x192>
     5ee:	23 2b       	or	r18, r19
     5f0:	d1 f1       	breq	.+116    	; 0x666 <_fpadd_parts+0x192>
     5f2:	26 0e       	add	r2, r22
     5f4:	37 1e       	adc	r3, r23
     5f6:	35 01       	movw	r6, r10
     5f8:	46 01       	movw	r8, r12
     5fa:	06 2e       	mov	r0, r22
     5fc:	04 c0       	rjmp	.+8      	; 0x606 <_fpadd_parts+0x132>
     5fe:	96 94       	lsr	r9
     600:	87 94       	ror	r8
     602:	77 94       	ror	r7
     604:	67 94       	ror	r6
     606:	0a 94       	dec	r0
     608:	d2 f7       	brpl	.-12     	; 0x5fe <_fpadd_parts+0x12a>
     60a:	21 e0       	ldi	r18, 0x01	; 1
     60c:	30 e0       	ldi	r19, 0x00	; 0
     60e:	40 e0       	ldi	r20, 0x00	; 0
     610:	50 e0       	ldi	r21, 0x00	; 0
     612:	04 c0       	rjmp	.+8      	; 0x61c <_fpadd_parts+0x148>
     614:	22 0f       	add	r18, r18
     616:	33 1f       	adc	r19, r19
     618:	44 1f       	adc	r20, r20
     61a:	55 1f       	adc	r21, r21
     61c:	6a 95       	dec	r22
     61e:	d2 f7       	brpl	.-12     	; 0x614 <_fpadd_parts+0x140>
     620:	21 50       	subi	r18, 0x01	; 1
     622:	30 40       	sbci	r19, 0x00	; 0
     624:	40 40       	sbci	r20, 0x00	; 0
     626:	50 40       	sbci	r21, 0x00	; 0
     628:	2a 21       	and	r18, r10
     62a:	3b 21       	and	r19, r11
     62c:	4c 21       	and	r20, r12
     62e:	5d 21       	and	r21, r13
     630:	21 15       	cp	r18, r1
     632:	31 05       	cpc	r19, r1
     634:	41 05       	cpc	r20, r1
     636:	51 05       	cpc	r21, r1
     638:	21 f0       	breq	.+8      	; 0x642 <_fpadd_parts+0x16e>
     63a:	21 e0       	ldi	r18, 0x01	; 1
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	40 e0       	ldi	r20, 0x00	; 0
     640:	50 e0       	ldi	r21, 0x00	; 0
     642:	59 01       	movw	r10, r18
     644:	6a 01       	movw	r12, r20
     646:	a6 28       	or	r10, r6
     648:	b7 28       	or	r11, r7
     64a:	c8 28       	or	r12, r8
     64c:	d9 28       	or	r13, r9
     64e:	0b c0       	rjmp	.+22     	; 0x666 <_fpadd_parts+0x192>
     650:	82 15       	cp	r24, r2
     652:	93 05       	cpc	r25, r3
     654:	2c f0       	brlt	.+10     	; 0x660 <_fpadd_parts+0x18c>
     656:	1c 01       	movw	r2, r24
     658:	aa 24       	eor	r10, r10
     65a:	bb 24       	eor	r11, r11
     65c:	65 01       	movw	r12, r10
     65e:	03 c0       	rjmp	.+6      	; 0x666 <_fpadd_parts+0x192>
     660:	ee 24       	eor	r14, r14
     662:	ff 24       	eor	r15, r15
     664:	87 01       	movw	r16, r14
     666:	11 96       	adiw	r26, 0x01	; 1
     668:	9c 91       	ld	r25, X
     66a:	d2 01       	movw	r26, r4
     66c:	11 96       	adiw	r26, 0x01	; 1
     66e:	8c 91       	ld	r24, X
     670:	98 17       	cp	r25, r24
     672:	09 f4       	brne	.+2      	; 0x676 <_fpadd_parts+0x1a2>
     674:	45 c0       	rjmp	.+138    	; 0x700 <_fpadd_parts+0x22c>
     676:	99 23       	and	r25, r25
     678:	39 f0       	breq	.+14     	; 0x688 <_fpadd_parts+0x1b4>
     67a:	a8 01       	movw	r20, r16
     67c:	97 01       	movw	r18, r14
     67e:	2a 19       	sub	r18, r10
     680:	3b 09       	sbc	r19, r11
     682:	4c 09       	sbc	r20, r12
     684:	5d 09       	sbc	r21, r13
     686:	06 c0       	rjmp	.+12     	; 0x694 <_fpadd_parts+0x1c0>
     688:	a6 01       	movw	r20, r12
     68a:	95 01       	movw	r18, r10
     68c:	2e 19       	sub	r18, r14
     68e:	3f 09       	sbc	r19, r15
     690:	40 0b       	sbc	r20, r16
     692:	51 0b       	sbc	r21, r17
     694:	57 fd       	sbrc	r21, 7
     696:	08 c0       	rjmp	.+16     	; 0x6a8 <_fpadd_parts+0x1d4>
     698:	11 82       	std	Z+1, r1	; 0x01
     69a:	33 82       	std	Z+3, r3	; 0x03
     69c:	22 82       	std	Z+2, r2	; 0x02
     69e:	24 83       	std	Z+4, r18	; 0x04
     6a0:	35 83       	std	Z+5, r19	; 0x05
     6a2:	46 83       	std	Z+6, r20	; 0x06
     6a4:	57 83       	std	Z+7, r21	; 0x07
     6a6:	1d c0       	rjmp	.+58     	; 0x6e2 <_fpadd_parts+0x20e>
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	81 83       	std	Z+1, r24	; 0x01
     6ac:	33 82       	std	Z+3, r3	; 0x03
     6ae:	22 82       	std	Z+2, r2	; 0x02
     6b0:	88 27       	eor	r24, r24
     6b2:	99 27       	eor	r25, r25
     6b4:	dc 01       	movw	r26, r24
     6b6:	82 1b       	sub	r24, r18
     6b8:	93 0b       	sbc	r25, r19
     6ba:	a4 0b       	sbc	r26, r20
     6bc:	b5 0b       	sbc	r27, r21
     6be:	84 83       	std	Z+4, r24	; 0x04
     6c0:	95 83       	std	Z+5, r25	; 0x05
     6c2:	a6 83       	std	Z+6, r26	; 0x06
     6c4:	b7 83       	std	Z+7, r27	; 0x07
     6c6:	0d c0       	rjmp	.+26     	; 0x6e2 <_fpadd_parts+0x20e>
     6c8:	22 0f       	add	r18, r18
     6ca:	33 1f       	adc	r19, r19
     6cc:	44 1f       	adc	r20, r20
     6ce:	55 1f       	adc	r21, r21
     6d0:	24 83       	std	Z+4, r18	; 0x04
     6d2:	35 83       	std	Z+5, r19	; 0x05
     6d4:	46 83       	std	Z+6, r20	; 0x06
     6d6:	57 83       	std	Z+7, r21	; 0x07
     6d8:	82 81       	ldd	r24, Z+2	; 0x02
     6da:	93 81       	ldd	r25, Z+3	; 0x03
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	93 83       	std	Z+3, r25	; 0x03
     6e0:	82 83       	std	Z+2, r24	; 0x02
     6e2:	24 81       	ldd	r18, Z+4	; 0x04
     6e4:	35 81       	ldd	r19, Z+5	; 0x05
     6e6:	46 81       	ldd	r20, Z+6	; 0x06
     6e8:	57 81       	ldd	r21, Z+7	; 0x07
     6ea:	da 01       	movw	r26, r20
     6ec:	c9 01       	movw	r24, r18
     6ee:	01 97       	sbiw	r24, 0x01	; 1
     6f0:	a1 09       	sbc	r26, r1
     6f2:	b1 09       	sbc	r27, r1
     6f4:	8f 5f       	subi	r24, 0xFF	; 255
     6f6:	9f 4f       	sbci	r25, 0xFF	; 255
     6f8:	af 4f       	sbci	r26, 0xFF	; 255
     6fa:	bf 43       	sbci	r27, 0x3F	; 63
     6fc:	28 f3       	brcs	.-54     	; 0x6c8 <_fpadd_parts+0x1f4>
     6fe:	0b c0       	rjmp	.+22     	; 0x716 <_fpadd_parts+0x242>
     700:	91 83       	std	Z+1, r25	; 0x01
     702:	33 82       	std	Z+3, r3	; 0x03
     704:	22 82       	std	Z+2, r2	; 0x02
     706:	ea 0c       	add	r14, r10
     708:	fb 1c       	adc	r15, r11
     70a:	0c 1d       	adc	r16, r12
     70c:	1d 1d       	adc	r17, r13
     70e:	e4 82       	std	Z+4, r14	; 0x04
     710:	f5 82       	std	Z+5, r15	; 0x05
     712:	06 83       	std	Z+6, r16	; 0x06
     714:	17 83       	std	Z+7, r17	; 0x07
     716:	83 e0       	ldi	r24, 0x03	; 3
     718:	80 83       	st	Z, r24
     71a:	24 81       	ldd	r18, Z+4	; 0x04
     71c:	35 81       	ldd	r19, Z+5	; 0x05
     71e:	46 81       	ldd	r20, Z+6	; 0x06
     720:	57 81       	ldd	r21, Z+7	; 0x07
     722:	57 ff       	sbrs	r21, 7
     724:	1a c0       	rjmp	.+52     	; 0x75a <_fpadd_parts+0x286>
     726:	c9 01       	movw	r24, r18
     728:	aa 27       	eor	r26, r26
     72a:	97 fd       	sbrc	r25, 7
     72c:	a0 95       	com	r26
     72e:	ba 2f       	mov	r27, r26
     730:	81 70       	andi	r24, 0x01	; 1
     732:	90 70       	andi	r25, 0x00	; 0
     734:	a0 70       	andi	r26, 0x00	; 0
     736:	b0 70       	andi	r27, 0x00	; 0
     738:	56 95       	lsr	r21
     73a:	47 95       	ror	r20
     73c:	37 95       	ror	r19
     73e:	27 95       	ror	r18
     740:	82 2b       	or	r24, r18
     742:	93 2b       	or	r25, r19
     744:	a4 2b       	or	r26, r20
     746:	b5 2b       	or	r27, r21
     748:	84 83       	std	Z+4, r24	; 0x04
     74a:	95 83       	std	Z+5, r25	; 0x05
     74c:	a6 83       	std	Z+6, r26	; 0x06
     74e:	b7 83       	std	Z+7, r27	; 0x07
     750:	82 81       	ldd	r24, Z+2	; 0x02
     752:	93 81       	ldd	r25, Z+3	; 0x03
     754:	01 96       	adiw	r24, 0x01	; 1
     756:	93 83       	std	Z+3, r25	; 0x03
     758:	82 83       	std	Z+2, r24	; 0x02
     75a:	df 01       	movw	r26, r30
     75c:	01 c0       	rjmp	.+2      	; 0x760 <_fpadd_parts+0x28c>
     75e:	d2 01       	movw	r26, r4
     760:	cd 01       	movw	r24, r26
     762:	cd b7       	in	r28, 0x3d	; 61
     764:	de b7       	in	r29, 0x3e	; 62
     766:	e2 e1       	ldi	r30, 0x12	; 18
     768:	0c 94 da 08 	jmp	0x11b4	; 0x11b4 <__epilogue_restores__>

0000076c <__subsf3>:
     76c:	a0 e2       	ldi	r26, 0x20	; 32
     76e:	b0 e0       	ldi	r27, 0x00	; 0
     770:	ec eb       	ldi	r30, 0xBC	; 188
     772:	f3 e0       	ldi	r31, 0x03	; 3
     774:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__prologue_saves__+0x18>
     778:	69 83       	std	Y+1, r22	; 0x01
     77a:	7a 83       	std	Y+2, r23	; 0x02
     77c:	8b 83       	std	Y+3, r24	; 0x03
     77e:	9c 83       	std	Y+4, r25	; 0x04
     780:	2d 83       	std	Y+5, r18	; 0x05
     782:	3e 83       	std	Y+6, r19	; 0x06
     784:	4f 83       	std	Y+7, r20	; 0x07
     786:	58 87       	std	Y+8, r21	; 0x08
     788:	e9 e0       	ldi	r30, 0x09	; 9
     78a:	ee 2e       	mov	r14, r30
     78c:	f1 2c       	mov	r15, r1
     78e:	ec 0e       	add	r14, r28
     790:	fd 1e       	adc	r15, r29
     792:	ce 01       	movw	r24, r28
     794:	01 96       	adiw	r24, 0x01	; 1
     796:	b7 01       	movw	r22, r14
     798:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     79c:	8e 01       	movw	r16, r28
     79e:	0f 5e       	subi	r16, 0xEF	; 239
     7a0:	1f 4f       	sbci	r17, 0xFF	; 255
     7a2:	ce 01       	movw	r24, r28
     7a4:	05 96       	adiw	r24, 0x05	; 5
     7a6:	b8 01       	movw	r22, r16
     7a8:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     7ac:	8a 89       	ldd	r24, Y+18	; 0x12
     7ae:	91 e0       	ldi	r25, 0x01	; 1
     7b0:	89 27       	eor	r24, r25
     7b2:	8a 8b       	std	Y+18, r24	; 0x12
     7b4:	c7 01       	movw	r24, r14
     7b6:	b8 01       	movw	r22, r16
     7b8:	ae 01       	movw	r20, r28
     7ba:	47 5e       	subi	r20, 0xE7	; 231
     7bc:	5f 4f       	sbci	r21, 0xFF	; 255
     7be:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_fpadd_parts>
     7c2:	0e 94 18 07 	call	0xe30	; 0xe30 <__pack_f>
     7c6:	a0 96       	adiw	r28, 0x20	; 32
     7c8:	e6 e0       	ldi	r30, 0x06	; 6
     7ca:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__epilogue_restores__+0x18>

000007ce <__addsf3>:
     7ce:	a0 e2       	ldi	r26, 0x20	; 32
     7d0:	b0 e0       	ldi	r27, 0x00	; 0
     7d2:	ed ee       	ldi	r30, 0xED	; 237
     7d4:	f3 e0       	ldi	r31, 0x03	; 3
     7d6:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__prologue_saves__+0x18>
     7da:	69 83       	std	Y+1, r22	; 0x01
     7dc:	7a 83       	std	Y+2, r23	; 0x02
     7de:	8b 83       	std	Y+3, r24	; 0x03
     7e0:	9c 83       	std	Y+4, r25	; 0x04
     7e2:	2d 83       	std	Y+5, r18	; 0x05
     7e4:	3e 83       	std	Y+6, r19	; 0x06
     7e6:	4f 83       	std	Y+7, r20	; 0x07
     7e8:	58 87       	std	Y+8, r21	; 0x08
     7ea:	f9 e0       	ldi	r31, 0x09	; 9
     7ec:	ef 2e       	mov	r14, r31
     7ee:	f1 2c       	mov	r15, r1
     7f0:	ec 0e       	add	r14, r28
     7f2:	fd 1e       	adc	r15, r29
     7f4:	ce 01       	movw	r24, r28
     7f6:	01 96       	adiw	r24, 0x01	; 1
     7f8:	b7 01       	movw	r22, r14
     7fa:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     7fe:	8e 01       	movw	r16, r28
     800:	0f 5e       	subi	r16, 0xEF	; 239
     802:	1f 4f       	sbci	r17, 0xFF	; 255
     804:	ce 01       	movw	r24, r28
     806:	05 96       	adiw	r24, 0x05	; 5
     808:	b8 01       	movw	r22, r16
     80a:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     80e:	c7 01       	movw	r24, r14
     810:	b8 01       	movw	r22, r16
     812:	ae 01       	movw	r20, r28
     814:	47 5e       	subi	r20, 0xE7	; 231
     816:	5f 4f       	sbci	r21, 0xFF	; 255
     818:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <_fpadd_parts>
     81c:	0e 94 18 07 	call	0xe30	; 0xe30 <__pack_f>
     820:	a0 96       	adiw	r28, 0x20	; 32
     822:	e6 e0       	ldi	r30, 0x06	; 6
     824:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__epilogue_restores__+0x18>

00000828 <__mulsf3>:
     828:	a0 e2       	ldi	r26, 0x20	; 32
     82a:	b0 e0       	ldi	r27, 0x00	; 0
     82c:	ea e1       	ldi	r30, 0x1A	; 26
     82e:	f4 e0       	ldi	r31, 0x04	; 4
     830:	0c 94 be 08 	jmp	0x117c	; 0x117c <__prologue_saves__>
     834:	69 83       	std	Y+1, r22	; 0x01
     836:	7a 83       	std	Y+2, r23	; 0x02
     838:	8b 83       	std	Y+3, r24	; 0x03
     83a:	9c 83       	std	Y+4, r25	; 0x04
     83c:	2d 83       	std	Y+5, r18	; 0x05
     83e:	3e 83       	std	Y+6, r19	; 0x06
     840:	4f 83       	std	Y+7, r20	; 0x07
     842:	58 87       	std	Y+8, r21	; 0x08
     844:	ce 01       	movw	r24, r28
     846:	01 96       	adiw	r24, 0x01	; 1
     848:	be 01       	movw	r22, r28
     84a:	67 5f       	subi	r22, 0xF7	; 247
     84c:	7f 4f       	sbci	r23, 0xFF	; 255
     84e:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     852:	ce 01       	movw	r24, r28
     854:	05 96       	adiw	r24, 0x05	; 5
     856:	be 01       	movw	r22, r28
     858:	6f 5e       	subi	r22, 0xEF	; 239
     85a:	7f 4f       	sbci	r23, 0xFF	; 255
     85c:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     860:	99 85       	ldd	r25, Y+9	; 0x09
     862:	92 30       	cpi	r25, 0x02	; 2
     864:	88 f0       	brcs	.+34     	; 0x888 <__stack+0x29>
     866:	89 89       	ldd	r24, Y+17	; 0x11
     868:	82 30       	cpi	r24, 0x02	; 2
     86a:	c8 f0       	brcs	.+50     	; 0x89e <__stack+0x3f>
     86c:	94 30       	cpi	r25, 0x04	; 4
     86e:	19 f4       	brne	.+6      	; 0x876 <__stack+0x17>
     870:	82 30       	cpi	r24, 0x02	; 2
     872:	51 f4       	brne	.+20     	; 0x888 <__stack+0x29>
     874:	04 c0       	rjmp	.+8      	; 0x87e <__stack+0x1f>
     876:	84 30       	cpi	r24, 0x04	; 4
     878:	29 f4       	brne	.+10     	; 0x884 <__stack+0x25>
     87a:	92 30       	cpi	r25, 0x02	; 2
     87c:	81 f4       	brne	.+32     	; 0x89e <__stack+0x3f>
     87e:	88 e6       	ldi	r24, 0x68	; 104
     880:	90 e0       	ldi	r25, 0x00	; 0
     882:	c6 c0       	rjmp	.+396    	; 0xa10 <__stack+0x1b1>
     884:	92 30       	cpi	r25, 0x02	; 2
     886:	49 f4       	brne	.+18     	; 0x89a <__stack+0x3b>
     888:	20 e0       	ldi	r18, 0x00	; 0
     88a:	9a 85       	ldd	r25, Y+10	; 0x0a
     88c:	8a 89       	ldd	r24, Y+18	; 0x12
     88e:	98 13       	cpse	r25, r24
     890:	21 e0       	ldi	r18, 0x01	; 1
     892:	2a 87       	std	Y+10, r18	; 0x0a
     894:	ce 01       	movw	r24, r28
     896:	09 96       	adiw	r24, 0x09	; 9
     898:	bb c0       	rjmp	.+374    	; 0xa10 <__stack+0x1b1>
     89a:	82 30       	cpi	r24, 0x02	; 2
     89c:	49 f4       	brne	.+18     	; 0x8b0 <__stack+0x51>
     89e:	20 e0       	ldi	r18, 0x00	; 0
     8a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     8a2:	8a 89       	ldd	r24, Y+18	; 0x12
     8a4:	98 13       	cpse	r25, r24
     8a6:	21 e0       	ldi	r18, 0x01	; 1
     8a8:	2a 8b       	std	Y+18, r18	; 0x12
     8aa:	ce 01       	movw	r24, r28
     8ac:	41 96       	adiw	r24, 0x11	; 17
     8ae:	b0 c0       	rjmp	.+352    	; 0xa10 <__stack+0x1b1>
     8b0:	2d 84       	ldd	r2, Y+13	; 0x0d
     8b2:	3e 84       	ldd	r3, Y+14	; 0x0e
     8b4:	4f 84       	ldd	r4, Y+15	; 0x0f
     8b6:	58 88       	ldd	r5, Y+16	; 0x10
     8b8:	6d 88       	ldd	r6, Y+21	; 0x15
     8ba:	7e 88       	ldd	r7, Y+22	; 0x16
     8bc:	8f 88       	ldd	r8, Y+23	; 0x17
     8be:	98 8c       	ldd	r9, Y+24	; 0x18
     8c0:	ee 24       	eor	r14, r14
     8c2:	ff 24       	eor	r15, r15
     8c4:	87 01       	movw	r16, r14
     8c6:	aa 24       	eor	r10, r10
     8c8:	bb 24       	eor	r11, r11
     8ca:	65 01       	movw	r12, r10
     8cc:	40 e0       	ldi	r20, 0x00	; 0
     8ce:	50 e0       	ldi	r21, 0x00	; 0
     8d0:	60 e0       	ldi	r22, 0x00	; 0
     8d2:	70 e0       	ldi	r23, 0x00	; 0
     8d4:	e0 e0       	ldi	r30, 0x00	; 0
     8d6:	f0 e0       	ldi	r31, 0x00	; 0
     8d8:	c1 01       	movw	r24, r2
     8da:	81 70       	andi	r24, 0x01	; 1
     8dc:	90 70       	andi	r25, 0x00	; 0
     8de:	89 2b       	or	r24, r25
     8e0:	e9 f0       	breq	.+58     	; 0x91c <__stack+0xbd>
     8e2:	e6 0c       	add	r14, r6
     8e4:	f7 1c       	adc	r15, r7
     8e6:	08 1d       	adc	r16, r8
     8e8:	19 1d       	adc	r17, r9
     8ea:	9a 01       	movw	r18, r20
     8ec:	ab 01       	movw	r20, r22
     8ee:	2a 0d       	add	r18, r10
     8f0:	3b 1d       	adc	r19, r11
     8f2:	4c 1d       	adc	r20, r12
     8f4:	5d 1d       	adc	r21, r13
     8f6:	80 e0       	ldi	r24, 0x00	; 0
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	e6 14       	cp	r14, r6
     900:	f7 04       	cpc	r15, r7
     902:	08 05       	cpc	r16, r8
     904:	19 05       	cpc	r17, r9
     906:	20 f4       	brcc	.+8      	; 0x910 <__stack+0xb1>
     908:	81 e0       	ldi	r24, 0x01	; 1
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	a0 e0       	ldi	r26, 0x00	; 0
     90e:	b0 e0       	ldi	r27, 0x00	; 0
     910:	ba 01       	movw	r22, r20
     912:	a9 01       	movw	r20, r18
     914:	48 0f       	add	r20, r24
     916:	59 1f       	adc	r21, r25
     918:	6a 1f       	adc	r22, r26
     91a:	7b 1f       	adc	r23, r27
     91c:	aa 0c       	add	r10, r10
     91e:	bb 1c       	adc	r11, r11
     920:	cc 1c       	adc	r12, r12
     922:	dd 1c       	adc	r13, r13
     924:	97 fe       	sbrs	r9, 7
     926:	08 c0       	rjmp	.+16     	; 0x938 <__stack+0xd9>
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	90 e0       	ldi	r25, 0x00	; 0
     92c:	a0 e0       	ldi	r26, 0x00	; 0
     92e:	b0 e0       	ldi	r27, 0x00	; 0
     930:	a8 2a       	or	r10, r24
     932:	b9 2a       	or	r11, r25
     934:	ca 2a       	or	r12, r26
     936:	db 2a       	or	r13, r27
     938:	31 96       	adiw	r30, 0x01	; 1
     93a:	e0 32       	cpi	r30, 0x20	; 32
     93c:	f1 05       	cpc	r31, r1
     93e:	49 f0       	breq	.+18     	; 0x952 <__stack+0xf3>
     940:	66 0c       	add	r6, r6
     942:	77 1c       	adc	r7, r7
     944:	88 1c       	adc	r8, r8
     946:	99 1c       	adc	r9, r9
     948:	56 94       	lsr	r5
     94a:	47 94       	ror	r4
     94c:	37 94       	ror	r3
     94e:	27 94       	ror	r2
     950:	c3 cf       	rjmp	.-122    	; 0x8d8 <__stack+0x79>
     952:	fa 85       	ldd	r31, Y+10	; 0x0a
     954:	ea 89       	ldd	r30, Y+18	; 0x12
     956:	2b 89       	ldd	r18, Y+19	; 0x13
     958:	3c 89       	ldd	r19, Y+20	; 0x14
     95a:	8b 85       	ldd	r24, Y+11	; 0x0b
     95c:	9c 85       	ldd	r25, Y+12	; 0x0c
     95e:	28 0f       	add	r18, r24
     960:	39 1f       	adc	r19, r25
     962:	2e 5f       	subi	r18, 0xFE	; 254
     964:	3f 4f       	sbci	r19, 0xFF	; 255
     966:	17 c0       	rjmp	.+46     	; 0x996 <__stack+0x137>
     968:	ca 01       	movw	r24, r20
     96a:	81 70       	andi	r24, 0x01	; 1
     96c:	90 70       	andi	r25, 0x00	; 0
     96e:	89 2b       	or	r24, r25
     970:	61 f0       	breq	.+24     	; 0x98a <__stack+0x12b>
     972:	16 95       	lsr	r17
     974:	07 95       	ror	r16
     976:	f7 94       	ror	r15
     978:	e7 94       	ror	r14
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	a0 e0       	ldi	r26, 0x00	; 0
     980:	b0 e8       	ldi	r27, 0x80	; 128
     982:	e8 2a       	or	r14, r24
     984:	f9 2a       	or	r15, r25
     986:	0a 2b       	or	r16, r26
     988:	1b 2b       	or	r17, r27
     98a:	76 95       	lsr	r23
     98c:	67 95       	ror	r22
     98e:	57 95       	ror	r21
     990:	47 95       	ror	r20
     992:	2f 5f       	subi	r18, 0xFF	; 255
     994:	3f 4f       	sbci	r19, 0xFF	; 255
     996:	77 fd       	sbrc	r23, 7
     998:	e7 cf       	rjmp	.-50     	; 0x968 <__stack+0x109>
     99a:	0c c0       	rjmp	.+24     	; 0x9b4 <__stack+0x155>
     99c:	44 0f       	add	r20, r20
     99e:	55 1f       	adc	r21, r21
     9a0:	66 1f       	adc	r22, r22
     9a2:	77 1f       	adc	r23, r23
     9a4:	17 fd       	sbrc	r17, 7
     9a6:	41 60       	ori	r20, 0x01	; 1
     9a8:	ee 0c       	add	r14, r14
     9aa:	ff 1c       	adc	r15, r15
     9ac:	00 1f       	adc	r16, r16
     9ae:	11 1f       	adc	r17, r17
     9b0:	21 50       	subi	r18, 0x01	; 1
     9b2:	30 40       	sbci	r19, 0x00	; 0
     9b4:	40 30       	cpi	r20, 0x00	; 0
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	59 07       	cpc	r21, r25
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	69 07       	cpc	r22, r25
     9be:	90 e4       	ldi	r25, 0x40	; 64
     9c0:	79 07       	cpc	r23, r25
     9c2:	60 f3       	brcs	.-40     	; 0x99c <__stack+0x13d>
     9c4:	2b 8f       	std	Y+27, r18	; 0x1b
     9c6:	3c 8f       	std	Y+28, r19	; 0x1c
     9c8:	db 01       	movw	r26, r22
     9ca:	ca 01       	movw	r24, r20
     9cc:	8f 77       	andi	r24, 0x7F	; 127
     9ce:	90 70       	andi	r25, 0x00	; 0
     9d0:	a0 70       	andi	r26, 0x00	; 0
     9d2:	b0 70       	andi	r27, 0x00	; 0
     9d4:	80 34       	cpi	r24, 0x40	; 64
     9d6:	91 05       	cpc	r25, r1
     9d8:	a1 05       	cpc	r26, r1
     9da:	b1 05       	cpc	r27, r1
     9dc:	61 f4       	brne	.+24     	; 0x9f6 <__stack+0x197>
     9de:	47 fd       	sbrc	r20, 7
     9e0:	0a c0       	rjmp	.+20     	; 0x9f6 <__stack+0x197>
     9e2:	e1 14       	cp	r14, r1
     9e4:	f1 04       	cpc	r15, r1
     9e6:	01 05       	cpc	r16, r1
     9e8:	11 05       	cpc	r17, r1
     9ea:	29 f0       	breq	.+10     	; 0x9f6 <__stack+0x197>
     9ec:	40 5c       	subi	r20, 0xC0	; 192
     9ee:	5f 4f       	sbci	r21, 0xFF	; 255
     9f0:	6f 4f       	sbci	r22, 0xFF	; 255
     9f2:	7f 4f       	sbci	r23, 0xFF	; 255
     9f4:	40 78       	andi	r20, 0x80	; 128
     9f6:	1a 8e       	std	Y+26, r1	; 0x1a
     9f8:	fe 17       	cp	r31, r30
     9fa:	11 f0       	breq	.+4      	; 0xa00 <__stack+0x1a1>
     9fc:	81 e0       	ldi	r24, 0x01	; 1
     9fe:	8a 8f       	std	Y+26, r24	; 0x1a
     a00:	4d 8f       	std	Y+29, r20	; 0x1d
     a02:	5e 8f       	std	Y+30, r21	; 0x1e
     a04:	6f 8f       	std	Y+31, r22	; 0x1f
     a06:	78 a3       	std	Y+32, r23	; 0x20
     a08:	83 e0       	ldi	r24, 0x03	; 3
     a0a:	89 8f       	std	Y+25, r24	; 0x19
     a0c:	ce 01       	movw	r24, r28
     a0e:	49 96       	adiw	r24, 0x19	; 25
     a10:	0e 94 18 07 	call	0xe30	; 0xe30 <__pack_f>
     a14:	a0 96       	adiw	r28, 0x20	; 32
     a16:	e2 e1       	ldi	r30, 0x12	; 18
     a18:	0c 94 da 08 	jmp	0x11b4	; 0x11b4 <__epilogue_restores__>

00000a1c <__gtsf2>:
     a1c:	a8 e1       	ldi	r26, 0x18	; 24
     a1e:	b0 e0       	ldi	r27, 0x00	; 0
     a20:	e4 e1       	ldi	r30, 0x14	; 20
     a22:	f5 e0       	ldi	r31, 0x05	; 5
     a24:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__prologue_saves__+0x18>
     a28:	69 83       	std	Y+1, r22	; 0x01
     a2a:	7a 83       	std	Y+2, r23	; 0x02
     a2c:	8b 83       	std	Y+3, r24	; 0x03
     a2e:	9c 83       	std	Y+4, r25	; 0x04
     a30:	2d 83       	std	Y+5, r18	; 0x05
     a32:	3e 83       	std	Y+6, r19	; 0x06
     a34:	4f 83       	std	Y+7, r20	; 0x07
     a36:	58 87       	std	Y+8, r21	; 0x08
     a38:	89 e0       	ldi	r24, 0x09	; 9
     a3a:	e8 2e       	mov	r14, r24
     a3c:	f1 2c       	mov	r15, r1
     a3e:	ec 0e       	add	r14, r28
     a40:	fd 1e       	adc	r15, r29
     a42:	ce 01       	movw	r24, r28
     a44:	01 96       	adiw	r24, 0x01	; 1
     a46:	b7 01       	movw	r22, r14
     a48:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     a4c:	8e 01       	movw	r16, r28
     a4e:	0f 5e       	subi	r16, 0xEF	; 239
     a50:	1f 4f       	sbci	r17, 0xFF	; 255
     a52:	ce 01       	movw	r24, r28
     a54:	05 96       	adiw	r24, 0x05	; 5
     a56:	b8 01       	movw	r22, r16
     a58:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     a5c:	89 85       	ldd	r24, Y+9	; 0x09
     a5e:	82 30       	cpi	r24, 0x02	; 2
     a60:	40 f0       	brcs	.+16     	; 0xa72 <__gtsf2+0x56>
     a62:	89 89       	ldd	r24, Y+17	; 0x11
     a64:	82 30       	cpi	r24, 0x02	; 2
     a66:	28 f0       	brcs	.+10     	; 0xa72 <__gtsf2+0x56>
     a68:	c7 01       	movw	r24, r14
     a6a:	b8 01       	movw	r22, r16
     a6c:	0e 94 65 08 	call	0x10ca	; 0x10ca <__fpcmp_parts_f>
     a70:	01 c0       	rjmp	.+2      	; 0xa74 <__gtsf2+0x58>
     a72:	8f ef       	ldi	r24, 0xFF	; 255
     a74:	68 96       	adiw	r28, 0x18	; 24
     a76:	e6 e0       	ldi	r30, 0x06	; 6
     a78:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__epilogue_restores__+0x18>

00000a7c <__gesf2>:
     a7c:	a8 e1       	ldi	r26, 0x18	; 24
     a7e:	b0 e0       	ldi	r27, 0x00	; 0
     a80:	e4 e4       	ldi	r30, 0x44	; 68
     a82:	f5 e0       	ldi	r31, 0x05	; 5
     a84:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__prologue_saves__+0x18>
     a88:	69 83       	std	Y+1, r22	; 0x01
     a8a:	7a 83       	std	Y+2, r23	; 0x02
     a8c:	8b 83       	std	Y+3, r24	; 0x03
     a8e:	9c 83       	std	Y+4, r25	; 0x04
     a90:	2d 83       	std	Y+5, r18	; 0x05
     a92:	3e 83       	std	Y+6, r19	; 0x06
     a94:	4f 83       	std	Y+7, r20	; 0x07
     a96:	58 87       	std	Y+8, r21	; 0x08
     a98:	89 e0       	ldi	r24, 0x09	; 9
     a9a:	e8 2e       	mov	r14, r24
     a9c:	f1 2c       	mov	r15, r1
     a9e:	ec 0e       	add	r14, r28
     aa0:	fd 1e       	adc	r15, r29
     aa2:	ce 01       	movw	r24, r28
     aa4:	01 96       	adiw	r24, 0x01	; 1
     aa6:	b7 01       	movw	r22, r14
     aa8:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     aac:	8e 01       	movw	r16, r28
     aae:	0f 5e       	subi	r16, 0xEF	; 239
     ab0:	1f 4f       	sbci	r17, 0xFF	; 255
     ab2:	ce 01       	movw	r24, r28
     ab4:	05 96       	adiw	r24, 0x05	; 5
     ab6:	b8 01       	movw	r22, r16
     ab8:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     abc:	89 85       	ldd	r24, Y+9	; 0x09
     abe:	82 30       	cpi	r24, 0x02	; 2
     ac0:	40 f0       	brcs	.+16     	; 0xad2 <__gesf2+0x56>
     ac2:	89 89       	ldd	r24, Y+17	; 0x11
     ac4:	82 30       	cpi	r24, 0x02	; 2
     ac6:	28 f0       	brcs	.+10     	; 0xad2 <__gesf2+0x56>
     ac8:	c7 01       	movw	r24, r14
     aca:	b8 01       	movw	r22, r16
     acc:	0e 94 65 08 	call	0x10ca	; 0x10ca <__fpcmp_parts_f>
     ad0:	01 c0       	rjmp	.+2      	; 0xad4 <__gesf2+0x58>
     ad2:	8f ef       	ldi	r24, 0xFF	; 255
     ad4:	68 96       	adiw	r28, 0x18	; 24
     ad6:	e6 e0       	ldi	r30, 0x06	; 6
     ad8:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__epilogue_restores__+0x18>

00000adc <__ltsf2>:
     adc:	a8 e1       	ldi	r26, 0x18	; 24
     ade:	b0 e0       	ldi	r27, 0x00	; 0
     ae0:	e4 e7       	ldi	r30, 0x74	; 116
     ae2:	f5 e0       	ldi	r31, 0x05	; 5
     ae4:	0c 94 ca 08 	jmp	0x1194	; 0x1194 <__prologue_saves__+0x18>
     ae8:	69 83       	std	Y+1, r22	; 0x01
     aea:	7a 83       	std	Y+2, r23	; 0x02
     aec:	8b 83       	std	Y+3, r24	; 0x03
     aee:	9c 83       	std	Y+4, r25	; 0x04
     af0:	2d 83       	std	Y+5, r18	; 0x05
     af2:	3e 83       	std	Y+6, r19	; 0x06
     af4:	4f 83       	std	Y+7, r20	; 0x07
     af6:	58 87       	std	Y+8, r21	; 0x08
     af8:	89 e0       	ldi	r24, 0x09	; 9
     afa:	e8 2e       	mov	r14, r24
     afc:	f1 2c       	mov	r15, r1
     afe:	ec 0e       	add	r14, r28
     b00:	fd 1e       	adc	r15, r29
     b02:	ce 01       	movw	r24, r28
     b04:	01 96       	adiw	r24, 0x01	; 1
     b06:	b7 01       	movw	r22, r14
     b08:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     b0c:	8e 01       	movw	r16, r28
     b0e:	0f 5e       	subi	r16, 0xEF	; 239
     b10:	1f 4f       	sbci	r17, 0xFF	; 255
     b12:	ce 01       	movw	r24, r28
     b14:	05 96       	adiw	r24, 0x05	; 5
     b16:	b8 01       	movw	r22, r16
     b18:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     b1c:	89 85       	ldd	r24, Y+9	; 0x09
     b1e:	82 30       	cpi	r24, 0x02	; 2
     b20:	40 f0       	brcs	.+16     	; 0xb32 <__ltsf2+0x56>
     b22:	89 89       	ldd	r24, Y+17	; 0x11
     b24:	82 30       	cpi	r24, 0x02	; 2
     b26:	28 f0       	brcs	.+10     	; 0xb32 <__ltsf2+0x56>
     b28:	c7 01       	movw	r24, r14
     b2a:	b8 01       	movw	r22, r16
     b2c:	0e 94 65 08 	call	0x10ca	; 0x10ca <__fpcmp_parts_f>
     b30:	01 c0       	rjmp	.+2      	; 0xb34 <__ltsf2+0x58>
     b32:	81 e0       	ldi	r24, 0x01	; 1
     b34:	68 96       	adiw	r28, 0x18	; 24
     b36:	e6 e0       	ldi	r30, 0x06	; 6
     b38:	0c 94 e6 08 	jmp	0x11cc	; 0x11cc <__epilogue_restores__+0x18>

00000b3c <__floatsisf>:
     b3c:	a8 e0       	ldi	r26, 0x08	; 8
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	e4 ea       	ldi	r30, 0xA4	; 164
     b42:	f5 e0       	ldi	r31, 0x05	; 5
     b44:	0c 94 c7 08 	jmp	0x118e	; 0x118e <__prologue_saves__+0x12>
     b48:	9b 01       	movw	r18, r22
     b4a:	ac 01       	movw	r20, r24
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	89 83       	std	Y+1, r24	; 0x01
     b50:	da 01       	movw	r26, r20
     b52:	c9 01       	movw	r24, r18
     b54:	88 27       	eor	r24, r24
     b56:	b7 fd       	sbrc	r27, 7
     b58:	83 95       	inc	r24
     b5a:	99 27       	eor	r25, r25
     b5c:	aa 27       	eor	r26, r26
     b5e:	bb 27       	eor	r27, r27
     b60:	b8 2e       	mov	r11, r24
     b62:	21 15       	cp	r18, r1
     b64:	31 05       	cpc	r19, r1
     b66:	41 05       	cpc	r20, r1
     b68:	51 05       	cpc	r21, r1
     b6a:	19 f4       	brne	.+6      	; 0xb72 <__floatsisf+0x36>
     b6c:	82 e0       	ldi	r24, 0x02	; 2
     b6e:	89 83       	std	Y+1, r24	; 0x01
     b70:	3a c0       	rjmp	.+116    	; 0xbe6 <__floatsisf+0xaa>
     b72:	88 23       	and	r24, r24
     b74:	a9 f0       	breq	.+42     	; 0xba0 <__floatsisf+0x64>
     b76:	20 30       	cpi	r18, 0x00	; 0
     b78:	80 e0       	ldi	r24, 0x00	; 0
     b7a:	38 07       	cpc	r19, r24
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	48 07       	cpc	r20, r24
     b80:	80 e8       	ldi	r24, 0x80	; 128
     b82:	58 07       	cpc	r21, r24
     b84:	29 f4       	brne	.+10     	; 0xb90 <__floatsisf+0x54>
     b86:	60 e0       	ldi	r22, 0x00	; 0
     b88:	70 e0       	ldi	r23, 0x00	; 0
     b8a:	80 e0       	ldi	r24, 0x00	; 0
     b8c:	9f ec       	ldi	r25, 0xCF	; 207
     b8e:	30 c0       	rjmp	.+96     	; 0xbf0 <__floatsisf+0xb4>
     b90:	ee 24       	eor	r14, r14
     b92:	ff 24       	eor	r15, r15
     b94:	87 01       	movw	r16, r14
     b96:	e2 1a       	sub	r14, r18
     b98:	f3 0a       	sbc	r15, r19
     b9a:	04 0b       	sbc	r16, r20
     b9c:	15 0b       	sbc	r17, r21
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <__floatsisf+0x68>
     ba0:	79 01       	movw	r14, r18
     ba2:	8a 01       	movw	r16, r20
     ba4:	8e e1       	ldi	r24, 0x1E	; 30
     ba6:	c8 2e       	mov	r12, r24
     ba8:	d1 2c       	mov	r13, r1
     baa:	dc 82       	std	Y+4, r13	; 0x04
     bac:	cb 82       	std	Y+3, r12	; 0x03
     bae:	ed 82       	std	Y+5, r14	; 0x05
     bb0:	fe 82       	std	Y+6, r15	; 0x06
     bb2:	0f 83       	std	Y+7, r16	; 0x07
     bb4:	18 87       	std	Y+8, r17	; 0x08
     bb6:	c8 01       	movw	r24, r16
     bb8:	b7 01       	movw	r22, r14
     bba:	0e 94 c9 06 	call	0xd92	; 0xd92 <__clzsi2>
     bbe:	01 97       	sbiw	r24, 0x01	; 1
     bc0:	18 16       	cp	r1, r24
     bc2:	19 06       	cpc	r1, r25
     bc4:	84 f4       	brge	.+32     	; 0xbe6 <__floatsisf+0xaa>
     bc6:	08 2e       	mov	r0, r24
     bc8:	04 c0       	rjmp	.+8      	; 0xbd2 <__floatsisf+0x96>
     bca:	ee 0c       	add	r14, r14
     bcc:	ff 1c       	adc	r15, r15
     bce:	00 1f       	adc	r16, r16
     bd0:	11 1f       	adc	r17, r17
     bd2:	0a 94       	dec	r0
     bd4:	d2 f7       	brpl	.-12     	; 0xbca <__floatsisf+0x8e>
     bd6:	ed 82       	std	Y+5, r14	; 0x05
     bd8:	fe 82       	std	Y+6, r15	; 0x06
     bda:	0f 83       	std	Y+7, r16	; 0x07
     bdc:	18 87       	std	Y+8, r17	; 0x08
     bde:	c8 1a       	sub	r12, r24
     be0:	d9 0a       	sbc	r13, r25
     be2:	dc 82       	std	Y+4, r13	; 0x04
     be4:	cb 82       	std	Y+3, r12	; 0x03
     be6:	ba 82       	std	Y+2, r11	; 0x02
     be8:	ce 01       	movw	r24, r28
     bea:	01 96       	adiw	r24, 0x01	; 1
     bec:	0e 94 18 07 	call	0xe30	; 0xe30 <__pack_f>
     bf0:	28 96       	adiw	r28, 0x08	; 8
     bf2:	e9 e0       	ldi	r30, 0x09	; 9
     bf4:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <__epilogue_restores__+0x12>

00000bf8 <__fixsfsi>:
     bf8:	ac e0       	ldi	r26, 0x0C	; 12
     bfa:	b0 e0       	ldi	r27, 0x00	; 0
     bfc:	e2 e0       	ldi	r30, 0x02	; 2
     bfe:	f6 e0       	ldi	r31, 0x06	; 6
     c00:	0c 94 ce 08 	jmp	0x119c	; 0x119c <__prologue_saves__+0x20>
     c04:	69 83       	std	Y+1, r22	; 0x01
     c06:	7a 83       	std	Y+2, r23	; 0x02
     c08:	8b 83       	std	Y+3, r24	; 0x03
     c0a:	9c 83       	std	Y+4, r25	; 0x04
     c0c:	ce 01       	movw	r24, r28
     c0e:	01 96       	adiw	r24, 0x01	; 1
     c10:	be 01       	movw	r22, r28
     c12:	6b 5f       	subi	r22, 0xFB	; 251
     c14:	7f 4f       	sbci	r23, 0xFF	; 255
     c16:	0e 94 ed 07 	call	0xfda	; 0xfda <__unpack_f>
     c1a:	8d 81       	ldd	r24, Y+5	; 0x05
     c1c:	82 30       	cpi	r24, 0x02	; 2
     c1e:	61 f1       	breq	.+88     	; 0xc78 <__fixsfsi+0x80>
     c20:	82 30       	cpi	r24, 0x02	; 2
     c22:	50 f1       	brcs	.+84     	; 0xc78 <__fixsfsi+0x80>
     c24:	84 30       	cpi	r24, 0x04	; 4
     c26:	21 f4       	brne	.+8      	; 0xc30 <__fixsfsi+0x38>
     c28:	8e 81       	ldd	r24, Y+6	; 0x06
     c2a:	88 23       	and	r24, r24
     c2c:	51 f1       	breq	.+84     	; 0xc82 <__fixsfsi+0x8a>
     c2e:	2e c0       	rjmp	.+92     	; 0xc8c <__fixsfsi+0x94>
     c30:	2f 81       	ldd	r18, Y+7	; 0x07
     c32:	38 85       	ldd	r19, Y+8	; 0x08
     c34:	37 fd       	sbrc	r19, 7
     c36:	20 c0       	rjmp	.+64     	; 0xc78 <__fixsfsi+0x80>
     c38:	6e 81       	ldd	r22, Y+6	; 0x06
     c3a:	2f 31       	cpi	r18, 0x1F	; 31
     c3c:	31 05       	cpc	r19, r1
     c3e:	1c f0       	brlt	.+6      	; 0xc46 <__fixsfsi+0x4e>
     c40:	66 23       	and	r22, r22
     c42:	f9 f0       	breq	.+62     	; 0xc82 <__fixsfsi+0x8a>
     c44:	23 c0       	rjmp	.+70     	; 0xc8c <__fixsfsi+0x94>
     c46:	8e e1       	ldi	r24, 0x1E	; 30
     c48:	90 e0       	ldi	r25, 0x00	; 0
     c4a:	82 1b       	sub	r24, r18
     c4c:	93 0b       	sbc	r25, r19
     c4e:	29 85       	ldd	r18, Y+9	; 0x09
     c50:	3a 85       	ldd	r19, Y+10	; 0x0a
     c52:	4b 85       	ldd	r20, Y+11	; 0x0b
     c54:	5c 85       	ldd	r21, Y+12	; 0x0c
     c56:	04 c0       	rjmp	.+8      	; 0xc60 <__fixsfsi+0x68>
     c58:	56 95       	lsr	r21
     c5a:	47 95       	ror	r20
     c5c:	37 95       	ror	r19
     c5e:	27 95       	ror	r18
     c60:	8a 95       	dec	r24
     c62:	d2 f7       	brpl	.-12     	; 0xc58 <__fixsfsi+0x60>
     c64:	66 23       	and	r22, r22
     c66:	b1 f0       	breq	.+44     	; 0xc94 <__fixsfsi+0x9c>
     c68:	50 95       	com	r21
     c6a:	40 95       	com	r20
     c6c:	30 95       	com	r19
     c6e:	21 95       	neg	r18
     c70:	3f 4f       	sbci	r19, 0xFF	; 255
     c72:	4f 4f       	sbci	r20, 0xFF	; 255
     c74:	5f 4f       	sbci	r21, 0xFF	; 255
     c76:	0e c0       	rjmp	.+28     	; 0xc94 <__fixsfsi+0x9c>
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	40 e0       	ldi	r20, 0x00	; 0
     c7e:	50 e0       	ldi	r21, 0x00	; 0
     c80:	09 c0       	rjmp	.+18     	; 0xc94 <__fixsfsi+0x9c>
     c82:	2f ef       	ldi	r18, 0xFF	; 255
     c84:	3f ef       	ldi	r19, 0xFF	; 255
     c86:	4f ef       	ldi	r20, 0xFF	; 255
     c88:	5f e7       	ldi	r21, 0x7F	; 127
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <__fixsfsi+0x9c>
     c8c:	20 e0       	ldi	r18, 0x00	; 0
     c8e:	30 e0       	ldi	r19, 0x00	; 0
     c90:	40 e0       	ldi	r20, 0x00	; 0
     c92:	50 e8       	ldi	r21, 0x80	; 128
     c94:	b9 01       	movw	r22, r18
     c96:	ca 01       	movw	r24, r20
     c98:	2c 96       	adiw	r28, 0x0c	; 12
     c9a:	e2 e0       	ldi	r30, 0x02	; 2
     c9c:	0c 94 ea 08 	jmp	0x11d4	; 0x11d4 <__epilogue_restores__+0x20>

00000ca0 <__floatunsisf>:
     ca0:	a8 e0       	ldi	r26, 0x08	; 8
     ca2:	b0 e0       	ldi	r27, 0x00	; 0
     ca4:	e6 e5       	ldi	r30, 0x56	; 86
     ca6:	f6 e0       	ldi	r31, 0x06	; 6
     ca8:	0c 94 c6 08 	jmp	0x118c	; 0x118c <__prologue_saves__+0x10>
     cac:	7b 01       	movw	r14, r22
     cae:	8c 01       	movw	r16, r24
     cb0:	61 15       	cp	r22, r1
     cb2:	71 05       	cpc	r23, r1
     cb4:	81 05       	cpc	r24, r1
     cb6:	91 05       	cpc	r25, r1
     cb8:	19 f4       	brne	.+6      	; 0xcc0 <__floatunsisf+0x20>
     cba:	82 e0       	ldi	r24, 0x02	; 2
     cbc:	89 83       	std	Y+1, r24	; 0x01
     cbe:	60 c0       	rjmp	.+192    	; 0xd80 <__floatunsisf+0xe0>
     cc0:	83 e0       	ldi	r24, 0x03	; 3
     cc2:	89 83       	std	Y+1, r24	; 0x01
     cc4:	8e e1       	ldi	r24, 0x1E	; 30
     cc6:	c8 2e       	mov	r12, r24
     cc8:	d1 2c       	mov	r13, r1
     cca:	dc 82       	std	Y+4, r13	; 0x04
     ccc:	cb 82       	std	Y+3, r12	; 0x03
     cce:	ed 82       	std	Y+5, r14	; 0x05
     cd0:	fe 82       	std	Y+6, r15	; 0x06
     cd2:	0f 83       	std	Y+7, r16	; 0x07
     cd4:	18 87       	std	Y+8, r17	; 0x08
     cd6:	c8 01       	movw	r24, r16
     cd8:	b7 01       	movw	r22, r14
     cda:	0e 94 c9 06 	call	0xd92	; 0xd92 <__clzsi2>
     cde:	fc 01       	movw	r30, r24
     ce0:	31 97       	sbiw	r30, 0x01	; 1
     ce2:	f7 ff       	sbrs	r31, 7
     ce4:	3b c0       	rjmp	.+118    	; 0xd5c <__floatunsisf+0xbc>
     ce6:	22 27       	eor	r18, r18
     ce8:	33 27       	eor	r19, r19
     cea:	2e 1b       	sub	r18, r30
     cec:	3f 0b       	sbc	r19, r31
     cee:	57 01       	movw	r10, r14
     cf0:	68 01       	movw	r12, r16
     cf2:	02 2e       	mov	r0, r18
     cf4:	04 c0       	rjmp	.+8      	; 0xcfe <__floatunsisf+0x5e>
     cf6:	d6 94       	lsr	r13
     cf8:	c7 94       	ror	r12
     cfa:	b7 94       	ror	r11
     cfc:	a7 94       	ror	r10
     cfe:	0a 94       	dec	r0
     d00:	d2 f7       	brpl	.-12     	; 0xcf6 <__floatunsisf+0x56>
     d02:	40 e0       	ldi	r20, 0x00	; 0
     d04:	50 e0       	ldi	r21, 0x00	; 0
     d06:	60 e0       	ldi	r22, 0x00	; 0
     d08:	70 e0       	ldi	r23, 0x00	; 0
     d0a:	81 e0       	ldi	r24, 0x01	; 1
     d0c:	90 e0       	ldi	r25, 0x00	; 0
     d0e:	a0 e0       	ldi	r26, 0x00	; 0
     d10:	b0 e0       	ldi	r27, 0x00	; 0
     d12:	04 c0       	rjmp	.+8      	; 0xd1c <__floatunsisf+0x7c>
     d14:	88 0f       	add	r24, r24
     d16:	99 1f       	adc	r25, r25
     d18:	aa 1f       	adc	r26, r26
     d1a:	bb 1f       	adc	r27, r27
     d1c:	2a 95       	dec	r18
     d1e:	d2 f7       	brpl	.-12     	; 0xd14 <__floatunsisf+0x74>
     d20:	01 97       	sbiw	r24, 0x01	; 1
     d22:	a1 09       	sbc	r26, r1
     d24:	b1 09       	sbc	r27, r1
     d26:	8e 21       	and	r24, r14
     d28:	9f 21       	and	r25, r15
     d2a:	a0 23       	and	r26, r16
     d2c:	b1 23       	and	r27, r17
     d2e:	00 97       	sbiw	r24, 0x00	; 0
     d30:	a1 05       	cpc	r26, r1
     d32:	b1 05       	cpc	r27, r1
     d34:	21 f0       	breq	.+8      	; 0xd3e <__floatunsisf+0x9e>
     d36:	41 e0       	ldi	r20, 0x01	; 1
     d38:	50 e0       	ldi	r21, 0x00	; 0
     d3a:	60 e0       	ldi	r22, 0x00	; 0
     d3c:	70 e0       	ldi	r23, 0x00	; 0
     d3e:	4a 29       	or	r20, r10
     d40:	5b 29       	or	r21, r11
     d42:	6c 29       	or	r22, r12
     d44:	7d 29       	or	r23, r13
     d46:	4d 83       	std	Y+5, r20	; 0x05
     d48:	5e 83       	std	Y+6, r21	; 0x06
     d4a:	6f 83       	std	Y+7, r22	; 0x07
     d4c:	78 87       	std	Y+8, r23	; 0x08
     d4e:	8e e1       	ldi	r24, 0x1E	; 30
     d50:	90 e0       	ldi	r25, 0x00	; 0
     d52:	8e 1b       	sub	r24, r30
     d54:	9f 0b       	sbc	r25, r31
     d56:	9c 83       	std	Y+4, r25	; 0x04
     d58:	8b 83       	std	Y+3, r24	; 0x03
     d5a:	12 c0       	rjmp	.+36     	; 0xd80 <__floatunsisf+0xe0>
     d5c:	30 97       	sbiw	r30, 0x00	; 0
     d5e:	81 f0       	breq	.+32     	; 0xd80 <__floatunsisf+0xe0>
     d60:	0e 2e       	mov	r0, r30
     d62:	04 c0       	rjmp	.+8      	; 0xd6c <__floatunsisf+0xcc>
     d64:	ee 0c       	add	r14, r14
     d66:	ff 1c       	adc	r15, r15
     d68:	00 1f       	adc	r16, r16
     d6a:	11 1f       	adc	r17, r17
     d6c:	0a 94       	dec	r0
     d6e:	d2 f7       	brpl	.-12     	; 0xd64 <__floatunsisf+0xc4>
     d70:	ed 82       	std	Y+5, r14	; 0x05
     d72:	fe 82       	std	Y+6, r15	; 0x06
     d74:	0f 83       	std	Y+7, r16	; 0x07
     d76:	18 87       	std	Y+8, r17	; 0x08
     d78:	ce 1a       	sub	r12, r30
     d7a:	df 0a       	sbc	r13, r31
     d7c:	dc 82       	std	Y+4, r13	; 0x04
     d7e:	cb 82       	std	Y+3, r12	; 0x03
     d80:	1a 82       	std	Y+2, r1	; 0x02
     d82:	ce 01       	movw	r24, r28
     d84:	01 96       	adiw	r24, 0x01	; 1
     d86:	0e 94 18 07 	call	0xe30	; 0xe30 <__pack_f>
     d8a:	28 96       	adiw	r28, 0x08	; 8
     d8c:	ea e0       	ldi	r30, 0x0A	; 10
     d8e:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__epilogue_restores__+0x10>

00000d92 <__clzsi2>:
     d92:	ef 92       	push	r14
     d94:	ff 92       	push	r15
     d96:	0f 93       	push	r16
     d98:	1f 93       	push	r17
     d9a:	7b 01       	movw	r14, r22
     d9c:	8c 01       	movw	r16, r24
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	e8 16       	cp	r14, r24
     da2:	80 e0       	ldi	r24, 0x00	; 0
     da4:	f8 06       	cpc	r15, r24
     da6:	81 e0       	ldi	r24, 0x01	; 1
     da8:	08 07       	cpc	r16, r24
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	18 07       	cpc	r17, r24
     dae:	88 f4       	brcc	.+34     	; 0xdd2 <__clzsi2+0x40>
     db0:	8f ef       	ldi	r24, 0xFF	; 255
     db2:	e8 16       	cp	r14, r24
     db4:	f1 04       	cpc	r15, r1
     db6:	01 05       	cpc	r16, r1
     db8:	11 05       	cpc	r17, r1
     dba:	31 f0       	breq	.+12     	; 0xdc8 <__clzsi2+0x36>
     dbc:	28 f0       	brcs	.+10     	; 0xdc8 <__clzsi2+0x36>
     dbe:	88 e0       	ldi	r24, 0x08	; 8
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	a0 e0       	ldi	r26, 0x00	; 0
     dc4:	b0 e0       	ldi	r27, 0x00	; 0
     dc6:	17 c0       	rjmp	.+46     	; 0xdf6 <__clzsi2+0x64>
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	a0 e0       	ldi	r26, 0x00	; 0
     dce:	b0 e0       	ldi	r27, 0x00	; 0
     dd0:	12 c0       	rjmp	.+36     	; 0xdf6 <__clzsi2+0x64>
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	e8 16       	cp	r14, r24
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	f8 06       	cpc	r15, r24
     dda:	80 e0       	ldi	r24, 0x00	; 0
     ddc:	08 07       	cpc	r16, r24
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	18 07       	cpc	r17, r24
     de2:	28 f0       	brcs	.+10     	; 0xdee <__clzsi2+0x5c>
     de4:	88 e1       	ldi	r24, 0x18	; 24
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	a0 e0       	ldi	r26, 0x00	; 0
     dea:	b0 e0       	ldi	r27, 0x00	; 0
     dec:	04 c0       	rjmp	.+8      	; 0xdf6 <__clzsi2+0x64>
     dee:	80 e1       	ldi	r24, 0x10	; 16
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	a0 e0       	ldi	r26, 0x00	; 0
     df4:	b0 e0       	ldi	r27, 0x00	; 0
     df6:	20 e2       	ldi	r18, 0x20	; 32
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	40 e0       	ldi	r20, 0x00	; 0
     dfc:	50 e0       	ldi	r21, 0x00	; 0
     dfe:	28 1b       	sub	r18, r24
     e00:	39 0b       	sbc	r19, r25
     e02:	4a 0b       	sbc	r20, r26
     e04:	5b 0b       	sbc	r21, r27
     e06:	04 c0       	rjmp	.+8      	; 0xe10 <__clzsi2+0x7e>
     e08:	16 95       	lsr	r17
     e0a:	07 95       	ror	r16
     e0c:	f7 94       	ror	r15
     e0e:	e7 94       	ror	r14
     e10:	8a 95       	dec	r24
     e12:	d2 f7       	brpl	.-12     	; 0xe08 <__clzsi2+0x76>
     e14:	f7 01       	movw	r30, r14
     e16:	e0 59       	subi	r30, 0x90	; 144
     e18:	ff 4f       	sbci	r31, 0xFF	; 255
     e1a:	80 81       	ld	r24, Z
     e1c:	28 1b       	sub	r18, r24
     e1e:	31 09       	sbc	r19, r1
     e20:	41 09       	sbc	r20, r1
     e22:	51 09       	sbc	r21, r1
     e24:	c9 01       	movw	r24, r18
     e26:	1f 91       	pop	r17
     e28:	0f 91       	pop	r16
     e2a:	ff 90       	pop	r15
     e2c:	ef 90       	pop	r14
     e2e:	08 95       	ret

00000e30 <__pack_f>:
     e30:	df 92       	push	r13
     e32:	ef 92       	push	r14
     e34:	ff 92       	push	r15
     e36:	0f 93       	push	r16
     e38:	1f 93       	push	r17
     e3a:	fc 01       	movw	r30, r24
     e3c:	e4 80       	ldd	r14, Z+4	; 0x04
     e3e:	f5 80       	ldd	r15, Z+5	; 0x05
     e40:	06 81       	ldd	r16, Z+6	; 0x06
     e42:	17 81       	ldd	r17, Z+7	; 0x07
     e44:	d1 80       	ldd	r13, Z+1	; 0x01
     e46:	80 81       	ld	r24, Z
     e48:	82 30       	cpi	r24, 0x02	; 2
     e4a:	48 f4       	brcc	.+18     	; 0xe5e <__pack_f+0x2e>
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	a0 e1       	ldi	r26, 0x10	; 16
     e52:	b0 e0       	ldi	r27, 0x00	; 0
     e54:	e8 2a       	or	r14, r24
     e56:	f9 2a       	or	r15, r25
     e58:	0a 2b       	or	r16, r26
     e5a:	1b 2b       	or	r17, r27
     e5c:	a5 c0       	rjmp	.+330    	; 0xfa8 <__pack_f+0x178>
     e5e:	84 30       	cpi	r24, 0x04	; 4
     e60:	09 f4       	brne	.+2      	; 0xe64 <__pack_f+0x34>
     e62:	9f c0       	rjmp	.+318    	; 0xfa2 <__pack_f+0x172>
     e64:	82 30       	cpi	r24, 0x02	; 2
     e66:	21 f4       	brne	.+8      	; 0xe70 <__pack_f+0x40>
     e68:	ee 24       	eor	r14, r14
     e6a:	ff 24       	eor	r15, r15
     e6c:	87 01       	movw	r16, r14
     e6e:	05 c0       	rjmp	.+10     	; 0xe7a <__pack_f+0x4a>
     e70:	e1 14       	cp	r14, r1
     e72:	f1 04       	cpc	r15, r1
     e74:	01 05       	cpc	r16, r1
     e76:	11 05       	cpc	r17, r1
     e78:	19 f4       	brne	.+6      	; 0xe80 <__pack_f+0x50>
     e7a:	e0 e0       	ldi	r30, 0x00	; 0
     e7c:	f0 e0       	ldi	r31, 0x00	; 0
     e7e:	96 c0       	rjmp	.+300    	; 0xfac <__pack_f+0x17c>
     e80:	62 81       	ldd	r22, Z+2	; 0x02
     e82:	73 81       	ldd	r23, Z+3	; 0x03
     e84:	9f ef       	ldi	r25, 0xFF	; 255
     e86:	62 38       	cpi	r22, 0x82	; 130
     e88:	79 07       	cpc	r23, r25
     e8a:	0c f0       	brlt	.+2      	; 0xe8e <__pack_f+0x5e>
     e8c:	5b c0       	rjmp	.+182    	; 0xf44 <__pack_f+0x114>
     e8e:	22 e8       	ldi	r18, 0x82	; 130
     e90:	3f ef       	ldi	r19, 0xFF	; 255
     e92:	26 1b       	sub	r18, r22
     e94:	37 0b       	sbc	r19, r23
     e96:	2a 31       	cpi	r18, 0x1A	; 26
     e98:	31 05       	cpc	r19, r1
     e9a:	2c f0       	brlt	.+10     	; 0xea6 <__pack_f+0x76>
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	40 e0       	ldi	r20, 0x00	; 0
     ea2:	50 e0       	ldi	r21, 0x00	; 0
     ea4:	2a c0       	rjmp	.+84     	; 0xefa <__pack_f+0xca>
     ea6:	b8 01       	movw	r22, r16
     ea8:	a7 01       	movw	r20, r14
     eaa:	02 2e       	mov	r0, r18
     eac:	04 c0       	rjmp	.+8      	; 0xeb6 <__pack_f+0x86>
     eae:	76 95       	lsr	r23
     eb0:	67 95       	ror	r22
     eb2:	57 95       	ror	r21
     eb4:	47 95       	ror	r20
     eb6:	0a 94       	dec	r0
     eb8:	d2 f7       	brpl	.-12     	; 0xeae <__pack_f+0x7e>
     eba:	81 e0       	ldi	r24, 0x01	; 1
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	a0 e0       	ldi	r26, 0x00	; 0
     ec0:	b0 e0       	ldi	r27, 0x00	; 0
     ec2:	04 c0       	rjmp	.+8      	; 0xecc <__pack_f+0x9c>
     ec4:	88 0f       	add	r24, r24
     ec6:	99 1f       	adc	r25, r25
     ec8:	aa 1f       	adc	r26, r26
     eca:	bb 1f       	adc	r27, r27
     ecc:	2a 95       	dec	r18
     ece:	d2 f7       	brpl	.-12     	; 0xec4 <__pack_f+0x94>
     ed0:	01 97       	sbiw	r24, 0x01	; 1
     ed2:	a1 09       	sbc	r26, r1
     ed4:	b1 09       	sbc	r27, r1
     ed6:	8e 21       	and	r24, r14
     ed8:	9f 21       	and	r25, r15
     eda:	a0 23       	and	r26, r16
     edc:	b1 23       	and	r27, r17
     ede:	00 97       	sbiw	r24, 0x00	; 0
     ee0:	a1 05       	cpc	r26, r1
     ee2:	b1 05       	cpc	r27, r1
     ee4:	21 f0       	breq	.+8      	; 0xeee <__pack_f+0xbe>
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	a0 e0       	ldi	r26, 0x00	; 0
     eec:	b0 e0       	ldi	r27, 0x00	; 0
     eee:	9a 01       	movw	r18, r20
     ef0:	ab 01       	movw	r20, r22
     ef2:	28 2b       	or	r18, r24
     ef4:	39 2b       	or	r19, r25
     ef6:	4a 2b       	or	r20, r26
     ef8:	5b 2b       	or	r21, r27
     efa:	da 01       	movw	r26, r20
     efc:	c9 01       	movw	r24, r18
     efe:	8f 77       	andi	r24, 0x7F	; 127
     f00:	90 70       	andi	r25, 0x00	; 0
     f02:	a0 70       	andi	r26, 0x00	; 0
     f04:	b0 70       	andi	r27, 0x00	; 0
     f06:	80 34       	cpi	r24, 0x40	; 64
     f08:	91 05       	cpc	r25, r1
     f0a:	a1 05       	cpc	r26, r1
     f0c:	b1 05       	cpc	r27, r1
     f0e:	39 f4       	brne	.+14     	; 0xf1e <__pack_f+0xee>
     f10:	27 ff       	sbrs	r18, 7
     f12:	09 c0       	rjmp	.+18     	; 0xf26 <__pack_f+0xf6>
     f14:	20 5c       	subi	r18, 0xC0	; 192
     f16:	3f 4f       	sbci	r19, 0xFF	; 255
     f18:	4f 4f       	sbci	r20, 0xFF	; 255
     f1a:	5f 4f       	sbci	r21, 0xFF	; 255
     f1c:	04 c0       	rjmp	.+8      	; 0xf26 <__pack_f+0xf6>
     f1e:	21 5c       	subi	r18, 0xC1	; 193
     f20:	3f 4f       	sbci	r19, 0xFF	; 255
     f22:	4f 4f       	sbci	r20, 0xFF	; 255
     f24:	5f 4f       	sbci	r21, 0xFF	; 255
     f26:	e0 e0       	ldi	r30, 0x00	; 0
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	20 30       	cpi	r18, 0x00	; 0
     f2c:	a0 e0       	ldi	r26, 0x00	; 0
     f2e:	3a 07       	cpc	r19, r26
     f30:	a0 e0       	ldi	r26, 0x00	; 0
     f32:	4a 07       	cpc	r20, r26
     f34:	a0 e4       	ldi	r26, 0x40	; 64
     f36:	5a 07       	cpc	r21, r26
     f38:	10 f0       	brcs	.+4      	; 0xf3e <__pack_f+0x10e>
     f3a:	e1 e0       	ldi	r30, 0x01	; 1
     f3c:	f0 e0       	ldi	r31, 0x00	; 0
     f3e:	79 01       	movw	r14, r18
     f40:	8a 01       	movw	r16, r20
     f42:	27 c0       	rjmp	.+78     	; 0xf92 <__pack_f+0x162>
     f44:	60 38       	cpi	r22, 0x80	; 128
     f46:	71 05       	cpc	r23, r1
     f48:	64 f5       	brge	.+88     	; 0xfa2 <__pack_f+0x172>
     f4a:	fb 01       	movw	r30, r22
     f4c:	e1 58       	subi	r30, 0x81	; 129
     f4e:	ff 4f       	sbci	r31, 0xFF	; 255
     f50:	d8 01       	movw	r26, r16
     f52:	c7 01       	movw	r24, r14
     f54:	8f 77       	andi	r24, 0x7F	; 127
     f56:	90 70       	andi	r25, 0x00	; 0
     f58:	a0 70       	andi	r26, 0x00	; 0
     f5a:	b0 70       	andi	r27, 0x00	; 0
     f5c:	80 34       	cpi	r24, 0x40	; 64
     f5e:	91 05       	cpc	r25, r1
     f60:	a1 05       	cpc	r26, r1
     f62:	b1 05       	cpc	r27, r1
     f64:	39 f4       	brne	.+14     	; 0xf74 <__pack_f+0x144>
     f66:	e7 fe       	sbrs	r14, 7
     f68:	0d c0       	rjmp	.+26     	; 0xf84 <__pack_f+0x154>
     f6a:	80 e4       	ldi	r24, 0x40	; 64
     f6c:	90 e0       	ldi	r25, 0x00	; 0
     f6e:	a0 e0       	ldi	r26, 0x00	; 0
     f70:	b0 e0       	ldi	r27, 0x00	; 0
     f72:	04 c0       	rjmp	.+8      	; 0xf7c <__pack_f+0x14c>
     f74:	8f e3       	ldi	r24, 0x3F	; 63
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	a0 e0       	ldi	r26, 0x00	; 0
     f7a:	b0 e0       	ldi	r27, 0x00	; 0
     f7c:	e8 0e       	add	r14, r24
     f7e:	f9 1e       	adc	r15, r25
     f80:	0a 1f       	adc	r16, r26
     f82:	1b 1f       	adc	r17, r27
     f84:	17 ff       	sbrs	r17, 7
     f86:	05 c0       	rjmp	.+10     	; 0xf92 <__pack_f+0x162>
     f88:	16 95       	lsr	r17
     f8a:	07 95       	ror	r16
     f8c:	f7 94       	ror	r15
     f8e:	e7 94       	ror	r14
     f90:	31 96       	adiw	r30, 0x01	; 1
     f92:	87 e0       	ldi	r24, 0x07	; 7
     f94:	16 95       	lsr	r17
     f96:	07 95       	ror	r16
     f98:	f7 94       	ror	r15
     f9a:	e7 94       	ror	r14
     f9c:	8a 95       	dec	r24
     f9e:	d1 f7       	brne	.-12     	; 0xf94 <__pack_f+0x164>
     fa0:	05 c0       	rjmp	.+10     	; 0xfac <__pack_f+0x17c>
     fa2:	ee 24       	eor	r14, r14
     fa4:	ff 24       	eor	r15, r15
     fa6:	87 01       	movw	r16, r14
     fa8:	ef ef       	ldi	r30, 0xFF	; 255
     faa:	f0 e0       	ldi	r31, 0x00	; 0
     fac:	6e 2f       	mov	r22, r30
     fae:	67 95       	ror	r22
     fb0:	66 27       	eor	r22, r22
     fb2:	67 95       	ror	r22
     fb4:	90 2f       	mov	r25, r16
     fb6:	9f 77       	andi	r25, 0x7F	; 127
     fb8:	d7 94       	ror	r13
     fba:	dd 24       	eor	r13, r13
     fbc:	d7 94       	ror	r13
     fbe:	8e 2f       	mov	r24, r30
     fc0:	86 95       	lsr	r24
     fc2:	49 2f       	mov	r20, r25
     fc4:	46 2b       	or	r20, r22
     fc6:	58 2f       	mov	r21, r24
     fc8:	5d 29       	or	r21, r13
     fca:	b7 01       	movw	r22, r14
     fcc:	ca 01       	movw	r24, r20
     fce:	1f 91       	pop	r17
     fd0:	0f 91       	pop	r16
     fd2:	ff 90       	pop	r15
     fd4:	ef 90       	pop	r14
     fd6:	df 90       	pop	r13
     fd8:	08 95       	ret

00000fda <__unpack_f>:
     fda:	fc 01       	movw	r30, r24
     fdc:	db 01       	movw	r26, r22
     fde:	40 81       	ld	r20, Z
     fe0:	51 81       	ldd	r21, Z+1	; 0x01
     fe2:	22 81       	ldd	r18, Z+2	; 0x02
     fe4:	62 2f       	mov	r22, r18
     fe6:	6f 77       	andi	r22, 0x7F	; 127
     fe8:	70 e0       	ldi	r23, 0x00	; 0
     fea:	22 1f       	adc	r18, r18
     fec:	22 27       	eor	r18, r18
     fee:	22 1f       	adc	r18, r18
     ff0:	93 81       	ldd	r25, Z+3	; 0x03
     ff2:	89 2f       	mov	r24, r25
     ff4:	88 0f       	add	r24, r24
     ff6:	82 2b       	or	r24, r18
     ff8:	28 2f       	mov	r18, r24
     ffa:	30 e0       	ldi	r19, 0x00	; 0
     ffc:	99 1f       	adc	r25, r25
     ffe:	99 27       	eor	r25, r25
    1000:	99 1f       	adc	r25, r25
    1002:	11 96       	adiw	r26, 0x01	; 1
    1004:	9c 93       	st	X, r25
    1006:	11 97       	sbiw	r26, 0x01	; 1
    1008:	21 15       	cp	r18, r1
    100a:	31 05       	cpc	r19, r1
    100c:	a9 f5       	brne	.+106    	; 0x1078 <__unpack_f+0x9e>
    100e:	41 15       	cp	r20, r1
    1010:	51 05       	cpc	r21, r1
    1012:	61 05       	cpc	r22, r1
    1014:	71 05       	cpc	r23, r1
    1016:	11 f4       	brne	.+4      	; 0x101c <__unpack_f+0x42>
    1018:	82 e0       	ldi	r24, 0x02	; 2
    101a:	37 c0       	rjmp	.+110    	; 0x108a <__unpack_f+0xb0>
    101c:	82 e8       	ldi	r24, 0x82	; 130
    101e:	9f ef       	ldi	r25, 0xFF	; 255
    1020:	13 96       	adiw	r26, 0x03	; 3
    1022:	9c 93       	st	X, r25
    1024:	8e 93       	st	-X, r24
    1026:	12 97       	sbiw	r26, 0x02	; 2
    1028:	9a 01       	movw	r18, r20
    102a:	ab 01       	movw	r20, r22
    102c:	67 e0       	ldi	r22, 0x07	; 7
    102e:	22 0f       	add	r18, r18
    1030:	33 1f       	adc	r19, r19
    1032:	44 1f       	adc	r20, r20
    1034:	55 1f       	adc	r21, r21
    1036:	6a 95       	dec	r22
    1038:	d1 f7       	brne	.-12     	; 0x102e <__unpack_f+0x54>
    103a:	83 e0       	ldi	r24, 0x03	; 3
    103c:	8c 93       	st	X, r24
    103e:	0d c0       	rjmp	.+26     	; 0x105a <__unpack_f+0x80>
    1040:	22 0f       	add	r18, r18
    1042:	33 1f       	adc	r19, r19
    1044:	44 1f       	adc	r20, r20
    1046:	55 1f       	adc	r21, r21
    1048:	12 96       	adiw	r26, 0x02	; 2
    104a:	8d 91       	ld	r24, X+
    104c:	9c 91       	ld	r25, X
    104e:	13 97       	sbiw	r26, 0x03	; 3
    1050:	01 97       	sbiw	r24, 0x01	; 1
    1052:	13 96       	adiw	r26, 0x03	; 3
    1054:	9c 93       	st	X, r25
    1056:	8e 93       	st	-X, r24
    1058:	12 97       	sbiw	r26, 0x02	; 2
    105a:	20 30       	cpi	r18, 0x00	; 0
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	38 07       	cpc	r19, r24
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	48 07       	cpc	r20, r24
    1064:	80 e4       	ldi	r24, 0x40	; 64
    1066:	58 07       	cpc	r21, r24
    1068:	58 f3       	brcs	.-42     	; 0x1040 <__unpack_f+0x66>
    106a:	14 96       	adiw	r26, 0x04	; 4
    106c:	2d 93       	st	X+, r18
    106e:	3d 93       	st	X+, r19
    1070:	4d 93       	st	X+, r20
    1072:	5c 93       	st	X, r21
    1074:	17 97       	sbiw	r26, 0x07	; 7
    1076:	08 95       	ret
    1078:	2f 3f       	cpi	r18, 0xFF	; 255
    107a:	31 05       	cpc	r19, r1
    107c:	79 f4       	brne	.+30     	; 0x109c <__unpack_f+0xc2>
    107e:	41 15       	cp	r20, r1
    1080:	51 05       	cpc	r21, r1
    1082:	61 05       	cpc	r22, r1
    1084:	71 05       	cpc	r23, r1
    1086:	19 f4       	brne	.+6      	; 0x108e <__unpack_f+0xb4>
    1088:	84 e0       	ldi	r24, 0x04	; 4
    108a:	8c 93       	st	X, r24
    108c:	08 95       	ret
    108e:	64 ff       	sbrs	r22, 4
    1090:	03 c0       	rjmp	.+6      	; 0x1098 <__unpack_f+0xbe>
    1092:	81 e0       	ldi	r24, 0x01	; 1
    1094:	8c 93       	st	X, r24
    1096:	12 c0       	rjmp	.+36     	; 0x10bc <__unpack_f+0xe2>
    1098:	1c 92       	st	X, r1
    109a:	10 c0       	rjmp	.+32     	; 0x10bc <__unpack_f+0xe2>
    109c:	2f 57       	subi	r18, 0x7F	; 127
    109e:	30 40       	sbci	r19, 0x00	; 0
    10a0:	13 96       	adiw	r26, 0x03	; 3
    10a2:	3c 93       	st	X, r19
    10a4:	2e 93       	st	-X, r18
    10a6:	12 97       	sbiw	r26, 0x02	; 2
    10a8:	83 e0       	ldi	r24, 0x03	; 3
    10aa:	8c 93       	st	X, r24
    10ac:	87 e0       	ldi	r24, 0x07	; 7
    10ae:	44 0f       	add	r20, r20
    10b0:	55 1f       	adc	r21, r21
    10b2:	66 1f       	adc	r22, r22
    10b4:	77 1f       	adc	r23, r23
    10b6:	8a 95       	dec	r24
    10b8:	d1 f7       	brne	.-12     	; 0x10ae <__unpack_f+0xd4>
    10ba:	70 64       	ori	r23, 0x40	; 64
    10bc:	14 96       	adiw	r26, 0x04	; 4
    10be:	4d 93       	st	X+, r20
    10c0:	5d 93       	st	X+, r21
    10c2:	6d 93       	st	X+, r22
    10c4:	7c 93       	st	X, r23
    10c6:	17 97       	sbiw	r26, 0x07	; 7
    10c8:	08 95       	ret

000010ca <__fpcmp_parts_f>:
    10ca:	1f 93       	push	r17
    10cc:	dc 01       	movw	r26, r24
    10ce:	fb 01       	movw	r30, r22
    10d0:	9c 91       	ld	r25, X
    10d2:	92 30       	cpi	r25, 0x02	; 2
    10d4:	08 f4       	brcc	.+2      	; 0x10d8 <__fpcmp_parts_f+0xe>
    10d6:	47 c0       	rjmp	.+142    	; 0x1166 <__fpcmp_parts_f+0x9c>
    10d8:	80 81       	ld	r24, Z
    10da:	82 30       	cpi	r24, 0x02	; 2
    10dc:	08 f4       	brcc	.+2      	; 0x10e0 <__fpcmp_parts_f+0x16>
    10de:	43 c0       	rjmp	.+134    	; 0x1166 <__fpcmp_parts_f+0x9c>
    10e0:	94 30       	cpi	r25, 0x04	; 4
    10e2:	51 f4       	brne	.+20     	; 0x10f8 <__fpcmp_parts_f+0x2e>
    10e4:	11 96       	adiw	r26, 0x01	; 1
    10e6:	1c 91       	ld	r17, X
    10e8:	84 30       	cpi	r24, 0x04	; 4
    10ea:	99 f5       	brne	.+102    	; 0x1152 <__fpcmp_parts_f+0x88>
    10ec:	81 81       	ldd	r24, Z+1	; 0x01
    10ee:	68 2f       	mov	r22, r24
    10f0:	70 e0       	ldi	r23, 0x00	; 0
    10f2:	61 1b       	sub	r22, r17
    10f4:	71 09       	sbc	r23, r1
    10f6:	3f c0       	rjmp	.+126    	; 0x1176 <__fpcmp_parts_f+0xac>
    10f8:	84 30       	cpi	r24, 0x04	; 4
    10fa:	21 f0       	breq	.+8      	; 0x1104 <__fpcmp_parts_f+0x3a>
    10fc:	92 30       	cpi	r25, 0x02	; 2
    10fe:	31 f4       	brne	.+12     	; 0x110c <__fpcmp_parts_f+0x42>
    1100:	82 30       	cpi	r24, 0x02	; 2
    1102:	b9 f1       	breq	.+110    	; 0x1172 <__fpcmp_parts_f+0xa8>
    1104:	81 81       	ldd	r24, Z+1	; 0x01
    1106:	88 23       	and	r24, r24
    1108:	89 f1       	breq	.+98     	; 0x116c <__fpcmp_parts_f+0xa2>
    110a:	2d c0       	rjmp	.+90     	; 0x1166 <__fpcmp_parts_f+0x9c>
    110c:	11 96       	adiw	r26, 0x01	; 1
    110e:	1c 91       	ld	r17, X
    1110:	11 97       	sbiw	r26, 0x01	; 1
    1112:	82 30       	cpi	r24, 0x02	; 2
    1114:	f1 f0       	breq	.+60     	; 0x1152 <__fpcmp_parts_f+0x88>
    1116:	81 81       	ldd	r24, Z+1	; 0x01
    1118:	18 17       	cp	r17, r24
    111a:	d9 f4       	brne	.+54     	; 0x1152 <__fpcmp_parts_f+0x88>
    111c:	12 96       	adiw	r26, 0x02	; 2
    111e:	2d 91       	ld	r18, X+
    1120:	3c 91       	ld	r19, X
    1122:	13 97       	sbiw	r26, 0x03	; 3
    1124:	82 81       	ldd	r24, Z+2	; 0x02
    1126:	93 81       	ldd	r25, Z+3	; 0x03
    1128:	82 17       	cp	r24, r18
    112a:	93 07       	cpc	r25, r19
    112c:	94 f0       	brlt	.+36     	; 0x1152 <__fpcmp_parts_f+0x88>
    112e:	28 17       	cp	r18, r24
    1130:	39 07       	cpc	r19, r25
    1132:	bc f0       	brlt	.+46     	; 0x1162 <__fpcmp_parts_f+0x98>
    1134:	14 96       	adiw	r26, 0x04	; 4
    1136:	8d 91       	ld	r24, X+
    1138:	9d 91       	ld	r25, X+
    113a:	0d 90       	ld	r0, X+
    113c:	bc 91       	ld	r27, X
    113e:	a0 2d       	mov	r26, r0
    1140:	24 81       	ldd	r18, Z+4	; 0x04
    1142:	35 81       	ldd	r19, Z+5	; 0x05
    1144:	46 81       	ldd	r20, Z+6	; 0x06
    1146:	57 81       	ldd	r21, Z+7	; 0x07
    1148:	28 17       	cp	r18, r24
    114a:	39 07       	cpc	r19, r25
    114c:	4a 07       	cpc	r20, r26
    114e:	5b 07       	cpc	r21, r27
    1150:	18 f4       	brcc	.+6      	; 0x1158 <__fpcmp_parts_f+0x8e>
    1152:	11 23       	and	r17, r17
    1154:	41 f0       	breq	.+16     	; 0x1166 <__fpcmp_parts_f+0x9c>
    1156:	0a c0       	rjmp	.+20     	; 0x116c <__fpcmp_parts_f+0xa2>
    1158:	82 17       	cp	r24, r18
    115a:	93 07       	cpc	r25, r19
    115c:	a4 07       	cpc	r26, r20
    115e:	b5 07       	cpc	r27, r21
    1160:	40 f4       	brcc	.+16     	; 0x1172 <__fpcmp_parts_f+0xa8>
    1162:	11 23       	and	r17, r17
    1164:	19 f0       	breq	.+6      	; 0x116c <__fpcmp_parts_f+0xa2>
    1166:	61 e0       	ldi	r22, 0x01	; 1
    1168:	70 e0       	ldi	r23, 0x00	; 0
    116a:	05 c0       	rjmp	.+10     	; 0x1176 <__fpcmp_parts_f+0xac>
    116c:	6f ef       	ldi	r22, 0xFF	; 255
    116e:	7f ef       	ldi	r23, 0xFF	; 255
    1170:	02 c0       	rjmp	.+4      	; 0x1176 <__fpcmp_parts_f+0xac>
    1172:	60 e0       	ldi	r22, 0x00	; 0
    1174:	70 e0       	ldi	r23, 0x00	; 0
    1176:	cb 01       	movw	r24, r22
    1178:	1f 91       	pop	r17
    117a:	08 95       	ret

0000117c <__prologue_saves__>:
    117c:	2f 92       	push	r2
    117e:	3f 92       	push	r3
    1180:	4f 92       	push	r4
    1182:	5f 92       	push	r5
    1184:	6f 92       	push	r6
    1186:	7f 92       	push	r7
    1188:	8f 92       	push	r8
    118a:	9f 92       	push	r9
    118c:	af 92       	push	r10
    118e:	bf 92       	push	r11
    1190:	cf 92       	push	r12
    1192:	df 92       	push	r13
    1194:	ef 92       	push	r14
    1196:	ff 92       	push	r15
    1198:	0f 93       	push	r16
    119a:	1f 93       	push	r17
    119c:	cf 93       	push	r28
    119e:	df 93       	push	r29
    11a0:	cd b7       	in	r28, 0x3d	; 61
    11a2:	de b7       	in	r29, 0x3e	; 62
    11a4:	ca 1b       	sub	r28, r26
    11a6:	db 0b       	sbc	r29, r27
    11a8:	0f b6       	in	r0, 0x3f	; 63
    11aa:	f8 94       	cli
    11ac:	de bf       	out	0x3e, r29	; 62
    11ae:	0f be       	out	0x3f, r0	; 63
    11b0:	cd bf       	out	0x3d, r28	; 61
    11b2:	09 94       	ijmp

000011b4 <__epilogue_restores__>:
    11b4:	2a 88       	ldd	r2, Y+18	; 0x12
    11b6:	39 88       	ldd	r3, Y+17	; 0x11
    11b8:	48 88       	ldd	r4, Y+16	; 0x10
    11ba:	5f 84       	ldd	r5, Y+15	; 0x0f
    11bc:	6e 84       	ldd	r6, Y+14	; 0x0e
    11be:	7d 84       	ldd	r7, Y+13	; 0x0d
    11c0:	8c 84       	ldd	r8, Y+12	; 0x0c
    11c2:	9b 84       	ldd	r9, Y+11	; 0x0b
    11c4:	aa 84       	ldd	r10, Y+10	; 0x0a
    11c6:	b9 84       	ldd	r11, Y+9	; 0x09
    11c8:	c8 84       	ldd	r12, Y+8	; 0x08
    11ca:	df 80       	ldd	r13, Y+7	; 0x07
    11cc:	ee 80       	ldd	r14, Y+6	; 0x06
    11ce:	fd 80       	ldd	r15, Y+5	; 0x05
    11d0:	0c 81       	ldd	r16, Y+4	; 0x04
    11d2:	1b 81       	ldd	r17, Y+3	; 0x03
    11d4:	aa 81       	ldd	r26, Y+2	; 0x02
    11d6:	b9 81       	ldd	r27, Y+1	; 0x01
    11d8:	ce 0f       	add	r28, r30
    11da:	d1 1d       	adc	r29, r1
    11dc:	0f b6       	in	r0, 0x3f	; 63
    11de:	f8 94       	cli
    11e0:	de bf       	out	0x3e, r29	; 62
    11e2:	0f be       	out	0x3f, r0	; 63
    11e4:	cd bf       	out	0x3d, r28	; 61
    11e6:	ed 01       	movw	r28, r26
    11e8:	08 95       	ret

000011ea <_exit>:
    11ea:	f8 94       	cli

000011ec <__stop_program>:
    11ec:	ff cf       	rjmp	.-2      	; 0x11ec <__stop_program>
