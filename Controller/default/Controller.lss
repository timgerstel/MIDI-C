
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011ea  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  000011ea  0000127e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800170  00800170  0000138e  2**0
                  ALLOC
  3 .debug_aranges 000001c0  00000000  00000000  0000138e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000041a  00000000  00000000  0000154e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000028d4  00000000  00000000  00001968  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001514  00000000  00000000  0000423c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001896  00000000  00000000  00005750  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000360  00000000  00000000  00006fe8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000053c  00000000  00000000  00007348  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a9d  00000000  00000000  00007884  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00008321  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ee       	ldi	r30, 0xEA	; 234
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e7       	ldi	r26, 0x70	; 112
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 38       	cpi	r26, 0x80	; 128
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 7a 00 	call	0xf4	; 0xf4 <main>
      8a:	0c 94 f3 08 	jmp	0x11e6	; 0x11e6 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <setupMIDI>:
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
      92:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) baudrate;
      94:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
      96:	88 e1       	ldi	r24, 0x18	; 24
      98:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
      9a:	86 e8       	ldi	r24, 0x86	; 134
      9c:	80 bd       	out	0x20, r24	; 32
}
      9e:	08 95       	ret

000000a0 <setupPins>:
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      a0:	8f ef       	ldi	r24, 0xFF	; 255
      a2:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      a4:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      a6:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      a8:	87 e0       	ldi	r24, 0x07	; 7
      aa:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
      ac:	11 ba       	out	0x11, r1	; 17
}
      ae:	08 95       	ret

000000b0 <setupAnalog>:
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
      b0:	87 e4       	ldi	r24, 0x47	; 71
      b2:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
      b4:	87 e8       	ldi	r24, 0x87	; 135
      b6:	86 b9       	out	0x06, r24	; 6
}
      b8:	08 95       	ret

000000ba <setupTimer>:
void setupTimer(){
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
      ba:	85 e0       	ldi	r24, 0x05	; 5
      bc:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
      be:	81 ea       	ldi	r24, 0xA1	; 161
      c0:	97 e0       	ldi	r25, 0x07	; 7
      c2:	9b bd       	out	0x2b, r25	; 43
      c4:	8a bd       	out	0x2a, r24	; 42
	TCNT1 = 0;
      c6:	1d bc       	out	0x2d, r1	; 45
      c8:	1c bc       	out	0x2c, r1	; 44
}
      ca:	08 95       	ret

000000cc <playBack>:
	 writeSong2();
}

void playBack(){
	//playSong();
}
      cc:	08 95       	ret

000000ce <modify>:


void modify(){
	//analogLEDTest();
}
      ce:	08 95       	ret

000000d0 <writeSong2>:
	
}

void writeSong2(){
//T1FR |= (1 << OCF1A); //reset timer1 overflow flag
	eeprom_address = 0x00;
      d0:	10 92 7b 01 	sts	0x017B, r1
      d4:	10 92 7a 01 	sts	0x017A, r1
      d8:	04 c0       	rjmp	.+8      	; 0xe2 <writeSong2+0x12>
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
      da:	5f 9b       	sbis	0x0b, 7	; 11
      dc:	fe cf       	rjmp	.-4      	; 0xda <writeSong2+0xa>

	/* get and return data from buffer */
	return UDR;
      de:	8c b1       	in	r24, 0x0c	; 12

void writeSong2(){
//T1FR |= (1 << OCF1A); //reset timer1 overflow flag
	eeprom_address = 0x00;
	while(midi_Receive() != 0){
		PORTB = midi_Receive();
      e0:	88 bb       	out	0x18, r24	; 24
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
      e2:	5f 9b       	sbis	0x0b, 7	; 11
      e4:	fe cf       	rjmp	.-4      	; 0xe2 <writeSong2+0x12>

	/* get and return data from buffer */
	return UDR;
      e6:	8c b1       	in	r24, 0x0c	; 12
}

void writeSong2(){
//T1FR |= (1 << OCF1A); //reset timer1 overflow flag
	eeprom_address = 0x00;
	while(midi_Receive() != 0){
      e8:	88 23       	and	r24, r24
      ea:	b9 f7       	brne	.-18     	; 0xda <writeSong2+0xa>
		PORTB = midi_Receive();
		//EEPROM_write(eeprom_address, midi_Receive() + TIM16_ReadTCNT1());
		//eeprom_address++;
	}
	//stop_addr = eeprom_address;
}
      ec:	08 95       	ret

000000ee <record>:
}

/***** Create Methods *****/

void record(){
	 writeSong2();
      ee:	0e 94 68 00 	call	0xd0	; 0xd0 <writeSong2>
}
      f2:	08 95       	ret

000000f4 <main>:
	UBRRL = (unsigned char) baudrate;
	UCSRB = (1 << TXEN) | (1 << RXEN);
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
}
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      f4:	8f ef       	ldi	r24, 0xFF	; 255
      f6:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      f8:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      fa:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      fc:	27 e0       	ldi	r18, 0x07	; 7
      fe:	2b bb       	out	0x1b, r18	; 27
	DDRD = 0x00;
     100:	11 ba       	out	0x11, r1	; 17
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
}
void setupTimer(){
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
     102:	85 e0       	ldi	r24, 0x05	; 5
     104:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
     106:	81 ea       	ldi	r24, 0xA1	; 161
     108:	97 e0       	ldi	r25, 0x07	; 7
     10a:	9b bd       	out	0x2b, r25	; 43
     10c:	8a bd       	out	0x2a, r24	; 42
	TCNT1 = 0;
     10e:	1d bc       	out	0x2d, r1	; 45
     110:	1c bc       	out	0x2c, r1	; 44
	PORTB = 0x00; //Turns all leds off
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
	DDRD = 0x00;
}
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
     112:	87 e4       	ldi	r24, 0x47	; 71
     114:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
     116:	87 e8       	ldi	r24, 0x87	; 135
     118:	86 b9       	out	0x06, r24	; 6
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
     11a:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) baudrate;
     11c:	29 b9       	out	0x09, r18	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
     11e:	88 e1       	ldi	r24, 0x18	; 24
     120:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
     122:	86 e8       	ldi	r24, 0x86	; 134
     124:	80 bd       	out	0x20, r24	; 32
   setupTimer();
   setupAnalog();
   setupMIDI(BUAD_PRESCALE);

    while(1){
		uint8_t rec = PINA & 0x04;
     126:	89 b3       	in	r24, 0x19	; 25
		uint8_t play = PINA & 0x02;
     128:	99 b3       	in	r25, 0x19	; 25
		uint8_t mod = PINA & 0x01;
     12a:	29 b3       	in	r18, 0x19	; 25
	
		if(rec && !play){
     12c:	82 ff       	sbrs	r24, 2
     12e:	04 c0       	rjmp	.+8      	; 0x138 <main+0x44>
     130:	91 fd       	sbrc	r25, 1
     132:	02 c0       	rjmp	.+4      	; 0x138 <main+0x44>
}

/***** Create Methods *****/

void record(){
	 writeSong2();
     134:	0e 94 68 00 	call	0xd0	; 0xd0 <writeSong2>
{
   _delay_ms(time);
}

void ledOFF(){
	PORTB = 0x00;
     138:	18 ba       	out	0x18, r1	; 24
     13a:	f5 cf       	rjmp	.-22     	; 0x126 <main+0x32>

0000013c <wait>:
	midi_Transmit(MIDIoff);
}


void wait(int time)
{
     13c:	af 92       	push	r10
     13e:	bf 92       	push	r11
     140:	cf 92       	push	r12
     142:	df 92       	push	r13
     144:	ef 92       	push	r14
     146:	ff 92       	push	r15
     148:	0f 93       	push	r16
     14a:	1f 93       	push	r17
   _delay_ms(time);
     14c:	aa 27       	eor	r26, r26
     14e:	97 fd       	sbrc	r25, 7
     150:	a0 95       	com	r26
     152:	ba 2f       	mov	r27, r26
     154:	bc 01       	movw	r22, r24
     156:	cd 01       	movw	r24, r26
     158:	0e 94 9c 05 	call	0xb38	; 0xb38 <__floatsisf>
     15c:	5b 01       	movw	r10, r22
     15e:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     160:	20 e0       	ldi	r18, 0x00	; 0
     162:	30 e0       	ldi	r19, 0x00	; 0
     164:	4a e7       	ldi	r20, 0x7A	; 122
     166:	54 e4       	ldi	r21, 0x44	; 68
     168:	0e 94 12 04 	call	0x824	; 0x824 <__mulsf3>
     16c:	7b 01       	movw	r14, r22
     16e:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	30 e0       	ldi	r19, 0x00	; 0
     174:	40 e8       	ldi	r20, 0x80	; 128
     176:	5f e3       	ldi	r21, 0x3F	; 63
     178:	0e 94 6c 05 	call	0xad8	; 0xad8 <__ltsf2>
     17c:	88 23       	and	r24, r24
     17e:	1c f4       	brge	.+6      	; 0x186 <wait+0x4a>
     180:	61 e0       	ldi	r22, 0x01	; 1
     182:	70 e0       	ldi	r23, 0x00	; 0
     184:	24 c0       	rjmp	.+72     	; 0x1ce <wait+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
     186:	c8 01       	movw	r24, r16
     188:	b7 01       	movw	r22, r14
     18a:	20 e0       	ldi	r18, 0x00	; 0
     18c:	3f ef       	ldi	r19, 0xFF	; 255
     18e:	4f e7       	ldi	r20, 0x7F	; 127
     190:	57 e4       	ldi	r21, 0x47	; 71
     192:	0e 94 0c 05 	call	0xa18	; 0xa18 <__gtsf2>
     196:	18 16       	cp	r1, r24
     198:	b4 f4       	brge	.+44     	; 0x1c6 <wait+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     19a:	c6 01       	movw	r24, r12
     19c:	b5 01       	movw	r22, r10
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	40 e2       	ldi	r20, 0x20	; 32
     1a4:	51 e4       	ldi	r21, 0x41	; 65
     1a6:	0e 94 12 04 	call	0x824	; 0x824 <__mulsf3>
     1aa:	0e 94 3c 02 	call	0x478	; 0x478 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1ae:	84 e6       	ldi	r24, 0x64	; 100
     1b0:	90 e0       	ldi	r25, 0x00	; 0
     1b2:	05 c0       	rjmp	.+10     	; 0x1be <wait+0x82>
     1b4:	fc 01       	movw	r30, r24
     1b6:	31 97       	sbiw	r30, 0x01	; 1
     1b8:	f1 f7       	brne	.-4      	; 0x1b6 <wait+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1ba:	61 50       	subi	r22, 0x01	; 1
     1bc:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1be:	61 15       	cp	r22, r1
     1c0:	71 05       	cpc	r23, r1
     1c2:	c1 f7       	brne	.-16     	; 0x1b4 <wait+0x78>
     1c4:	07 c0       	rjmp	.+14     	; 0x1d4 <wait+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1c6:	c8 01       	movw	r24, r16
     1c8:	b7 01       	movw	r22, r14
     1ca:	0e 94 3c 02 	call	0x478	; 0x478 <__fixunssfsi>
     1ce:	cb 01       	movw	r24, r22
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	f1 f7       	brne	.-4      	; 0x1d0 <wait+0x94>
}
     1d4:	1f 91       	pop	r17
     1d6:	0f 91       	pop	r16
     1d8:	ff 90       	pop	r15
     1da:	ef 90       	pop	r14
     1dc:	df 90       	pop	r13
     1de:	cf 90       	pop	r12
     1e0:	bf 90       	pop	r11
     1e2:	af 90       	pop	r10
     1e4:	08 95       	ret

000001e6 <ledOFF>:

void ledOFF(){
	PORTB = 0x00;
     1e6:	18 ba       	out	0x18, r1	; 24
}
     1e8:	08 95       	ret

000001ea <timer500>:


void timer500(){
	while((TIFR & (1<<OCF1A)) == 0); // wait for timer overflow flag
     1ea:	08 b6       	in	r0, 0x38	; 56
     1ec:	04 fe       	sbrs	r0, 4
     1ee:	fd cf       	rjmp	.-6      	; 0x1ea <timer500>
	PORTB ^= (1 << PORTB0);
     1f0:	88 b3       	in	r24, 0x18	; 24
     1f2:	91 e0       	ldi	r25, 0x01	; 1
     1f4:	89 27       	eor	r24, r25
     1f6:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 0;
     1f8:	1d bc       	out	0x2d, r1	; 45
     1fa:	1c bc       	out	0x2c, r1	; 44
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag
     1fc:	88 b7       	in	r24, 0x38	; 56
     1fe:	80 61       	ori	r24, 0x10	; 16
     200:	88 bf       	out	0x38, r24	; 56
}
     202:	08 95       	ret

00000204 <ReadADC>:

uint16_t ReadADC(){
	//Start a single conversion
	ADCSRA |= (1 << ADSC);
     204:	36 9a       	sbi	0x06, 6	; 6
	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
     206:	34 9b       	sbis	0x06, 4	; 6
     208:	fe cf       	rjmp	.-4      	; 0x206 <ReadADC+0x2>
	//clear data (conversion is complete)
	ADCSRA |= (1 << ADIF);
     20a:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
     20c:	24 b1       	in	r18, 0x04	; 4
     20e:	35 b1       	in	r19, 0x05	; 5
}
     210:	c9 01       	movw	r24, r18
     212:	08 95       	ret

00000214 <analogLEDTest>:

void analogLEDTest(){
		adc_value = ReadADC();
     214:	0e 94 02 01 	call	0x204	; 0x204 <ReadADC>
     218:	9c 01       	movw	r18, r24
     21a:	90 93 7f 01 	sts	0x017F, r25
     21e:	80 93 7e 01 	sts	0x017E, r24
		if (adc_value > 30){
     222:	8f 31       	cpi	r24, 0x1F	; 31
     224:	91 05       	cpc	r25, r1
     226:	28 f1       	brcs	.+74     	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB0);
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 60){
     22c:	2d 33       	cpi	r18, 0x3D	; 61
     22e:	31 05       	cpc	r19, r1
     230:	00 f1       	brcs	.+64     	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB1);
     232:	82 e0       	ldi	r24, 0x02	; 2
     234:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 90){
     236:	2b 35       	cpi	r18, 0x5B	; 91
     238:	31 05       	cpc	r19, r1
     23a:	d8 f0       	brcs	.+54     	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB2);
     23c:	84 e0       	ldi	r24, 0x04	; 4
     23e:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 120){
     240:	29 37       	cpi	r18, 0x79	; 121
     242:	31 05       	cpc	r19, r1
     244:	b0 f0       	brcs	.+44     	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB3);
     246:	88 e0       	ldi	r24, 0x08	; 8
     248:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 150){
     24a:	27 39       	cpi	r18, 0x97	; 151
     24c:	31 05       	cpc	r19, r1
     24e:	88 f0       	brcs	.+34     	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB4);
     250:	80 e1       	ldi	r24, 0x10	; 16
     252:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 180){
     254:	25 3b       	cpi	r18, 0xB5	; 181
     256:	31 05       	cpc	r19, r1
     258:	60 f0       	brcs	.+24     	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB5);
     25a:	80 e2       	ldi	r24, 0x20	; 32
     25c:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 210){
     25e:	23 3d       	cpi	r18, 0xD3	; 211
     260:	31 05       	cpc	r19, r1
     262:	38 f0       	brcs	.+14     	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB6);
     264:	80 e4       	ldi	r24, 0x40	; 64
     266:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 240){
     268:	21 3f       	cpi	r18, 0xF1	; 241
     26a:	31 05       	cpc	r19, r1
     26c:	10 f0       	brcs	.+4      	; 0x272 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB7);
     26e:	80 e8       	ldi	r24, 0x80	; 128
     270:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value >= 240){
     272:	20 3f       	cpi	r18, 0xF0	; 240
     274:	31 05       	cpc	r19, r1
     276:	10 f0       	brcs	.+4      	; 0x27c <analogLEDTest+0x68>
			PORTB = 0xFF;
     278:	8f ef       	ldi	r24, 0xFF	; 255
     27a:	88 bb       	out	0x18, r24	; 24
     27c:	08 95       	ret

0000027e <midi_Transmit>:
		}
	}

void midi_Transmit( unsigned char data){
	/* Wait for empty transmit buffer */
	while(! UCSRA & (1 << UDRE) );
     27e:	9b b1       	in	r25, 0x0b	; 11

	/* Put data into buffer, sends the data */
	UDR = data;
     280:	8c b9       	out	0x0c, r24	; 12
}
     282:	08 95       	ret

00000284 <midiTransitTest>:
	}
	//stop_addr = eeprom_address;
}

void midiTransitTest(){
	while ((UCSRA & (1 << UDRE)) == 0) {};
     284:	5d 9b       	sbis	0x0b, 5	; 11
     286:	fe cf       	rjmp	.-4      	; 0x284 <midiTransitTest>

	midi_Transmit(MIDIon);
     288:	80 91 60 00 	lds	r24, 0x0060
     28c:	90 91 61 00 	lds	r25, 0x0061
     290:	0e 94 3f 01 	call	0x27e	; 0x27e <midi_Transmit>
	midi_Transmit(MIDIb1);
     294:	80 91 62 00 	lds	r24, 0x0062
     298:	90 91 63 00 	lds	r25, 0x0063
     29c:	0e 94 3f 01 	call	0x27e	; 0x27e <midi_Transmit>
	midi_Transmit(MIDIb2);
     2a0:	80 91 64 00 	lds	r24, 0x0064
     2a4:	90 91 65 00 	lds	r25, 0x0065
     2a8:	0e 94 3f 01 	call	0x27e	; 0x27e <midi_Transmit>
	midi_Transmit(MIDIoff);
     2ac:	80 91 66 00 	lds	r24, 0x0066
     2b0:	90 91 67 00 	lds	r25, 0x0067
     2b4:	0e 94 3f 01 	call	0x27e	; 0x27e <midi_Transmit>
}
     2b8:	08 95       	ret

000002ba <playSong>:
		eeprom_address += sizeof(midi_Receive());
		notecount= notecount + 1;
	}
}

void playSong(){
     2ba:	8f 92       	push	r8
     2bc:	9f 92       	push	r9
     2be:	af 92       	push	r10
     2c0:	bf 92       	push	r11
     2c2:	cf 92       	push	r12
     2c4:	df 92       	push	r13
     2c6:	ef 92       	push	r14
     2c8:	ff 92       	push	r15
     2ca:	0f 93       	push	r16
     2cc:	1f 93       	push	r17
     2ce:	cf 93       	push	r28
     2d0:	df 93       	push	r29
	eeprom_address= 0x00;
     2d2:	10 92 7b 01 	sts	0x017B, r1
     2d6:	10 92 7a 01 	sts	0x017A, r1
     2da:	84 e6       	ldi	r24, 0x64	; 100
     2dc:	88 2e       	mov	r8, r24
     2de:	91 2c       	mov	r9, r1
     2e0:	63 c0       	rjmp	.+198    	; 0x3a8 <playSong+0xee>
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2e2:	e1 99       	sbic	0x1c, 1	; 28
     2e4:	fe cf       	rjmp	.-4      	; 0x2e2 <playSong+0x28>
	/* Set up address register */
	EEAR = uiAddress;
     2e6:	3f bb       	out	0x1f, r19	; 31
     2e8:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2ea:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2ec:	8d b3       	in	r24, 0x1d	; 29
}

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
     2ee:	88 bb       	out	0x18, r24	; 24
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2f0:	e1 99       	sbic	0x1c, 1	; 28
     2f2:	fe cf       	rjmp	.-4      	; 0x2f0 <playSong+0x36>
	/* Set up address register */
	EEAR = uiAddress;
     2f4:	3f bb       	out	0x1f, r19	; 31
     2f6:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2f8:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2fa:	8d b3       	in	r24, 0x1d	; 29

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	0e 94 3f 01 	call	0x27e	; 0x27e <midi_Transmit>
		eeprom_address++;
     302:	c0 91 7a 01 	lds	r28, 0x017A
     306:	d0 91 7b 01 	lds	r29, 0x017B
     30a:	21 96       	adiw	r28, 0x01	; 1
     30c:	d0 93 7b 01 	sts	0x017B, r29
     310:	c0 93 7a 01 	sts	0x017A, r28
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     314:	e1 99       	sbic	0x1c, 1	; 28
     316:	fe cf       	rjmp	.-4      	; 0x314 <playSong+0x5a>
	/* Set up address register */
	EEAR = uiAddress;
     318:	df bb       	out	0x1f, r29	; 31
     31a:	ce bb       	out	0x1e, r28	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     31c:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     31e:	6d b3       	in	r22, 0x1d	; 29
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
     320:	70 e0       	ldi	r23, 0x00	; 0
     322:	80 e0       	ldi	r24, 0x00	; 0
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__floatunsisf>
     32a:	5b 01       	movw	r10, r22
     32c:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     32e:	20 e0       	ldi	r18, 0x00	; 0
     330:	30 e0       	ldi	r19, 0x00	; 0
     332:	4a e7       	ldi	r20, 0x7A	; 122
     334:	54 e4       	ldi	r21, 0x44	; 68
     336:	0e 94 12 04 	call	0x824	; 0x824 <__mulsf3>
     33a:	7b 01       	movw	r14, r22
     33c:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     33e:	20 e0       	ldi	r18, 0x00	; 0
     340:	30 e0       	ldi	r19, 0x00	; 0
     342:	40 e8       	ldi	r20, 0x80	; 128
     344:	5f e3       	ldi	r21, 0x3F	; 63
     346:	0e 94 6c 05 	call	0xad8	; 0xad8 <__ltsf2>
     34a:	88 23       	and	r24, r24
     34c:	1c f4       	brge	.+6      	; 0x354 <playSong+0x9a>
     34e:	61 e0       	ldi	r22, 0x01	; 1
     350:	70 e0       	ldi	r23, 0x00	; 0
     352:	22 c0       	rjmp	.+68     	; 0x398 <playSong+0xde>
		__ticks = 1;
	else if (__tmp > 65535)
     354:	c8 01       	movw	r24, r16
     356:	b7 01       	movw	r22, r14
     358:	20 e0       	ldi	r18, 0x00	; 0
     35a:	3f ef       	ldi	r19, 0xFF	; 255
     35c:	4f e7       	ldi	r20, 0x7F	; 127
     35e:	57 e4       	ldi	r21, 0x47	; 71
     360:	0e 94 0c 05 	call	0xa18	; 0xa18 <__gtsf2>
     364:	18 16       	cp	r1, r24
     366:	a4 f4       	brge	.+40     	; 0x390 <playSong+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     368:	c6 01       	movw	r24, r12
     36a:	b5 01       	movw	r22, r10
     36c:	20 e0       	ldi	r18, 0x00	; 0
     36e:	30 e0       	ldi	r19, 0x00	; 0
     370:	40 e2       	ldi	r20, 0x20	; 32
     372:	51 e4       	ldi	r21, 0x41	; 65
     374:	0e 94 12 04 	call	0x824	; 0x824 <__mulsf3>
     378:	0e 94 3c 02 	call	0x478	; 0x478 <__fixunssfsi>
     37c:	05 c0       	rjmp	.+10     	; 0x388 <playSong+0xce>
     37e:	c4 01       	movw	r24, r8
     380:	01 97       	sbiw	r24, 0x01	; 1
     382:	f1 f7       	brne	.-4      	; 0x380 <playSong+0xc6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     384:	61 50       	subi	r22, 0x01	; 1
     386:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     388:	61 15       	cp	r22, r1
     38a:	71 05       	cpc	r23, r1
     38c:	c1 f7       	brne	.-16     	; 0x37e <playSong+0xc4>
     38e:	07 c0       	rjmp	.+14     	; 0x39e <playSong+0xe4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     390:	c8 01       	movw	r24, r16
     392:	b7 01       	movw	r22, r14
     394:	0e 94 3c 02 	call	0x478	; 0x478 <__fixunssfsi>
     398:	cb 01       	movw	r24, r22
     39a:	01 97       	sbiw	r24, 0x01	; 1
     39c:	f1 f7       	brne	.-4      	; 0x39a <playSong+0xe0>
		eeprom_address++;
     39e:	21 96       	adiw	r28, 0x01	; 1
     3a0:	d0 93 7b 01 	sts	0x017B, r29
     3a4:	c0 93 7a 01 	sts	0x017A, r28
	}
}

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
     3a8:	20 91 7a 01 	lds	r18, 0x017A
     3ac:	30 91 7b 01 	lds	r19, 0x017B
     3b0:	80 91 7c 01 	lds	r24, 0x017C
     3b4:	90 91 7d 01 	lds	r25, 0x017D
     3b8:	28 17       	cp	r18, r24
     3ba:	39 07       	cpc	r19, r25
     3bc:	08 f4       	brcc	.+2      	; 0x3c0 <playSong+0x106>
     3be:	91 cf       	rjmp	.-222    	; 0x2e2 <playSong+0x28>
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
		eeprom_address++;
	}
	
}
     3c0:	df 91       	pop	r29
     3c2:	cf 91       	pop	r28
     3c4:	1f 91       	pop	r17
     3c6:	0f 91       	pop	r16
     3c8:	ff 90       	pop	r15
     3ca:	ef 90       	pop	r14
     3cc:	df 90       	pop	r13
     3ce:	cf 90       	pop	r12
     3d0:	bf 90       	pop	r11
     3d2:	af 90       	pop	r10
     3d4:	9f 90       	pop	r9
     3d6:	8f 90       	pop	r8
     3d8:	08 95       	ret

000003da <midi_Receive>:
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     3da:	5f 9b       	sbis	0x0b, 7	; 11
     3dc:	fe cf       	rjmp	.-4      	; 0x3da <midi_Receive>

	/* get and return data from buffer */
	return UDR;
     3de:	8c b1       	in	r24, 0x0c	; 12
}
     3e0:	08 95       	ret

000003e2 <midi_Flush>:

/* flushs the buffer of the midi */
void midi_Flush(void){ 
     3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <midi_Flush+0x4>
	unsigned char dummy;
	while (UCSRA & (1 << RXC) ) dummy = UDR;
     3e4:	8c b1       	in	r24, 0x0c	; 12
     3e6:	5f 99       	sbic	0x0b, 7	; 11
     3e8:	fd cf       	rjmp	.-6      	; 0x3e4 <midi_Flush+0x2>
}
     3ea:	08 95       	ret

000003ec <midi_ReadUCSRC>:

unsigned char midi_ReadUCSRC(void){
	unsigned char ucsrc;
	/* read UCSRC */
	//note may need cli() to disable interrupts
	ucsrc = UBRRH;
     3ec:	80 b5       	in	r24, 0x20	; 32
	ucsrc = UCSRC;
     3ee:	80 b5       	in	r24, 0x20	; 32
	return ucsrc;
}
     3f0:	08 95       	ret

000003f2 <TIM16_ReadTCNT1>:

unsigned char TIM16_ReadTCNT1(void){
	unsigned char sreg;
	unsigned char i;
	/* save gloval interrupt flag */
	sreg = SREG;
     3f2:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     3f4:	f8 94       	cli
	/* read TCNT1 into i */
	i = TCNT1;
     3f6:	8c b5       	in	r24, 0x2c	; 44
     3f8:	9d b5       	in	r25, 0x2d	; 45
	/* restore global interrupt flag */
	SREG = sreg;
     3fa:	2f bf       	out	0x3f, r18	; 63
	return i;
}
     3fc:	08 95       	ret

000003fe <TIM16_WriteTCNT1>:

void TIM16_WriteTCNT1 (unsigned int i){
	unsigned char sreg;
	/* save global interrupt flag */
	sreg = SREG;
     3fe:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     400:	f8 94       	cli
	/* set tcnt1 to i */
	TCNT1 = i;
     402:	9d bd       	out	0x2d, r25	; 45
     404:	8c bd       	out	0x2c, r24	; 44
	/* restore global interrupt flag */
	SREG = sreg;
     406:	2f bf       	out	0x3f, r18	; 63
}
     408:	08 95       	ret

0000040a <EEPROM_write>:

void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
	/* wait for completion of previous write */
	while (EECR & (1 <<EEWE));
     40a:	e1 99       	sbic	0x1c, 1	; 28
     40c:	fe cf       	rjmp	.-4      	; 0x40a <EEPROM_write>

	/* Set up address and data registers */
	EEAR = uiAddress;
     40e:	9f bb       	out	0x1f, r25	; 31
     410:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
     412:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1 << EEMWE);
     414:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeporm write by setting EEWE */
	EECR |= (1 << EEWE);
     416:	e1 9a       	sbi	0x1c, 1	; 28
}
     418:	08 95       	ret

0000041a <writeSong>:
void modify(){
	//analogLEDTest();
}

void writeSong(){
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag
     41a:	88 b7       	in	r24, 0x38	; 56
     41c:	80 61       	ori	r24, 0x10	; 16
     41e:	88 bf       	out	0x38, r24	; 56
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     420:	5f 9b       	sbis	0x0b, 7	; 11
     422:	fe cf       	rjmp	.-4      	; 0x420 <writeSong+0x6>

	/* get and return data from buffer */
	return UDR;
     424:	8c b1       	in	r24, 0x0c	; 12

void writeSong(){
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag


	if((midi_Receive()) != 0 ) {
     426:	88 23       	and	r24, r24
     428:	f9 f0       	breq	.+62     	; 0x468 <writeSong+0x4e>
		EEPROM_write(eeprom_address, midi_Receive());
     42a:	80 91 7a 01 	lds	r24, 0x017A
     42e:	90 91 7b 01 	lds	r25, 0x017B
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     432:	5f 9b       	sbis	0x0b, 7	; 11
     434:	fe cf       	rjmp	.-4      	; 0x432 <writeSong+0x18>

	/* get and return data from buffer */
	return UDR;
     436:	6c b1       	in	r22, 0x0c	; 12
void writeSong(){
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag


	if((midi_Receive()) != 0 ) {
		EEPROM_write(eeprom_address, midi_Receive());
     438:	0e 94 05 02 	call	0x40a	; 0x40a <EEPROM_write>
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     43c:	5f 9b       	sbis	0x0b, 7	; 11
     43e:	fe cf       	rjmp	.-4      	; 0x43c <writeSong+0x22>

	/* get and return data from buffer */
	return UDR;
     440:	8c b1       	in	r24, 0x0c	; 12
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag


	if((midi_Receive()) != 0 ) {
		EEPROM_write(eeprom_address, midi_Receive());
		PORTB = midi_Receive();	
     442:	88 bb       	out	0x18, r24	; 24
		eeprom_address += sizeof(midi_Receive());
     444:	80 91 7a 01 	lds	r24, 0x017A
     448:	90 91 7b 01 	lds	r25, 0x017B
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	90 93 7b 01 	sts	0x017B, r25
     452:	80 93 7a 01 	sts	0x017A, r24
		notecount= notecount + 1;
     456:	80 91 76 01 	lds	r24, 0x0176
     45a:	90 91 77 01 	lds	r25, 0x0177
     45e:	01 96       	adiw	r24, 0x01	; 1
     460:	90 93 77 01 	sts	0x0177, r25
     464:	80 93 76 01 	sts	0x0176, r24
     468:	08 95       	ret

0000046a <EEPROM_read>:
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     46a:	e1 99       	sbic	0x1c, 1	; 28
     46c:	fe cf       	rjmp	.-4      	; 0x46a <EEPROM_read>
	/* Set up address register */
	EEAR = uiAddress;
     46e:	9f bb       	out	0x1f, r25	; 31
     470:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     472:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     474:	8d b3       	in	r24, 0x1d	; 29
}
     476:	08 95       	ret

00000478 <__fixunssfsi>:
     478:	ef 92       	push	r14
     47a:	ff 92       	push	r15
     47c:	0f 93       	push	r16
     47e:	1f 93       	push	r17
     480:	7b 01       	movw	r14, r22
     482:	8c 01       	movw	r16, r24
     484:	20 e0       	ldi	r18, 0x00	; 0
     486:	30 e0       	ldi	r19, 0x00	; 0
     488:	40 e0       	ldi	r20, 0x00	; 0
     48a:	5f e4       	ldi	r21, 0x4F	; 79
     48c:	0e 94 3c 05 	call	0xa78	; 0xa78 <__gesf2>
     490:	88 23       	and	r24, r24
     492:	8c f0       	brlt	.+34     	; 0x4b6 <__fixunssfsi+0x3e>
     494:	c8 01       	movw	r24, r16
     496:	b7 01       	movw	r22, r14
     498:	20 e0       	ldi	r18, 0x00	; 0
     49a:	30 e0       	ldi	r19, 0x00	; 0
     49c:	40 e0       	ldi	r20, 0x00	; 0
     49e:	5f e4       	ldi	r21, 0x4F	; 79
     4a0:	0e 94 b4 03 	call	0x768	; 0x768 <__subsf3>
     4a4:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__fixsfsi>
     4a8:	9b 01       	movw	r18, r22
     4aa:	ac 01       	movw	r20, r24
     4ac:	20 50       	subi	r18, 0x00	; 0
     4ae:	30 40       	sbci	r19, 0x00	; 0
     4b0:	40 40       	sbci	r20, 0x00	; 0
     4b2:	50 48       	sbci	r21, 0x80	; 128
     4b4:	06 c0       	rjmp	.+12     	; 0x4c2 <__fixunssfsi+0x4a>
     4b6:	c8 01       	movw	r24, r16
     4b8:	b7 01       	movw	r22, r14
     4ba:	0e 94 fa 05 	call	0xbf4	; 0xbf4 <__fixsfsi>
     4be:	9b 01       	movw	r18, r22
     4c0:	ac 01       	movw	r20, r24
     4c2:	b9 01       	movw	r22, r18
     4c4:	ca 01       	movw	r24, r20
     4c6:	1f 91       	pop	r17
     4c8:	0f 91       	pop	r16
     4ca:	ff 90       	pop	r15
     4cc:	ef 90       	pop	r14
     4ce:	08 95       	ret

000004d0 <_fpadd_parts>:
     4d0:	a0 e0       	ldi	r26, 0x00	; 0
     4d2:	b0 e0       	ldi	r27, 0x00	; 0
     4d4:	ee e6       	ldi	r30, 0x6E	; 110
     4d6:	f2 e0       	ldi	r31, 0x02	; 2
     4d8:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__prologue_saves__>
     4dc:	dc 01       	movw	r26, r24
     4de:	2b 01       	movw	r4, r22
     4e0:	fa 01       	movw	r30, r20
     4e2:	9c 91       	ld	r25, X
     4e4:	92 30       	cpi	r25, 0x02	; 2
     4e6:	08 f4       	brcc	.+2      	; 0x4ea <_fpadd_parts+0x1a>
     4e8:	39 c1       	rjmp	.+626    	; 0x75c <_fpadd_parts+0x28c>
     4ea:	eb 01       	movw	r28, r22
     4ec:	88 81       	ld	r24, Y
     4ee:	82 30       	cpi	r24, 0x02	; 2
     4f0:	08 f4       	brcc	.+2      	; 0x4f4 <_fpadd_parts+0x24>
     4f2:	33 c1       	rjmp	.+614    	; 0x75a <_fpadd_parts+0x28a>
     4f4:	94 30       	cpi	r25, 0x04	; 4
     4f6:	69 f4       	brne	.+26     	; 0x512 <_fpadd_parts+0x42>
     4f8:	84 30       	cpi	r24, 0x04	; 4
     4fa:	09 f0       	breq	.+2      	; 0x4fe <_fpadd_parts+0x2e>
     4fc:	2f c1       	rjmp	.+606    	; 0x75c <_fpadd_parts+0x28c>
     4fe:	11 96       	adiw	r26, 0x01	; 1
     500:	9c 91       	ld	r25, X
     502:	11 97       	sbiw	r26, 0x01	; 1
     504:	89 81       	ldd	r24, Y+1	; 0x01
     506:	98 17       	cp	r25, r24
     508:	09 f4       	brne	.+2      	; 0x50c <_fpadd_parts+0x3c>
     50a:	28 c1       	rjmp	.+592    	; 0x75c <_fpadd_parts+0x28c>
     50c:	a8 e6       	ldi	r26, 0x68	; 104
     50e:	b0 e0       	ldi	r27, 0x00	; 0
     510:	25 c1       	rjmp	.+586    	; 0x75c <_fpadd_parts+0x28c>
     512:	84 30       	cpi	r24, 0x04	; 4
     514:	09 f4       	brne	.+2      	; 0x518 <_fpadd_parts+0x48>
     516:	21 c1       	rjmp	.+578    	; 0x75a <_fpadd_parts+0x28a>
     518:	82 30       	cpi	r24, 0x02	; 2
     51a:	a9 f4       	brne	.+42     	; 0x546 <_fpadd_parts+0x76>
     51c:	92 30       	cpi	r25, 0x02	; 2
     51e:	09 f0       	breq	.+2      	; 0x522 <_fpadd_parts+0x52>
     520:	1d c1       	rjmp	.+570    	; 0x75c <_fpadd_parts+0x28c>
     522:	9a 01       	movw	r18, r20
     524:	ad 01       	movw	r20, r26
     526:	88 e0       	ldi	r24, 0x08	; 8
     528:	ea 01       	movw	r28, r20
     52a:	09 90       	ld	r0, Y+
     52c:	ae 01       	movw	r20, r28
     52e:	e9 01       	movw	r28, r18
     530:	09 92       	st	Y+, r0
     532:	9e 01       	movw	r18, r28
     534:	81 50       	subi	r24, 0x01	; 1
     536:	c1 f7       	brne	.-16     	; 0x528 <_fpadd_parts+0x58>
     538:	e2 01       	movw	r28, r4
     53a:	89 81       	ldd	r24, Y+1	; 0x01
     53c:	11 96       	adiw	r26, 0x01	; 1
     53e:	9c 91       	ld	r25, X
     540:	89 23       	and	r24, r25
     542:	81 83       	std	Z+1, r24	; 0x01
     544:	08 c1       	rjmp	.+528    	; 0x756 <_fpadd_parts+0x286>
     546:	92 30       	cpi	r25, 0x02	; 2
     548:	09 f4       	brne	.+2      	; 0x54c <_fpadd_parts+0x7c>
     54a:	07 c1       	rjmp	.+526    	; 0x75a <_fpadd_parts+0x28a>
     54c:	12 96       	adiw	r26, 0x02	; 2
     54e:	2d 90       	ld	r2, X+
     550:	3c 90       	ld	r3, X
     552:	13 97       	sbiw	r26, 0x03	; 3
     554:	eb 01       	movw	r28, r22
     556:	8a 81       	ldd	r24, Y+2	; 0x02
     558:	9b 81       	ldd	r25, Y+3	; 0x03
     55a:	14 96       	adiw	r26, 0x04	; 4
     55c:	ad 90       	ld	r10, X+
     55e:	bd 90       	ld	r11, X+
     560:	cd 90       	ld	r12, X+
     562:	dc 90       	ld	r13, X
     564:	17 97       	sbiw	r26, 0x07	; 7
     566:	ec 80       	ldd	r14, Y+4	; 0x04
     568:	fd 80       	ldd	r15, Y+5	; 0x05
     56a:	0e 81       	ldd	r16, Y+6	; 0x06
     56c:	1f 81       	ldd	r17, Y+7	; 0x07
     56e:	91 01       	movw	r18, r2
     570:	28 1b       	sub	r18, r24
     572:	39 0b       	sbc	r19, r25
     574:	b9 01       	movw	r22, r18
     576:	37 ff       	sbrs	r19, 7
     578:	04 c0       	rjmp	.+8      	; 0x582 <_fpadd_parts+0xb2>
     57a:	66 27       	eor	r22, r22
     57c:	77 27       	eor	r23, r23
     57e:	62 1b       	sub	r22, r18
     580:	73 0b       	sbc	r23, r19
     582:	60 32       	cpi	r22, 0x20	; 32
     584:	71 05       	cpc	r23, r1
     586:	0c f0       	brlt	.+2      	; 0x58a <_fpadd_parts+0xba>
     588:	61 c0       	rjmp	.+194    	; 0x64c <_fpadd_parts+0x17c>
     58a:	12 16       	cp	r1, r18
     58c:	13 06       	cpc	r1, r19
     58e:	6c f5       	brge	.+90     	; 0x5ea <_fpadd_parts+0x11a>
     590:	37 01       	movw	r6, r14
     592:	48 01       	movw	r8, r16
     594:	06 2e       	mov	r0, r22
     596:	04 c0       	rjmp	.+8      	; 0x5a0 <_fpadd_parts+0xd0>
     598:	96 94       	lsr	r9
     59a:	87 94       	ror	r8
     59c:	77 94       	ror	r7
     59e:	67 94       	ror	r6
     5a0:	0a 94       	dec	r0
     5a2:	d2 f7       	brpl	.-12     	; 0x598 <_fpadd_parts+0xc8>
     5a4:	21 e0       	ldi	r18, 0x01	; 1
     5a6:	30 e0       	ldi	r19, 0x00	; 0
     5a8:	40 e0       	ldi	r20, 0x00	; 0
     5aa:	50 e0       	ldi	r21, 0x00	; 0
     5ac:	04 c0       	rjmp	.+8      	; 0x5b6 <_fpadd_parts+0xe6>
     5ae:	22 0f       	add	r18, r18
     5b0:	33 1f       	adc	r19, r19
     5b2:	44 1f       	adc	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	6a 95       	dec	r22
     5b8:	d2 f7       	brpl	.-12     	; 0x5ae <_fpadd_parts+0xde>
     5ba:	21 50       	subi	r18, 0x01	; 1
     5bc:	30 40       	sbci	r19, 0x00	; 0
     5be:	40 40       	sbci	r20, 0x00	; 0
     5c0:	50 40       	sbci	r21, 0x00	; 0
     5c2:	2e 21       	and	r18, r14
     5c4:	3f 21       	and	r19, r15
     5c6:	40 23       	and	r20, r16
     5c8:	51 23       	and	r21, r17
     5ca:	21 15       	cp	r18, r1
     5cc:	31 05       	cpc	r19, r1
     5ce:	41 05       	cpc	r20, r1
     5d0:	51 05       	cpc	r21, r1
     5d2:	21 f0       	breq	.+8      	; 0x5dc <_fpadd_parts+0x10c>
     5d4:	21 e0       	ldi	r18, 0x01	; 1
     5d6:	30 e0       	ldi	r19, 0x00	; 0
     5d8:	40 e0       	ldi	r20, 0x00	; 0
     5da:	50 e0       	ldi	r21, 0x00	; 0
     5dc:	79 01       	movw	r14, r18
     5de:	8a 01       	movw	r16, r20
     5e0:	e6 28       	or	r14, r6
     5e2:	f7 28       	or	r15, r7
     5e4:	08 29       	or	r16, r8
     5e6:	19 29       	or	r17, r9
     5e8:	3c c0       	rjmp	.+120    	; 0x662 <_fpadd_parts+0x192>
     5ea:	23 2b       	or	r18, r19
     5ec:	d1 f1       	breq	.+116    	; 0x662 <_fpadd_parts+0x192>
     5ee:	26 0e       	add	r2, r22
     5f0:	37 1e       	adc	r3, r23
     5f2:	35 01       	movw	r6, r10
     5f4:	46 01       	movw	r8, r12
     5f6:	06 2e       	mov	r0, r22
     5f8:	04 c0       	rjmp	.+8      	; 0x602 <_fpadd_parts+0x132>
     5fa:	96 94       	lsr	r9
     5fc:	87 94       	ror	r8
     5fe:	77 94       	ror	r7
     600:	67 94       	ror	r6
     602:	0a 94       	dec	r0
     604:	d2 f7       	brpl	.-12     	; 0x5fa <_fpadd_parts+0x12a>
     606:	21 e0       	ldi	r18, 0x01	; 1
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	40 e0       	ldi	r20, 0x00	; 0
     60c:	50 e0       	ldi	r21, 0x00	; 0
     60e:	04 c0       	rjmp	.+8      	; 0x618 <_fpadd_parts+0x148>
     610:	22 0f       	add	r18, r18
     612:	33 1f       	adc	r19, r19
     614:	44 1f       	adc	r20, r20
     616:	55 1f       	adc	r21, r21
     618:	6a 95       	dec	r22
     61a:	d2 f7       	brpl	.-12     	; 0x610 <_fpadd_parts+0x140>
     61c:	21 50       	subi	r18, 0x01	; 1
     61e:	30 40       	sbci	r19, 0x00	; 0
     620:	40 40       	sbci	r20, 0x00	; 0
     622:	50 40       	sbci	r21, 0x00	; 0
     624:	2a 21       	and	r18, r10
     626:	3b 21       	and	r19, r11
     628:	4c 21       	and	r20, r12
     62a:	5d 21       	and	r21, r13
     62c:	21 15       	cp	r18, r1
     62e:	31 05       	cpc	r19, r1
     630:	41 05       	cpc	r20, r1
     632:	51 05       	cpc	r21, r1
     634:	21 f0       	breq	.+8      	; 0x63e <_fpadd_parts+0x16e>
     636:	21 e0       	ldi	r18, 0x01	; 1
     638:	30 e0       	ldi	r19, 0x00	; 0
     63a:	40 e0       	ldi	r20, 0x00	; 0
     63c:	50 e0       	ldi	r21, 0x00	; 0
     63e:	59 01       	movw	r10, r18
     640:	6a 01       	movw	r12, r20
     642:	a6 28       	or	r10, r6
     644:	b7 28       	or	r11, r7
     646:	c8 28       	or	r12, r8
     648:	d9 28       	or	r13, r9
     64a:	0b c0       	rjmp	.+22     	; 0x662 <_fpadd_parts+0x192>
     64c:	82 15       	cp	r24, r2
     64e:	93 05       	cpc	r25, r3
     650:	2c f0       	brlt	.+10     	; 0x65c <_fpadd_parts+0x18c>
     652:	1c 01       	movw	r2, r24
     654:	aa 24       	eor	r10, r10
     656:	bb 24       	eor	r11, r11
     658:	65 01       	movw	r12, r10
     65a:	03 c0       	rjmp	.+6      	; 0x662 <_fpadd_parts+0x192>
     65c:	ee 24       	eor	r14, r14
     65e:	ff 24       	eor	r15, r15
     660:	87 01       	movw	r16, r14
     662:	11 96       	adiw	r26, 0x01	; 1
     664:	9c 91       	ld	r25, X
     666:	d2 01       	movw	r26, r4
     668:	11 96       	adiw	r26, 0x01	; 1
     66a:	8c 91       	ld	r24, X
     66c:	98 17       	cp	r25, r24
     66e:	09 f4       	brne	.+2      	; 0x672 <_fpadd_parts+0x1a2>
     670:	45 c0       	rjmp	.+138    	; 0x6fc <_fpadd_parts+0x22c>
     672:	99 23       	and	r25, r25
     674:	39 f0       	breq	.+14     	; 0x684 <_fpadd_parts+0x1b4>
     676:	a8 01       	movw	r20, r16
     678:	97 01       	movw	r18, r14
     67a:	2a 19       	sub	r18, r10
     67c:	3b 09       	sbc	r19, r11
     67e:	4c 09       	sbc	r20, r12
     680:	5d 09       	sbc	r21, r13
     682:	06 c0       	rjmp	.+12     	; 0x690 <_fpadd_parts+0x1c0>
     684:	a6 01       	movw	r20, r12
     686:	95 01       	movw	r18, r10
     688:	2e 19       	sub	r18, r14
     68a:	3f 09       	sbc	r19, r15
     68c:	40 0b       	sbc	r20, r16
     68e:	51 0b       	sbc	r21, r17
     690:	57 fd       	sbrc	r21, 7
     692:	08 c0       	rjmp	.+16     	; 0x6a4 <_fpadd_parts+0x1d4>
     694:	11 82       	std	Z+1, r1	; 0x01
     696:	33 82       	std	Z+3, r3	; 0x03
     698:	22 82       	std	Z+2, r2	; 0x02
     69a:	24 83       	std	Z+4, r18	; 0x04
     69c:	35 83       	std	Z+5, r19	; 0x05
     69e:	46 83       	std	Z+6, r20	; 0x06
     6a0:	57 83       	std	Z+7, r21	; 0x07
     6a2:	1d c0       	rjmp	.+58     	; 0x6de <_fpadd_parts+0x20e>
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	81 83       	std	Z+1, r24	; 0x01
     6a8:	33 82       	std	Z+3, r3	; 0x03
     6aa:	22 82       	std	Z+2, r2	; 0x02
     6ac:	88 27       	eor	r24, r24
     6ae:	99 27       	eor	r25, r25
     6b0:	dc 01       	movw	r26, r24
     6b2:	82 1b       	sub	r24, r18
     6b4:	93 0b       	sbc	r25, r19
     6b6:	a4 0b       	sbc	r26, r20
     6b8:	b5 0b       	sbc	r27, r21
     6ba:	84 83       	std	Z+4, r24	; 0x04
     6bc:	95 83       	std	Z+5, r25	; 0x05
     6be:	a6 83       	std	Z+6, r26	; 0x06
     6c0:	b7 83       	std	Z+7, r27	; 0x07
     6c2:	0d c0       	rjmp	.+26     	; 0x6de <_fpadd_parts+0x20e>
     6c4:	22 0f       	add	r18, r18
     6c6:	33 1f       	adc	r19, r19
     6c8:	44 1f       	adc	r20, r20
     6ca:	55 1f       	adc	r21, r21
     6cc:	24 83       	std	Z+4, r18	; 0x04
     6ce:	35 83       	std	Z+5, r19	; 0x05
     6d0:	46 83       	std	Z+6, r20	; 0x06
     6d2:	57 83       	std	Z+7, r21	; 0x07
     6d4:	82 81       	ldd	r24, Z+2	; 0x02
     6d6:	93 81       	ldd	r25, Z+3	; 0x03
     6d8:	01 97       	sbiw	r24, 0x01	; 1
     6da:	93 83       	std	Z+3, r25	; 0x03
     6dc:	82 83       	std	Z+2, r24	; 0x02
     6de:	24 81       	ldd	r18, Z+4	; 0x04
     6e0:	35 81       	ldd	r19, Z+5	; 0x05
     6e2:	46 81       	ldd	r20, Z+6	; 0x06
     6e4:	57 81       	ldd	r21, Z+7	; 0x07
     6e6:	da 01       	movw	r26, r20
     6e8:	c9 01       	movw	r24, r18
     6ea:	01 97       	sbiw	r24, 0x01	; 1
     6ec:	a1 09       	sbc	r26, r1
     6ee:	b1 09       	sbc	r27, r1
     6f0:	8f 5f       	subi	r24, 0xFF	; 255
     6f2:	9f 4f       	sbci	r25, 0xFF	; 255
     6f4:	af 4f       	sbci	r26, 0xFF	; 255
     6f6:	bf 43       	sbci	r27, 0x3F	; 63
     6f8:	28 f3       	brcs	.-54     	; 0x6c4 <_fpadd_parts+0x1f4>
     6fa:	0b c0       	rjmp	.+22     	; 0x712 <_fpadd_parts+0x242>
     6fc:	91 83       	std	Z+1, r25	; 0x01
     6fe:	33 82       	std	Z+3, r3	; 0x03
     700:	22 82       	std	Z+2, r2	; 0x02
     702:	ea 0c       	add	r14, r10
     704:	fb 1c       	adc	r15, r11
     706:	0c 1d       	adc	r16, r12
     708:	1d 1d       	adc	r17, r13
     70a:	e4 82       	std	Z+4, r14	; 0x04
     70c:	f5 82       	std	Z+5, r15	; 0x05
     70e:	06 83       	std	Z+6, r16	; 0x06
     710:	17 83       	std	Z+7, r17	; 0x07
     712:	83 e0       	ldi	r24, 0x03	; 3
     714:	80 83       	st	Z, r24
     716:	24 81       	ldd	r18, Z+4	; 0x04
     718:	35 81       	ldd	r19, Z+5	; 0x05
     71a:	46 81       	ldd	r20, Z+6	; 0x06
     71c:	57 81       	ldd	r21, Z+7	; 0x07
     71e:	57 ff       	sbrs	r21, 7
     720:	1a c0       	rjmp	.+52     	; 0x756 <_fpadd_parts+0x286>
     722:	c9 01       	movw	r24, r18
     724:	aa 27       	eor	r26, r26
     726:	97 fd       	sbrc	r25, 7
     728:	a0 95       	com	r26
     72a:	ba 2f       	mov	r27, r26
     72c:	81 70       	andi	r24, 0x01	; 1
     72e:	90 70       	andi	r25, 0x00	; 0
     730:	a0 70       	andi	r26, 0x00	; 0
     732:	b0 70       	andi	r27, 0x00	; 0
     734:	56 95       	lsr	r21
     736:	47 95       	ror	r20
     738:	37 95       	ror	r19
     73a:	27 95       	ror	r18
     73c:	82 2b       	or	r24, r18
     73e:	93 2b       	or	r25, r19
     740:	a4 2b       	or	r26, r20
     742:	b5 2b       	or	r27, r21
     744:	84 83       	std	Z+4, r24	; 0x04
     746:	95 83       	std	Z+5, r25	; 0x05
     748:	a6 83       	std	Z+6, r26	; 0x06
     74a:	b7 83       	std	Z+7, r27	; 0x07
     74c:	82 81       	ldd	r24, Z+2	; 0x02
     74e:	93 81       	ldd	r25, Z+3	; 0x03
     750:	01 96       	adiw	r24, 0x01	; 1
     752:	93 83       	std	Z+3, r25	; 0x03
     754:	82 83       	std	Z+2, r24	; 0x02
     756:	df 01       	movw	r26, r30
     758:	01 c0       	rjmp	.+2      	; 0x75c <_fpadd_parts+0x28c>
     75a:	d2 01       	movw	r26, r4
     75c:	cd 01       	movw	r24, r26
     75e:	cd b7       	in	r28, 0x3d	; 61
     760:	de b7       	in	r29, 0x3e	; 62
     762:	e2 e1       	ldi	r30, 0x12	; 18
     764:	0c 94 d8 08 	jmp	0x11b0	; 0x11b0 <__epilogue_restores__>

00000768 <__subsf3>:
     768:	a0 e2       	ldi	r26, 0x20	; 32
     76a:	b0 e0       	ldi	r27, 0x00	; 0
     76c:	ea eb       	ldi	r30, 0xBA	; 186
     76e:	f3 e0       	ldi	r31, 0x03	; 3
     770:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__prologue_saves__+0x18>
     774:	69 83       	std	Y+1, r22	; 0x01
     776:	7a 83       	std	Y+2, r23	; 0x02
     778:	8b 83       	std	Y+3, r24	; 0x03
     77a:	9c 83       	std	Y+4, r25	; 0x04
     77c:	2d 83       	std	Y+5, r18	; 0x05
     77e:	3e 83       	std	Y+6, r19	; 0x06
     780:	4f 83       	std	Y+7, r20	; 0x07
     782:	58 87       	std	Y+8, r21	; 0x08
     784:	e9 e0       	ldi	r30, 0x09	; 9
     786:	ee 2e       	mov	r14, r30
     788:	f1 2c       	mov	r15, r1
     78a:	ec 0e       	add	r14, r28
     78c:	fd 1e       	adc	r15, r29
     78e:	ce 01       	movw	r24, r28
     790:	01 96       	adiw	r24, 0x01	; 1
     792:	b7 01       	movw	r22, r14
     794:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     798:	8e 01       	movw	r16, r28
     79a:	0f 5e       	subi	r16, 0xEF	; 239
     79c:	1f 4f       	sbci	r17, 0xFF	; 255
     79e:	ce 01       	movw	r24, r28
     7a0:	05 96       	adiw	r24, 0x05	; 5
     7a2:	b8 01       	movw	r22, r16
     7a4:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     7a8:	8a 89       	ldd	r24, Y+18	; 0x12
     7aa:	91 e0       	ldi	r25, 0x01	; 1
     7ac:	89 27       	eor	r24, r25
     7ae:	8a 8b       	std	Y+18, r24	; 0x12
     7b0:	c7 01       	movw	r24, r14
     7b2:	b8 01       	movw	r22, r16
     7b4:	ae 01       	movw	r20, r28
     7b6:	47 5e       	subi	r20, 0xE7	; 231
     7b8:	5f 4f       	sbci	r21, 0xFF	; 255
     7ba:	0e 94 68 02 	call	0x4d0	; 0x4d0 <_fpadd_parts>
     7be:	0e 94 16 07 	call	0xe2c	; 0xe2c <__pack_f>
     7c2:	a0 96       	adiw	r28, 0x20	; 32
     7c4:	e6 e0       	ldi	r30, 0x06	; 6
     7c6:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__epilogue_restores__+0x18>

000007ca <__addsf3>:
     7ca:	a0 e2       	ldi	r26, 0x20	; 32
     7cc:	b0 e0       	ldi	r27, 0x00	; 0
     7ce:	eb ee       	ldi	r30, 0xEB	; 235
     7d0:	f3 e0       	ldi	r31, 0x03	; 3
     7d2:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__prologue_saves__+0x18>
     7d6:	69 83       	std	Y+1, r22	; 0x01
     7d8:	7a 83       	std	Y+2, r23	; 0x02
     7da:	8b 83       	std	Y+3, r24	; 0x03
     7dc:	9c 83       	std	Y+4, r25	; 0x04
     7de:	2d 83       	std	Y+5, r18	; 0x05
     7e0:	3e 83       	std	Y+6, r19	; 0x06
     7e2:	4f 83       	std	Y+7, r20	; 0x07
     7e4:	58 87       	std	Y+8, r21	; 0x08
     7e6:	f9 e0       	ldi	r31, 0x09	; 9
     7e8:	ef 2e       	mov	r14, r31
     7ea:	f1 2c       	mov	r15, r1
     7ec:	ec 0e       	add	r14, r28
     7ee:	fd 1e       	adc	r15, r29
     7f0:	ce 01       	movw	r24, r28
     7f2:	01 96       	adiw	r24, 0x01	; 1
     7f4:	b7 01       	movw	r22, r14
     7f6:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     7fa:	8e 01       	movw	r16, r28
     7fc:	0f 5e       	subi	r16, 0xEF	; 239
     7fe:	1f 4f       	sbci	r17, 0xFF	; 255
     800:	ce 01       	movw	r24, r28
     802:	05 96       	adiw	r24, 0x05	; 5
     804:	b8 01       	movw	r22, r16
     806:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     80a:	c7 01       	movw	r24, r14
     80c:	b8 01       	movw	r22, r16
     80e:	ae 01       	movw	r20, r28
     810:	47 5e       	subi	r20, 0xE7	; 231
     812:	5f 4f       	sbci	r21, 0xFF	; 255
     814:	0e 94 68 02 	call	0x4d0	; 0x4d0 <_fpadd_parts>
     818:	0e 94 16 07 	call	0xe2c	; 0xe2c <__pack_f>
     81c:	a0 96       	adiw	r28, 0x20	; 32
     81e:	e6 e0       	ldi	r30, 0x06	; 6
     820:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__epilogue_restores__+0x18>

00000824 <__mulsf3>:
     824:	a0 e2       	ldi	r26, 0x20	; 32
     826:	b0 e0       	ldi	r27, 0x00	; 0
     828:	e8 e1       	ldi	r30, 0x18	; 24
     82a:	f4 e0       	ldi	r31, 0x04	; 4
     82c:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__prologue_saves__>
     830:	69 83       	std	Y+1, r22	; 0x01
     832:	7a 83       	std	Y+2, r23	; 0x02
     834:	8b 83       	std	Y+3, r24	; 0x03
     836:	9c 83       	std	Y+4, r25	; 0x04
     838:	2d 83       	std	Y+5, r18	; 0x05
     83a:	3e 83       	std	Y+6, r19	; 0x06
     83c:	4f 83       	std	Y+7, r20	; 0x07
     83e:	58 87       	std	Y+8, r21	; 0x08
     840:	ce 01       	movw	r24, r28
     842:	01 96       	adiw	r24, 0x01	; 1
     844:	be 01       	movw	r22, r28
     846:	67 5f       	subi	r22, 0xF7	; 247
     848:	7f 4f       	sbci	r23, 0xFF	; 255
     84a:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     84e:	ce 01       	movw	r24, r28
     850:	05 96       	adiw	r24, 0x05	; 5
     852:	be 01       	movw	r22, r28
     854:	6f 5e       	subi	r22, 0xEF	; 239
     856:	7f 4f       	sbci	r23, 0xFF	; 255
     858:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     85c:	99 85       	ldd	r25, Y+9	; 0x09
     85e:	92 30       	cpi	r25, 0x02	; 2
     860:	88 f0       	brcs	.+34     	; 0x884 <__stack+0x25>
     862:	89 89       	ldd	r24, Y+17	; 0x11
     864:	82 30       	cpi	r24, 0x02	; 2
     866:	c8 f0       	brcs	.+50     	; 0x89a <__stack+0x3b>
     868:	94 30       	cpi	r25, 0x04	; 4
     86a:	19 f4       	brne	.+6      	; 0x872 <__stack+0x13>
     86c:	82 30       	cpi	r24, 0x02	; 2
     86e:	51 f4       	brne	.+20     	; 0x884 <__stack+0x25>
     870:	04 c0       	rjmp	.+8      	; 0x87a <__stack+0x1b>
     872:	84 30       	cpi	r24, 0x04	; 4
     874:	29 f4       	brne	.+10     	; 0x880 <__stack+0x21>
     876:	92 30       	cpi	r25, 0x02	; 2
     878:	81 f4       	brne	.+32     	; 0x89a <__stack+0x3b>
     87a:	88 e6       	ldi	r24, 0x68	; 104
     87c:	90 e0       	ldi	r25, 0x00	; 0
     87e:	c6 c0       	rjmp	.+396    	; 0xa0c <__stack+0x1ad>
     880:	92 30       	cpi	r25, 0x02	; 2
     882:	49 f4       	brne	.+18     	; 0x896 <__stack+0x37>
     884:	20 e0       	ldi	r18, 0x00	; 0
     886:	9a 85       	ldd	r25, Y+10	; 0x0a
     888:	8a 89       	ldd	r24, Y+18	; 0x12
     88a:	98 13       	cpse	r25, r24
     88c:	21 e0       	ldi	r18, 0x01	; 1
     88e:	2a 87       	std	Y+10, r18	; 0x0a
     890:	ce 01       	movw	r24, r28
     892:	09 96       	adiw	r24, 0x09	; 9
     894:	bb c0       	rjmp	.+374    	; 0xa0c <__stack+0x1ad>
     896:	82 30       	cpi	r24, 0x02	; 2
     898:	49 f4       	brne	.+18     	; 0x8ac <__stack+0x4d>
     89a:	20 e0       	ldi	r18, 0x00	; 0
     89c:	9a 85       	ldd	r25, Y+10	; 0x0a
     89e:	8a 89       	ldd	r24, Y+18	; 0x12
     8a0:	98 13       	cpse	r25, r24
     8a2:	21 e0       	ldi	r18, 0x01	; 1
     8a4:	2a 8b       	std	Y+18, r18	; 0x12
     8a6:	ce 01       	movw	r24, r28
     8a8:	41 96       	adiw	r24, 0x11	; 17
     8aa:	b0 c0       	rjmp	.+352    	; 0xa0c <__stack+0x1ad>
     8ac:	2d 84       	ldd	r2, Y+13	; 0x0d
     8ae:	3e 84       	ldd	r3, Y+14	; 0x0e
     8b0:	4f 84       	ldd	r4, Y+15	; 0x0f
     8b2:	58 88       	ldd	r5, Y+16	; 0x10
     8b4:	6d 88       	ldd	r6, Y+21	; 0x15
     8b6:	7e 88       	ldd	r7, Y+22	; 0x16
     8b8:	8f 88       	ldd	r8, Y+23	; 0x17
     8ba:	98 8c       	ldd	r9, Y+24	; 0x18
     8bc:	ee 24       	eor	r14, r14
     8be:	ff 24       	eor	r15, r15
     8c0:	87 01       	movw	r16, r14
     8c2:	aa 24       	eor	r10, r10
     8c4:	bb 24       	eor	r11, r11
     8c6:	65 01       	movw	r12, r10
     8c8:	40 e0       	ldi	r20, 0x00	; 0
     8ca:	50 e0       	ldi	r21, 0x00	; 0
     8cc:	60 e0       	ldi	r22, 0x00	; 0
     8ce:	70 e0       	ldi	r23, 0x00	; 0
     8d0:	e0 e0       	ldi	r30, 0x00	; 0
     8d2:	f0 e0       	ldi	r31, 0x00	; 0
     8d4:	c1 01       	movw	r24, r2
     8d6:	81 70       	andi	r24, 0x01	; 1
     8d8:	90 70       	andi	r25, 0x00	; 0
     8da:	89 2b       	or	r24, r25
     8dc:	e9 f0       	breq	.+58     	; 0x918 <__stack+0xb9>
     8de:	e6 0c       	add	r14, r6
     8e0:	f7 1c       	adc	r15, r7
     8e2:	08 1d       	adc	r16, r8
     8e4:	19 1d       	adc	r17, r9
     8e6:	9a 01       	movw	r18, r20
     8e8:	ab 01       	movw	r20, r22
     8ea:	2a 0d       	add	r18, r10
     8ec:	3b 1d       	adc	r19, r11
     8ee:	4c 1d       	adc	r20, r12
     8f0:	5d 1d       	adc	r21, r13
     8f2:	80 e0       	ldi	r24, 0x00	; 0
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	b0 e0       	ldi	r27, 0x00	; 0
     8fa:	e6 14       	cp	r14, r6
     8fc:	f7 04       	cpc	r15, r7
     8fe:	08 05       	cpc	r16, r8
     900:	19 05       	cpc	r17, r9
     902:	20 f4       	brcc	.+8      	; 0x90c <__stack+0xad>
     904:	81 e0       	ldi	r24, 0x01	; 1
     906:	90 e0       	ldi	r25, 0x00	; 0
     908:	a0 e0       	ldi	r26, 0x00	; 0
     90a:	b0 e0       	ldi	r27, 0x00	; 0
     90c:	ba 01       	movw	r22, r20
     90e:	a9 01       	movw	r20, r18
     910:	48 0f       	add	r20, r24
     912:	59 1f       	adc	r21, r25
     914:	6a 1f       	adc	r22, r26
     916:	7b 1f       	adc	r23, r27
     918:	aa 0c       	add	r10, r10
     91a:	bb 1c       	adc	r11, r11
     91c:	cc 1c       	adc	r12, r12
     91e:	dd 1c       	adc	r13, r13
     920:	97 fe       	sbrs	r9, 7
     922:	08 c0       	rjmp	.+16     	; 0x934 <__stack+0xd5>
     924:	81 e0       	ldi	r24, 0x01	; 1
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	a8 2a       	or	r10, r24
     92e:	b9 2a       	or	r11, r25
     930:	ca 2a       	or	r12, r26
     932:	db 2a       	or	r13, r27
     934:	31 96       	adiw	r30, 0x01	; 1
     936:	e0 32       	cpi	r30, 0x20	; 32
     938:	f1 05       	cpc	r31, r1
     93a:	49 f0       	breq	.+18     	; 0x94e <__stack+0xef>
     93c:	66 0c       	add	r6, r6
     93e:	77 1c       	adc	r7, r7
     940:	88 1c       	adc	r8, r8
     942:	99 1c       	adc	r9, r9
     944:	56 94       	lsr	r5
     946:	47 94       	ror	r4
     948:	37 94       	ror	r3
     94a:	27 94       	ror	r2
     94c:	c3 cf       	rjmp	.-122    	; 0x8d4 <__stack+0x75>
     94e:	fa 85       	ldd	r31, Y+10	; 0x0a
     950:	ea 89       	ldd	r30, Y+18	; 0x12
     952:	2b 89       	ldd	r18, Y+19	; 0x13
     954:	3c 89       	ldd	r19, Y+20	; 0x14
     956:	8b 85       	ldd	r24, Y+11	; 0x0b
     958:	9c 85       	ldd	r25, Y+12	; 0x0c
     95a:	28 0f       	add	r18, r24
     95c:	39 1f       	adc	r19, r25
     95e:	2e 5f       	subi	r18, 0xFE	; 254
     960:	3f 4f       	sbci	r19, 0xFF	; 255
     962:	17 c0       	rjmp	.+46     	; 0x992 <__stack+0x133>
     964:	ca 01       	movw	r24, r20
     966:	81 70       	andi	r24, 0x01	; 1
     968:	90 70       	andi	r25, 0x00	; 0
     96a:	89 2b       	or	r24, r25
     96c:	61 f0       	breq	.+24     	; 0x986 <__stack+0x127>
     96e:	16 95       	lsr	r17
     970:	07 95       	ror	r16
     972:	f7 94       	ror	r15
     974:	e7 94       	ror	r14
     976:	80 e0       	ldi	r24, 0x00	; 0
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	a0 e0       	ldi	r26, 0x00	; 0
     97c:	b0 e8       	ldi	r27, 0x80	; 128
     97e:	e8 2a       	or	r14, r24
     980:	f9 2a       	or	r15, r25
     982:	0a 2b       	or	r16, r26
     984:	1b 2b       	or	r17, r27
     986:	76 95       	lsr	r23
     988:	67 95       	ror	r22
     98a:	57 95       	ror	r21
     98c:	47 95       	ror	r20
     98e:	2f 5f       	subi	r18, 0xFF	; 255
     990:	3f 4f       	sbci	r19, 0xFF	; 255
     992:	77 fd       	sbrc	r23, 7
     994:	e7 cf       	rjmp	.-50     	; 0x964 <__stack+0x105>
     996:	0c c0       	rjmp	.+24     	; 0x9b0 <__stack+0x151>
     998:	44 0f       	add	r20, r20
     99a:	55 1f       	adc	r21, r21
     99c:	66 1f       	adc	r22, r22
     99e:	77 1f       	adc	r23, r23
     9a0:	17 fd       	sbrc	r17, 7
     9a2:	41 60       	ori	r20, 0x01	; 1
     9a4:	ee 0c       	add	r14, r14
     9a6:	ff 1c       	adc	r15, r15
     9a8:	00 1f       	adc	r16, r16
     9aa:	11 1f       	adc	r17, r17
     9ac:	21 50       	subi	r18, 0x01	; 1
     9ae:	30 40       	sbci	r19, 0x00	; 0
     9b0:	40 30       	cpi	r20, 0x00	; 0
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	59 07       	cpc	r21, r25
     9b6:	90 e0       	ldi	r25, 0x00	; 0
     9b8:	69 07       	cpc	r22, r25
     9ba:	90 e4       	ldi	r25, 0x40	; 64
     9bc:	79 07       	cpc	r23, r25
     9be:	60 f3       	brcs	.-40     	; 0x998 <__stack+0x139>
     9c0:	2b 8f       	std	Y+27, r18	; 0x1b
     9c2:	3c 8f       	std	Y+28, r19	; 0x1c
     9c4:	db 01       	movw	r26, r22
     9c6:	ca 01       	movw	r24, r20
     9c8:	8f 77       	andi	r24, 0x7F	; 127
     9ca:	90 70       	andi	r25, 0x00	; 0
     9cc:	a0 70       	andi	r26, 0x00	; 0
     9ce:	b0 70       	andi	r27, 0x00	; 0
     9d0:	80 34       	cpi	r24, 0x40	; 64
     9d2:	91 05       	cpc	r25, r1
     9d4:	a1 05       	cpc	r26, r1
     9d6:	b1 05       	cpc	r27, r1
     9d8:	61 f4       	brne	.+24     	; 0x9f2 <__stack+0x193>
     9da:	47 fd       	sbrc	r20, 7
     9dc:	0a c0       	rjmp	.+20     	; 0x9f2 <__stack+0x193>
     9de:	e1 14       	cp	r14, r1
     9e0:	f1 04       	cpc	r15, r1
     9e2:	01 05       	cpc	r16, r1
     9e4:	11 05       	cpc	r17, r1
     9e6:	29 f0       	breq	.+10     	; 0x9f2 <__stack+0x193>
     9e8:	40 5c       	subi	r20, 0xC0	; 192
     9ea:	5f 4f       	sbci	r21, 0xFF	; 255
     9ec:	6f 4f       	sbci	r22, 0xFF	; 255
     9ee:	7f 4f       	sbci	r23, 0xFF	; 255
     9f0:	40 78       	andi	r20, 0x80	; 128
     9f2:	1a 8e       	std	Y+26, r1	; 0x1a
     9f4:	fe 17       	cp	r31, r30
     9f6:	11 f0       	breq	.+4      	; 0x9fc <__stack+0x19d>
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	8a 8f       	std	Y+26, r24	; 0x1a
     9fc:	4d 8f       	std	Y+29, r20	; 0x1d
     9fe:	5e 8f       	std	Y+30, r21	; 0x1e
     a00:	6f 8f       	std	Y+31, r22	; 0x1f
     a02:	78 a3       	std	Y+32, r23	; 0x20
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	89 8f       	std	Y+25, r24	; 0x19
     a08:	ce 01       	movw	r24, r28
     a0a:	49 96       	adiw	r24, 0x19	; 25
     a0c:	0e 94 16 07 	call	0xe2c	; 0xe2c <__pack_f>
     a10:	a0 96       	adiw	r28, 0x20	; 32
     a12:	e2 e1       	ldi	r30, 0x12	; 18
     a14:	0c 94 d8 08 	jmp	0x11b0	; 0x11b0 <__epilogue_restores__>

00000a18 <__gtsf2>:
     a18:	a8 e1       	ldi	r26, 0x18	; 24
     a1a:	b0 e0       	ldi	r27, 0x00	; 0
     a1c:	e2 e1       	ldi	r30, 0x12	; 18
     a1e:	f5 e0       	ldi	r31, 0x05	; 5
     a20:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__prologue_saves__+0x18>
     a24:	69 83       	std	Y+1, r22	; 0x01
     a26:	7a 83       	std	Y+2, r23	; 0x02
     a28:	8b 83       	std	Y+3, r24	; 0x03
     a2a:	9c 83       	std	Y+4, r25	; 0x04
     a2c:	2d 83       	std	Y+5, r18	; 0x05
     a2e:	3e 83       	std	Y+6, r19	; 0x06
     a30:	4f 83       	std	Y+7, r20	; 0x07
     a32:	58 87       	std	Y+8, r21	; 0x08
     a34:	89 e0       	ldi	r24, 0x09	; 9
     a36:	e8 2e       	mov	r14, r24
     a38:	f1 2c       	mov	r15, r1
     a3a:	ec 0e       	add	r14, r28
     a3c:	fd 1e       	adc	r15, r29
     a3e:	ce 01       	movw	r24, r28
     a40:	01 96       	adiw	r24, 0x01	; 1
     a42:	b7 01       	movw	r22, r14
     a44:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     a48:	8e 01       	movw	r16, r28
     a4a:	0f 5e       	subi	r16, 0xEF	; 239
     a4c:	1f 4f       	sbci	r17, 0xFF	; 255
     a4e:	ce 01       	movw	r24, r28
     a50:	05 96       	adiw	r24, 0x05	; 5
     a52:	b8 01       	movw	r22, r16
     a54:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     a58:	89 85       	ldd	r24, Y+9	; 0x09
     a5a:	82 30       	cpi	r24, 0x02	; 2
     a5c:	40 f0       	brcs	.+16     	; 0xa6e <__gtsf2+0x56>
     a5e:	89 89       	ldd	r24, Y+17	; 0x11
     a60:	82 30       	cpi	r24, 0x02	; 2
     a62:	28 f0       	brcs	.+10     	; 0xa6e <__gtsf2+0x56>
     a64:	c7 01       	movw	r24, r14
     a66:	b8 01       	movw	r22, r16
     a68:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__fpcmp_parts_f>
     a6c:	01 c0       	rjmp	.+2      	; 0xa70 <__gtsf2+0x58>
     a6e:	8f ef       	ldi	r24, 0xFF	; 255
     a70:	68 96       	adiw	r28, 0x18	; 24
     a72:	e6 e0       	ldi	r30, 0x06	; 6
     a74:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__epilogue_restores__+0x18>

00000a78 <__gesf2>:
     a78:	a8 e1       	ldi	r26, 0x18	; 24
     a7a:	b0 e0       	ldi	r27, 0x00	; 0
     a7c:	e2 e4       	ldi	r30, 0x42	; 66
     a7e:	f5 e0       	ldi	r31, 0x05	; 5
     a80:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__prologue_saves__+0x18>
     a84:	69 83       	std	Y+1, r22	; 0x01
     a86:	7a 83       	std	Y+2, r23	; 0x02
     a88:	8b 83       	std	Y+3, r24	; 0x03
     a8a:	9c 83       	std	Y+4, r25	; 0x04
     a8c:	2d 83       	std	Y+5, r18	; 0x05
     a8e:	3e 83       	std	Y+6, r19	; 0x06
     a90:	4f 83       	std	Y+7, r20	; 0x07
     a92:	58 87       	std	Y+8, r21	; 0x08
     a94:	89 e0       	ldi	r24, 0x09	; 9
     a96:	e8 2e       	mov	r14, r24
     a98:	f1 2c       	mov	r15, r1
     a9a:	ec 0e       	add	r14, r28
     a9c:	fd 1e       	adc	r15, r29
     a9e:	ce 01       	movw	r24, r28
     aa0:	01 96       	adiw	r24, 0x01	; 1
     aa2:	b7 01       	movw	r22, r14
     aa4:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     aa8:	8e 01       	movw	r16, r28
     aaa:	0f 5e       	subi	r16, 0xEF	; 239
     aac:	1f 4f       	sbci	r17, 0xFF	; 255
     aae:	ce 01       	movw	r24, r28
     ab0:	05 96       	adiw	r24, 0x05	; 5
     ab2:	b8 01       	movw	r22, r16
     ab4:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     ab8:	89 85       	ldd	r24, Y+9	; 0x09
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	40 f0       	brcs	.+16     	; 0xace <__gesf2+0x56>
     abe:	89 89       	ldd	r24, Y+17	; 0x11
     ac0:	82 30       	cpi	r24, 0x02	; 2
     ac2:	28 f0       	brcs	.+10     	; 0xace <__gesf2+0x56>
     ac4:	c7 01       	movw	r24, r14
     ac6:	b8 01       	movw	r22, r16
     ac8:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__fpcmp_parts_f>
     acc:	01 c0       	rjmp	.+2      	; 0xad0 <__gesf2+0x58>
     ace:	8f ef       	ldi	r24, 0xFF	; 255
     ad0:	68 96       	adiw	r28, 0x18	; 24
     ad2:	e6 e0       	ldi	r30, 0x06	; 6
     ad4:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__epilogue_restores__+0x18>

00000ad8 <__ltsf2>:
     ad8:	a8 e1       	ldi	r26, 0x18	; 24
     ada:	b0 e0       	ldi	r27, 0x00	; 0
     adc:	e2 e7       	ldi	r30, 0x72	; 114
     ade:	f5 e0       	ldi	r31, 0x05	; 5
     ae0:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__prologue_saves__+0x18>
     ae4:	69 83       	std	Y+1, r22	; 0x01
     ae6:	7a 83       	std	Y+2, r23	; 0x02
     ae8:	8b 83       	std	Y+3, r24	; 0x03
     aea:	9c 83       	std	Y+4, r25	; 0x04
     aec:	2d 83       	std	Y+5, r18	; 0x05
     aee:	3e 83       	std	Y+6, r19	; 0x06
     af0:	4f 83       	std	Y+7, r20	; 0x07
     af2:	58 87       	std	Y+8, r21	; 0x08
     af4:	89 e0       	ldi	r24, 0x09	; 9
     af6:	e8 2e       	mov	r14, r24
     af8:	f1 2c       	mov	r15, r1
     afa:	ec 0e       	add	r14, r28
     afc:	fd 1e       	adc	r15, r29
     afe:	ce 01       	movw	r24, r28
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	b7 01       	movw	r22, r14
     b04:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     b08:	8e 01       	movw	r16, r28
     b0a:	0f 5e       	subi	r16, 0xEF	; 239
     b0c:	1f 4f       	sbci	r17, 0xFF	; 255
     b0e:	ce 01       	movw	r24, r28
     b10:	05 96       	adiw	r24, 0x05	; 5
     b12:	b8 01       	movw	r22, r16
     b14:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     b18:	89 85       	ldd	r24, Y+9	; 0x09
     b1a:	82 30       	cpi	r24, 0x02	; 2
     b1c:	40 f0       	brcs	.+16     	; 0xb2e <__ltsf2+0x56>
     b1e:	89 89       	ldd	r24, Y+17	; 0x11
     b20:	82 30       	cpi	r24, 0x02	; 2
     b22:	28 f0       	brcs	.+10     	; 0xb2e <__ltsf2+0x56>
     b24:	c7 01       	movw	r24, r14
     b26:	b8 01       	movw	r22, r16
     b28:	0e 94 63 08 	call	0x10c6	; 0x10c6 <__fpcmp_parts_f>
     b2c:	01 c0       	rjmp	.+2      	; 0xb30 <__ltsf2+0x58>
     b2e:	81 e0       	ldi	r24, 0x01	; 1
     b30:	68 96       	adiw	r28, 0x18	; 24
     b32:	e6 e0       	ldi	r30, 0x06	; 6
     b34:	0c 94 e4 08 	jmp	0x11c8	; 0x11c8 <__epilogue_restores__+0x18>

00000b38 <__floatsisf>:
     b38:	a8 e0       	ldi	r26, 0x08	; 8
     b3a:	b0 e0       	ldi	r27, 0x00	; 0
     b3c:	e2 ea       	ldi	r30, 0xA2	; 162
     b3e:	f5 e0       	ldi	r31, 0x05	; 5
     b40:	0c 94 c5 08 	jmp	0x118a	; 0x118a <__prologue_saves__+0x12>
     b44:	9b 01       	movw	r18, r22
     b46:	ac 01       	movw	r20, r24
     b48:	83 e0       	ldi	r24, 0x03	; 3
     b4a:	89 83       	std	Y+1, r24	; 0x01
     b4c:	da 01       	movw	r26, r20
     b4e:	c9 01       	movw	r24, r18
     b50:	88 27       	eor	r24, r24
     b52:	b7 fd       	sbrc	r27, 7
     b54:	83 95       	inc	r24
     b56:	99 27       	eor	r25, r25
     b58:	aa 27       	eor	r26, r26
     b5a:	bb 27       	eor	r27, r27
     b5c:	b8 2e       	mov	r11, r24
     b5e:	21 15       	cp	r18, r1
     b60:	31 05       	cpc	r19, r1
     b62:	41 05       	cpc	r20, r1
     b64:	51 05       	cpc	r21, r1
     b66:	19 f4       	brne	.+6      	; 0xb6e <__floatsisf+0x36>
     b68:	82 e0       	ldi	r24, 0x02	; 2
     b6a:	89 83       	std	Y+1, r24	; 0x01
     b6c:	3a c0       	rjmp	.+116    	; 0xbe2 <__floatsisf+0xaa>
     b6e:	88 23       	and	r24, r24
     b70:	a9 f0       	breq	.+42     	; 0xb9c <__floatsisf+0x64>
     b72:	20 30       	cpi	r18, 0x00	; 0
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	38 07       	cpc	r19, r24
     b78:	80 e0       	ldi	r24, 0x00	; 0
     b7a:	48 07       	cpc	r20, r24
     b7c:	80 e8       	ldi	r24, 0x80	; 128
     b7e:	58 07       	cpc	r21, r24
     b80:	29 f4       	brne	.+10     	; 0xb8c <__floatsisf+0x54>
     b82:	60 e0       	ldi	r22, 0x00	; 0
     b84:	70 e0       	ldi	r23, 0x00	; 0
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	9f ec       	ldi	r25, 0xCF	; 207
     b8a:	30 c0       	rjmp	.+96     	; 0xbec <__floatsisf+0xb4>
     b8c:	ee 24       	eor	r14, r14
     b8e:	ff 24       	eor	r15, r15
     b90:	87 01       	movw	r16, r14
     b92:	e2 1a       	sub	r14, r18
     b94:	f3 0a       	sbc	r15, r19
     b96:	04 0b       	sbc	r16, r20
     b98:	15 0b       	sbc	r17, r21
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <__floatsisf+0x68>
     b9c:	79 01       	movw	r14, r18
     b9e:	8a 01       	movw	r16, r20
     ba0:	8e e1       	ldi	r24, 0x1E	; 30
     ba2:	c8 2e       	mov	r12, r24
     ba4:	d1 2c       	mov	r13, r1
     ba6:	dc 82       	std	Y+4, r13	; 0x04
     ba8:	cb 82       	std	Y+3, r12	; 0x03
     baa:	ed 82       	std	Y+5, r14	; 0x05
     bac:	fe 82       	std	Y+6, r15	; 0x06
     bae:	0f 83       	std	Y+7, r16	; 0x07
     bb0:	18 87       	std	Y+8, r17	; 0x08
     bb2:	c8 01       	movw	r24, r16
     bb4:	b7 01       	movw	r22, r14
     bb6:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__clzsi2>
     bba:	01 97       	sbiw	r24, 0x01	; 1
     bbc:	18 16       	cp	r1, r24
     bbe:	19 06       	cpc	r1, r25
     bc0:	84 f4       	brge	.+32     	; 0xbe2 <__floatsisf+0xaa>
     bc2:	08 2e       	mov	r0, r24
     bc4:	04 c0       	rjmp	.+8      	; 0xbce <__floatsisf+0x96>
     bc6:	ee 0c       	add	r14, r14
     bc8:	ff 1c       	adc	r15, r15
     bca:	00 1f       	adc	r16, r16
     bcc:	11 1f       	adc	r17, r17
     bce:	0a 94       	dec	r0
     bd0:	d2 f7       	brpl	.-12     	; 0xbc6 <__floatsisf+0x8e>
     bd2:	ed 82       	std	Y+5, r14	; 0x05
     bd4:	fe 82       	std	Y+6, r15	; 0x06
     bd6:	0f 83       	std	Y+7, r16	; 0x07
     bd8:	18 87       	std	Y+8, r17	; 0x08
     bda:	c8 1a       	sub	r12, r24
     bdc:	d9 0a       	sbc	r13, r25
     bde:	dc 82       	std	Y+4, r13	; 0x04
     be0:	cb 82       	std	Y+3, r12	; 0x03
     be2:	ba 82       	std	Y+2, r11	; 0x02
     be4:	ce 01       	movw	r24, r28
     be6:	01 96       	adiw	r24, 0x01	; 1
     be8:	0e 94 16 07 	call	0xe2c	; 0xe2c <__pack_f>
     bec:	28 96       	adiw	r28, 0x08	; 8
     bee:	e9 e0       	ldi	r30, 0x09	; 9
     bf0:	0c 94 e1 08 	jmp	0x11c2	; 0x11c2 <__epilogue_restores__+0x12>

00000bf4 <__fixsfsi>:
     bf4:	ac e0       	ldi	r26, 0x0C	; 12
     bf6:	b0 e0       	ldi	r27, 0x00	; 0
     bf8:	e0 e0       	ldi	r30, 0x00	; 0
     bfa:	f6 e0       	ldi	r31, 0x06	; 6
     bfc:	0c 94 cc 08 	jmp	0x1198	; 0x1198 <__prologue_saves__+0x20>
     c00:	69 83       	std	Y+1, r22	; 0x01
     c02:	7a 83       	std	Y+2, r23	; 0x02
     c04:	8b 83       	std	Y+3, r24	; 0x03
     c06:	9c 83       	std	Y+4, r25	; 0x04
     c08:	ce 01       	movw	r24, r28
     c0a:	01 96       	adiw	r24, 0x01	; 1
     c0c:	be 01       	movw	r22, r28
     c0e:	6b 5f       	subi	r22, 0xFB	; 251
     c10:	7f 4f       	sbci	r23, 0xFF	; 255
     c12:	0e 94 eb 07 	call	0xfd6	; 0xfd6 <__unpack_f>
     c16:	8d 81       	ldd	r24, Y+5	; 0x05
     c18:	82 30       	cpi	r24, 0x02	; 2
     c1a:	61 f1       	breq	.+88     	; 0xc74 <__fixsfsi+0x80>
     c1c:	82 30       	cpi	r24, 0x02	; 2
     c1e:	50 f1       	brcs	.+84     	; 0xc74 <__fixsfsi+0x80>
     c20:	84 30       	cpi	r24, 0x04	; 4
     c22:	21 f4       	brne	.+8      	; 0xc2c <__fixsfsi+0x38>
     c24:	8e 81       	ldd	r24, Y+6	; 0x06
     c26:	88 23       	and	r24, r24
     c28:	51 f1       	breq	.+84     	; 0xc7e <__fixsfsi+0x8a>
     c2a:	2e c0       	rjmp	.+92     	; 0xc88 <__fixsfsi+0x94>
     c2c:	2f 81       	ldd	r18, Y+7	; 0x07
     c2e:	38 85       	ldd	r19, Y+8	; 0x08
     c30:	37 fd       	sbrc	r19, 7
     c32:	20 c0       	rjmp	.+64     	; 0xc74 <__fixsfsi+0x80>
     c34:	6e 81       	ldd	r22, Y+6	; 0x06
     c36:	2f 31       	cpi	r18, 0x1F	; 31
     c38:	31 05       	cpc	r19, r1
     c3a:	1c f0       	brlt	.+6      	; 0xc42 <__fixsfsi+0x4e>
     c3c:	66 23       	and	r22, r22
     c3e:	f9 f0       	breq	.+62     	; 0xc7e <__fixsfsi+0x8a>
     c40:	23 c0       	rjmp	.+70     	; 0xc88 <__fixsfsi+0x94>
     c42:	8e e1       	ldi	r24, 0x1E	; 30
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	82 1b       	sub	r24, r18
     c48:	93 0b       	sbc	r25, r19
     c4a:	29 85       	ldd	r18, Y+9	; 0x09
     c4c:	3a 85       	ldd	r19, Y+10	; 0x0a
     c4e:	4b 85       	ldd	r20, Y+11	; 0x0b
     c50:	5c 85       	ldd	r21, Y+12	; 0x0c
     c52:	04 c0       	rjmp	.+8      	; 0xc5c <__fixsfsi+0x68>
     c54:	56 95       	lsr	r21
     c56:	47 95       	ror	r20
     c58:	37 95       	ror	r19
     c5a:	27 95       	ror	r18
     c5c:	8a 95       	dec	r24
     c5e:	d2 f7       	brpl	.-12     	; 0xc54 <__fixsfsi+0x60>
     c60:	66 23       	and	r22, r22
     c62:	b1 f0       	breq	.+44     	; 0xc90 <__fixsfsi+0x9c>
     c64:	50 95       	com	r21
     c66:	40 95       	com	r20
     c68:	30 95       	com	r19
     c6a:	21 95       	neg	r18
     c6c:	3f 4f       	sbci	r19, 0xFF	; 255
     c6e:	4f 4f       	sbci	r20, 0xFF	; 255
     c70:	5f 4f       	sbci	r21, 0xFF	; 255
     c72:	0e c0       	rjmp	.+28     	; 0xc90 <__fixsfsi+0x9c>
     c74:	20 e0       	ldi	r18, 0x00	; 0
     c76:	30 e0       	ldi	r19, 0x00	; 0
     c78:	40 e0       	ldi	r20, 0x00	; 0
     c7a:	50 e0       	ldi	r21, 0x00	; 0
     c7c:	09 c0       	rjmp	.+18     	; 0xc90 <__fixsfsi+0x9c>
     c7e:	2f ef       	ldi	r18, 0xFF	; 255
     c80:	3f ef       	ldi	r19, 0xFF	; 255
     c82:	4f ef       	ldi	r20, 0xFF	; 255
     c84:	5f e7       	ldi	r21, 0x7F	; 127
     c86:	04 c0       	rjmp	.+8      	; 0xc90 <__fixsfsi+0x9c>
     c88:	20 e0       	ldi	r18, 0x00	; 0
     c8a:	30 e0       	ldi	r19, 0x00	; 0
     c8c:	40 e0       	ldi	r20, 0x00	; 0
     c8e:	50 e8       	ldi	r21, 0x80	; 128
     c90:	b9 01       	movw	r22, r18
     c92:	ca 01       	movw	r24, r20
     c94:	2c 96       	adiw	r28, 0x0c	; 12
     c96:	e2 e0       	ldi	r30, 0x02	; 2
     c98:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <__epilogue_restores__+0x20>

00000c9c <__floatunsisf>:
     c9c:	a8 e0       	ldi	r26, 0x08	; 8
     c9e:	b0 e0       	ldi	r27, 0x00	; 0
     ca0:	e4 e5       	ldi	r30, 0x54	; 84
     ca2:	f6 e0       	ldi	r31, 0x06	; 6
     ca4:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__prologue_saves__+0x10>
     ca8:	7b 01       	movw	r14, r22
     caa:	8c 01       	movw	r16, r24
     cac:	61 15       	cp	r22, r1
     cae:	71 05       	cpc	r23, r1
     cb0:	81 05       	cpc	r24, r1
     cb2:	91 05       	cpc	r25, r1
     cb4:	19 f4       	brne	.+6      	; 0xcbc <__floatunsisf+0x20>
     cb6:	82 e0       	ldi	r24, 0x02	; 2
     cb8:	89 83       	std	Y+1, r24	; 0x01
     cba:	60 c0       	rjmp	.+192    	; 0xd7c <__floatunsisf+0xe0>
     cbc:	83 e0       	ldi	r24, 0x03	; 3
     cbe:	89 83       	std	Y+1, r24	; 0x01
     cc0:	8e e1       	ldi	r24, 0x1E	; 30
     cc2:	c8 2e       	mov	r12, r24
     cc4:	d1 2c       	mov	r13, r1
     cc6:	dc 82       	std	Y+4, r13	; 0x04
     cc8:	cb 82       	std	Y+3, r12	; 0x03
     cca:	ed 82       	std	Y+5, r14	; 0x05
     ccc:	fe 82       	std	Y+6, r15	; 0x06
     cce:	0f 83       	std	Y+7, r16	; 0x07
     cd0:	18 87       	std	Y+8, r17	; 0x08
     cd2:	c8 01       	movw	r24, r16
     cd4:	b7 01       	movw	r22, r14
     cd6:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__clzsi2>
     cda:	fc 01       	movw	r30, r24
     cdc:	31 97       	sbiw	r30, 0x01	; 1
     cde:	f7 ff       	sbrs	r31, 7
     ce0:	3b c0       	rjmp	.+118    	; 0xd58 <__floatunsisf+0xbc>
     ce2:	22 27       	eor	r18, r18
     ce4:	33 27       	eor	r19, r19
     ce6:	2e 1b       	sub	r18, r30
     ce8:	3f 0b       	sbc	r19, r31
     cea:	57 01       	movw	r10, r14
     cec:	68 01       	movw	r12, r16
     cee:	02 2e       	mov	r0, r18
     cf0:	04 c0       	rjmp	.+8      	; 0xcfa <__floatunsisf+0x5e>
     cf2:	d6 94       	lsr	r13
     cf4:	c7 94       	ror	r12
     cf6:	b7 94       	ror	r11
     cf8:	a7 94       	ror	r10
     cfa:	0a 94       	dec	r0
     cfc:	d2 f7       	brpl	.-12     	; 0xcf2 <__floatunsisf+0x56>
     cfe:	40 e0       	ldi	r20, 0x00	; 0
     d00:	50 e0       	ldi	r21, 0x00	; 0
     d02:	60 e0       	ldi	r22, 0x00	; 0
     d04:	70 e0       	ldi	r23, 0x00	; 0
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	a0 e0       	ldi	r26, 0x00	; 0
     d0c:	b0 e0       	ldi	r27, 0x00	; 0
     d0e:	04 c0       	rjmp	.+8      	; 0xd18 <__floatunsisf+0x7c>
     d10:	88 0f       	add	r24, r24
     d12:	99 1f       	adc	r25, r25
     d14:	aa 1f       	adc	r26, r26
     d16:	bb 1f       	adc	r27, r27
     d18:	2a 95       	dec	r18
     d1a:	d2 f7       	brpl	.-12     	; 0xd10 <__floatunsisf+0x74>
     d1c:	01 97       	sbiw	r24, 0x01	; 1
     d1e:	a1 09       	sbc	r26, r1
     d20:	b1 09       	sbc	r27, r1
     d22:	8e 21       	and	r24, r14
     d24:	9f 21       	and	r25, r15
     d26:	a0 23       	and	r26, r16
     d28:	b1 23       	and	r27, r17
     d2a:	00 97       	sbiw	r24, 0x00	; 0
     d2c:	a1 05       	cpc	r26, r1
     d2e:	b1 05       	cpc	r27, r1
     d30:	21 f0       	breq	.+8      	; 0xd3a <__floatunsisf+0x9e>
     d32:	41 e0       	ldi	r20, 0x01	; 1
     d34:	50 e0       	ldi	r21, 0x00	; 0
     d36:	60 e0       	ldi	r22, 0x00	; 0
     d38:	70 e0       	ldi	r23, 0x00	; 0
     d3a:	4a 29       	or	r20, r10
     d3c:	5b 29       	or	r21, r11
     d3e:	6c 29       	or	r22, r12
     d40:	7d 29       	or	r23, r13
     d42:	4d 83       	std	Y+5, r20	; 0x05
     d44:	5e 83       	std	Y+6, r21	; 0x06
     d46:	6f 83       	std	Y+7, r22	; 0x07
     d48:	78 87       	std	Y+8, r23	; 0x08
     d4a:	8e e1       	ldi	r24, 0x1E	; 30
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	8e 1b       	sub	r24, r30
     d50:	9f 0b       	sbc	r25, r31
     d52:	9c 83       	std	Y+4, r25	; 0x04
     d54:	8b 83       	std	Y+3, r24	; 0x03
     d56:	12 c0       	rjmp	.+36     	; 0xd7c <__floatunsisf+0xe0>
     d58:	30 97       	sbiw	r30, 0x00	; 0
     d5a:	81 f0       	breq	.+32     	; 0xd7c <__floatunsisf+0xe0>
     d5c:	0e 2e       	mov	r0, r30
     d5e:	04 c0       	rjmp	.+8      	; 0xd68 <__floatunsisf+0xcc>
     d60:	ee 0c       	add	r14, r14
     d62:	ff 1c       	adc	r15, r15
     d64:	00 1f       	adc	r16, r16
     d66:	11 1f       	adc	r17, r17
     d68:	0a 94       	dec	r0
     d6a:	d2 f7       	brpl	.-12     	; 0xd60 <__floatunsisf+0xc4>
     d6c:	ed 82       	std	Y+5, r14	; 0x05
     d6e:	fe 82       	std	Y+6, r15	; 0x06
     d70:	0f 83       	std	Y+7, r16	; 0x07
     d72:	18 87       	std	Y+8, r17	; 0x08
     d74:	ce 1a       	sub	r12, r30
     d76:	df 0a       	sbc	r13, r31
     d78:	dc 82       	std	Y+4, r13	; 0x04
     d7a:	cb 82       	std	Y+3, r12	; 0x03
     d7c:	1a 82       	std	Y+2, r1	; 0x02
     d7e:	ce 01       	movw	r24, r28
     d80:	01 96       	adiw	r24, 0x01	; 1
     d82:	0e 94 16 07 	call	0xe2c	; 0xe2c <__pack_f>
     d86:	28 96       	adiw	r28, 0x08	; 8
     d88:	ea e0       	ldi	r30, 0x0A	; 10
     d8a:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__epilogue_restores__+0x10>

00000d8e <__clzsi2>:
     d8e:	ef 92       	push	r14
     d90:	ff 92       	push	r15
     d92:	0f 93       	push	r16
     d94:	1f 93       	push	r17
     d96:	7b 01       	movw	r14, r22
     d98:	8c 01       	movw	r16, r24
     d9a:	80 e0       	ldi	r24, 0x00	; 0
     d9c:	e8 16       	cp	r14, r24
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	f8 06       	cpc	r15, r24
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	08 07       	cpc	r16, r24
     da6:	80 e0       	ldi	r24, 0x00	; 0
     da8:	18 07       	cpc	r17, r24
     daa:	88 f4       	brcc	.+34     	; 0xdce <__clzsi2+0x40>
     dac:	8f ef       	ldi	r24, 0xFF	; 255
     dae:	e8 16       	cp	r14, r24
     db0:	f1 04       	cpc	r15, r1
     db2:	01 05       	cpc	r16, r1
     db4:	11 05       	cpc	r17, r1
     db6:	31 f0       	breq	.+12     	; 0xdc4 <__clzsi2+0x36>
     db8:	28 f0       	brcs	.+10     	; 0xdc4 <__clzsi2+0x36>
     dba:	88 e0       	ldi	r24, 0x08	; 8
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	a0 e0       	ldi	r26, 0x00	; 0
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	17 c0       	rjmp	.+46     	; 0xdf2 <__clzsi2+0x64>
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	a0 e0       	ldi	r26, 0x00	; 0
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	12 c0       	rjmp	.+36     	; 0xdf2 <__clzsi2+0x64>
     dce:	80 e0       	ldi	r24, 0x00	; 0
     dd0:	e8 16       	cp	r14, r24
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	f8 06       	cpc	r15, r24
     dd6:	80 e0       	ldi	r24, 0x00	; 0
     dd8:	08 07       	cpc	r16, r24
     dda:	81 e0       	ldi	r24, 0x01	; 1
     ddc:	18 07       	cpc	r17, r24
     dde:	28 f0       	brcs	.+10     	; 0xdea <__clzsi2+0x5c>
     de0:	88 e1       	ldi	r24, 0x18	; 24
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	a0 e0       	ldi	r26, 0x00	; 0
     de6:	b0 e0       	ldi	r27, 0x00	; 0
     de8:	04 c0       	rjmp	.+8      	; 0xdf2 <__clzsi2+0x64>
     dea:	80 e1       	ldi	r24, 0x10	; 16
     dec:	90 e0       	ldi	r25, 0x00	; 0
     dee:	a0 e0       	ldi	r26, 0x00	; 0
     df0:	b0 e0       	ldi	r27, 0x00	; 0
     df2:	20 e2       	ldi	r18, 0x20	; 32
     df4:	30 e0       	ldi	r19, 0x00	; 0
     df6:	40 e0       	ldi	r20, 0x00	; 0
     df8:	50 e0       	ldi	r21, 0x00	; 0
     dfa:	28 1b       	sub	r18, r24
     dfc:	39 0b       	sbc	r19, r25
     dfe:	4a 0b       	sbc	r20, r26
     e00:	5b 0b       	sbc	r21, r27
     e02:	04 c0       	rjmp	.+8      	; 0xe0c <__clzsi2+0x7e>
     e04:	16 95       	lsr	r17
     e06:	07 95       	ror	r16
     e08:	f7 94       	ror	r15
     e0a:	e7 94       	ror	r14
     e0c:	8a 95       	dec	r24
     e0e:	d2 f7       	brpl	.-12     	; 0xe04 <__clzsi2+0x76>
     e10:	f7 01       	movw	r30, r14
     e12:	e0 59       	subi	r30, 0x90	; 144
     e14:	ff 4f       	sbci	r31, 0xFF	; 255
     e16:	80 81       	ld	r24, Z
     e18:	28 1b       	sub	r18, r24
     e1a:	31 09       	sbc	r19, r1
     e1c:	41 09       	sbc	r20, r1
     e1e:	51 09       	sbc	r21, r1
     e20:	c9 01       	movw	r24, r18
     e22:	1f 91       	pop	r17
     e24:	0f 91       	pop	r16
     e26:	ff 90       	pop	r15
     e28:	ef 90       	pop	r14
     e2a:	08 95       	ret

00000e2c <__pack_f>:
     e2c:	df 92       	push	r13
     e2e:	ef 92       	push	r14
     e30:	ff 92       	push	r15
     e32:	0f 93       	push	r16
     e34:	1f 93       	push	r17
     e36:	fc 01       	movw	r30, r24
     e38:	e4 80       	ldd	r14, Z+4	; 0x04
     e3a:	f5 80       	ldd	r15, Z+5	; 0x05
     e3c:	06 81       	ldd	r16, Z+6	; 0x06
     e3e:	17 81       	ldd	r17, Z+7	; 0x07
     e40:	d1 80       	ldd	r13, Z+1	; 0x01
     e42:	80 81       	ld	r24, Z
     e44:	82 30       	cpi	r24, 0x02	; 2
     e46:	48 f4       	brcc	.+18     	; 0xe5a <__pack_f+0x2e>
     e48:	80 e0       	ldi	r24, 0x00	; 0
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	a0 e1       	ldi	r26, 0x10	; 16
     e4e:	b0 e0       	ldi	r27, 0x00	; 0
     e50:	e8 2a       	or	r14, r24
     e52:	f9 2a       	or	r15, r25
     e54:	0a 2b       	or	r16, r26
     e56:	1b 2b       	or	r17, r27
     e58:	a5 c0       	rjmp	.+330    	; 0xfa4 <__pack_f+0x178>
     e5a:	84 30       	cpi	r24, 0x04	; 4
     e5c:	09 f4       	brne	.+2      	; 0xe60 <__pack_f+0x34>
     e5e:	9f c0       	rjmp	.+318    	; 0xf9e <__pack_f+0x172>
     e60:	82 30       	cpi	r24, 0x02	; 2
     e62:	21 f4       	brne	.+8      	; 0xe6c <__pack_f+0x40>
     e64:	ee 24       	eor	r14, r14
     e66:	ff 24       	eor	r15, r15
     e68:	87 01       	movw	r16, r14
     e6a:	05 c0       	rjmp	.+10     	; 0xe76 <__pack_f+0x4a>
     e6c:	e1 14       	cp	r14, r1
     e6e:	f1 04       	cpc	r15, r1
     e70:	01 05       	cpc	r16, r1
     e72:	11 05       	cpc	r17, r1
     e74:	19 f4       	brne	.+6      	; 0xe7c <__pack_f+0x50>
     e76:	e0 e0       	ldi	r30, 0x00	; 0
     e78:	f0 e0       	ldi	r31, 0x00	; 0
     e7a:	96 c0       	rjmp	.+300    	; 0xfa8 <__pack_f+0x17c>
     e7c:	62 81       	ldd	r22, Z+2	; 0x02
     e7e:	73 81       	ldd	r23, Z+3	; 0x03
     e80:	9f ef       	ldi	r25, 0xFF	; 255
     e82:	62 38       	cpi	r22, 0x82	; 130
     e84:	79 07       	cpc	r23, r25
     e86:	0c f0       	brlt	.+2      	; 0xe8a <__pack_f+0x5e>
     e88:	5b c0       	rjmp	.+182    	; 0xf40 <__pack_f+0x114>
     e8a:	22 e8       	ldi	r18, 0x82	; 130
     e8c:	3f ef       	ldi	r19, 0xFF	; 255
     e8e:	26 1b       	sub	r18, r22
     e90:	37 0b       	sbc	r19, r23
     e92:	2a 31       	cpi	r18, 0x1A	; 26
     e94:	31 05       	cpc	r19, r1
     e96:	2c f0       	brlt	.+10     	; 0xea2 <__pack_f+0x76>
     e98:	20 e0       	ldi	r18, 0x00	; 0
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	40 e0       	ldi	r20, 0x00	; 0
     e9e:	50 e0       	ldi	r21, 0x00	; 0
     ea0:	2a c0       	rjmp	.+84     	; 0xef6 <__pack_f+0xca>
     ea2:	b8 01       	movw	r22, r16
     ea4:	a7 01       	movw	r20, r14
     ea6:	02 2e       	mov	r0, r18
     ea8:	04 c0       	rjmp	.+8      	; 0xeb2 <__pack_f+0x86>
     eaa:	76 95       	lsr	r23
     eac:	67 95       	ror	r22
     eae:	57 95       	ror	r21
     eb0:	47 95       	ror	r20
     eb2:	0a 94       	dec	r0
     eb4:	d2 f7       	brpl	.-12     	; 0xeaa <__pack_f+0x7e>
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	a0 e0       	ldi	r26, 0x00	; 0
     ebc:	b0 e0       	ldi	r27, 0x00	; 0
     ebe:	04 c0       	rjmp	.+8      	; 0xec8 <__pack_f+0x9c>
     ec0:	88 0f       	add	r24, r24
     ec2:	99 1f       	adc	r25, r25
     ec4:	aa 1f       	adc	r26, r26
     ec6:	bb 1f       	adc	r27, r27
     ec8:	2a 95       	dec	r18
     eca:	d2 f7       	brpl	.-12     	; 0xec0 <__pack_f+0x94>
     ecc:	01 97       	sbiw	r24, 0x01	; 1
     ece:	a1 09       	sbc	r26, r1
     ed0:	b1 09       	sbc	r27, r1
     ed2:	8e 21       	and	r24, r14
     ed4:	9f 21       	and	r25, r15
     ed6:	a0 23       	and	r26, r16
     ed8:	b1 23       	and	r27, r17
     eda:	00 97       	sbiw	r24, 0x00	; 0
     edc:	a1 05       	cpc	r26, r1
     ede:	b1 05       	cpc	r27, r1
     ee0:	21 f0       	breq	.+8      	; 0xeea <__pack_f+0xbe>
     ee2:	81 e0       	ldi	r24, 0x01	; 1
     ee4:	90 e0       	ldi	r25, 0x00	; 0
     ee6:	a0 e0       	ldi	r26, 0x00	; 0
     ee8:	b0 e0       	ldi	r27, 0x00	; 0
     eea:	9a 01       	movw	r18, r20
     eec:	ab 01       	movw	r20, r22
     eee:	28 2b       	or	r18, r24
     ef0:	39 2b       	or	r19, r25
     ef2:	4a 2b       	or	r20, r26
     ef4:	5b 2b       	or	r21, r27
     ef6:	da 01       	movw	r26, r20
     ef8:	c9 01       	movw	r24, r18
     efa:	8f 77       	andi	r24, 0x7F	; 127
     efc:	90 70       	andi	r25, 0x00	; 0
     efe:	a0 70       	andi	r26, 0x00	; 0
     f00:	b0 70       	andi	r27, 0x00	; 0
     f02:	80 34       	cpi	r24, 0x40	; 64
     f04:	91 05       	cpc	r25, r1
     f06:	a1 05       	cpc	r26, r1
     f08:	b1 05       	cpc	r27, r1
     f0a:	39 f4       	brne	.+14     	; 0xf1a <__pack_f+0xee>
     f0c:	27 ff       	sbrs	r18, 7
     f0e:	09 c0       	rjmp	.+18     	; 0xf22 <__pack_f+0xf6>
     f10:	20 5c       	subi	r18, 0xC0	; 192
     f12:	3f 4f       	sbci	r19, 0xFF	; 255
     f14:	4f 4f       	sbci	r20, 0xFF	; 255
     f16:	5f 4f       	sbci	r21, 0xFF	; 255
     f18:	04 c0       	rjmp	.+8      	; 0xf22 <__pack_f+0xf6>
     f1a:	21 5c       	subi	r18, 0xC1	; 193
     f1c:	3f 4f       	sbci	r19, 0xFF	; 255
     f1e:	4f 4f       	sbci	r20, 0xFF	; 255
     f20:	5f 4f       	sbci	r21, 0xFF	; 255
     f22:	e0 e0       	ldi	r30, 0x00	; 0
     f24:	f0 e0       	ldi	r31, 0x00	; 0
     f26:	20 30       	cpi	r18, 0x00	; 0
     f28:	a0 e0       	ldi	r26, 0x00	; 0
     f2a:	3a 07       	cpc	r19, r26
     f2c:	a0 e0       	ldi	r26, 0x00	; 0
     f2e:	4a 07       	cpc	r20, r26
     f30:	a0 e4       	ldi	r26, 0x40	; 64
     f32:	5a 07       	cpc	r21, r26
     f34:	10 f0       	brcs	.+4      	; 0xf3a <__pack_f+0x10e>
     f36:	e1 e0       	ldi	r30, 0x01	; 1
     f38:	f0 e0       	ldi	r31, 0x00	; 0
     f3a:	79 01       	movw	r14, r18
     f3c:	8a 01       	movw	r16, r20
     f3e:	27 c0       	rjmp	.+78     	; 0xf8e <__pack_f+0x162>
     f40:	60 38       	cpi	r22, 0x80	; 128
     f42:	71 05       	cpc	r23, r1
     f44:	64 f5       	brge	.+88     	; 0xf9e <__pack_f+0x172>
     f46:	fb 01       	movw	r30, r22
     f48:	e1 58       	subi	r30, 0x81	; 129
     f4a:	ff 4f       	sbci	r31, 0xFF	; 255
     f4c:	d8 01       	movw	r26, r16
     f4e:	c7 01       	movw	r24, r14
     f50:	8f 77       	andi	r24, 0x7F	; 127
     f52:	90 70       	andi	r25, 0x00	; 0
     f54:	a0 70       	andi	r26, 0x00	; 0
     f56:	b0 70       	andi	r27, 0x00	; 0
     f58:	80 34       	cpi	r24, 0x40	; 64
     f5a:	91 05       	cpc	r25, r1
     f5c:	a1 05       	cpc	r26, r1
     f5e:	b1 05       	cpc	r27, r1
     f60:	39 f4       	brne	.+14     	; 0xf70 <__pack_f+0x144>
     f62:	e7 fe       	sbrs	r14, 7
     f64:	0d c0       	rjmp	.+26     	; 0xf80 <__pack_f+0x154>
     f66:	80 e4       	ldi	r24, 0x40	; 64
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	a0 e0       	ldi	r26, 0x00	; 0
     f6c:	b0 e0       	ldi	r27, 0x00	; 0
     f6e:	04 c0       	rjmp	.+8      	; 0xf78 <__pack_f+0x14c>
     f70:	8f e3       	ldi	r24, 0x3F	; 63
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	a0 e0       	ldi	r26, 0x00	; 0
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	e8 0e       	add	r14, r24
     f7a:	f9 1e       	adc	r15, r25
     f7c:	0a 1f       	adc	r16, r26
     f7e:	1b 1f       	adc	r17, r27
     f80:	17 ff       	sbrs	r17, 7
     f82:	05 c0       	rjmp	.+10     	; 0xf8e <__pack_f+0x162>
     f84:	16 95       	lsr	r17
     f86:	07 95       	ror	r16
     f88:	f7 94       	ror	r15
     f8a:	e7 94       	ror	r14
     f8c:	31 96       	adiw	r30, 0x01	; 1
     f8e:	87 e0       	ldi	r24, 0x07	; 7
     f90:	16 95       	lsr	r17
     f92:	07 95       	ror	r16
     f94:	f7 94       	ror	r15
     f96:	e7 94       	ror	r14
     f98:	8a 95       	dec	r24
     f9a:	d1 f7       	brne	.-12     	; 0xf90 <__pack_f+0x164>
     f9c:	05 c0       	rjmp	.+10     	; 0xfa8 <__pack_f+0x17c>
     f9e:	ee 24       	eor	r14, r14
     fa0:	ff 24       	eor	r15, r15
     fa2:	87 01       	movw	r16, r14
     fa4:	ef ef       	ldi	r30, 0xFF	; 255
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	6e 2f       	mov	r22, r30
     faa:	67 95       	ror	r22
     fac:	66 27       	eor	r22, r22
     fae:	67 95       	ror	r22
     fb0:	90 2f       	mov	r25, r16
     fb2:	9f 77       	andi	r25, 0x7F	; 127
     fb4:	d7 94       	ror	r13
     fb6:	dd 24       	eor	r13, r13
     fb8:	d7 94       	ror	r13
     fba:	8e 2f       	mov	r24, r30
     fbc:	86 95       	lsr	r24
     fbe:	49 2f       	mov	r20, r25
     fc0:	46 2b       	or	r20, r22
     fc2:	58 2f       	mov	r21, r24
     fc4:	5d 29       	or	r21, r13
     fc6:	b7 01       	movw	r22, r14
     fc8:	ca 01       	movw	r24, r20
     fca:	1f 91       	pop	r17
     fcc:	0f 91       	pop	r16
     fce:	ff 90       	pop	r15
     fd0:	ef 90       	pop	r14
     fd2:	df 90       	pop	r13
     fd4:	08 95       	ret

00000fd6 <__unpack_f>:
     fd6:	fc 01       	movw	r30, r24
     fd8:	db 01       	movw	r26, r22
     fda:	40 81       	ld	r20, Z
     fdc:	51 81       	ldd	r21, Z+1	; 0x01
     fde:	22 81       	ldd	r18, Z+2	; 0x02
     fe0:	62 2f       	mov	r22, r18
     fe2:	6f 77       	andi	r22, 0x7F	; 127
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	22 1f       	adc	r18, r18
     fe8:	22 27       	eor	r18, r18
     fea:	22 1f       	adc	r18, r18
     fec:	93 81       	ldd	r25, Z+3	; 0x03
     fee:	89 2f       	mov	r24, r25
     ff0:	88 0f       	add	r24, r24
     ff2:	82 2b       	or	r24, r18
     ff4:	28 2f       	mov	r18, r24
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	99 1f       	adc	r25, r25
     ffa:	99 27       	eor	r25, r25
     ffc:	99 1f       	adc	r25, r25
     ffe:	11 96       	adiw	r26, 0x01	; 1
    1000:	9c 93       	st	X, r25
    1002:	11 97       	sbiw	r26, 0x01	; 1
    1004:	21 15       	cp	r18, r1
    1006:	31 05       	cpc	r19, r1
    1008:	a9 f5       	brne	.+106    	; 0x1074 <__unpack_f+0x9e>
    100a:	41 15       	cp	r20, r1
    100c:	51 05       	cpc	r21, r1
    100e:	61 05       	cpc	r22, r1
    1010:	71 05       	cpc	r23, r1
    1012:	11 f4       	brne	.+4      	; 0x1018 <__unpack_f+0x42>
    1014:	82 e0       	ldi	r24, 0x02	; 2
    1016:	37 c0       	rjmp	.+110    	; 0x1086 <__unpack_f+0xb0>
    1018:	82 e8       	ldi	r24, 0x82	; 130
    101a:	9f ef       	ldi	r25, 0xFF	; 255
    101c:	13 96       	adiw	r26, 0x03	; 3
    101e:	9c 93       	st	X, r25
    1020:	8e 93       	st	-X, r24
    1022:	12 97       	sbiw	r26, 0x02	; 2
    1024:	9a 01       	movw	r18, r20
    1026:	ab 01       	movw	r20, r22
    1028:	67 e0       	ldi	r22, 0x07	; 7
    102a:	22 0f       	add	r18, r18
    102c:	33 1f       	adc	r19, r19
    102e:	44 1f       	adc	r20, r20
    1030:	55 1f       	adc	r21, r21
    1032:	6a 95       	dec	r22
    1034:	d1 f7       	brne	.-12     	; 0x102a <__unpack_f+0x54>
    1036:	83 e0       	ldi	r24, 0x03	; 3
    1038:	8c 93       	st	X, r24
    103a:	0d c0       	rjmp	.+26     	; 0x1056 <__unpack_f+0x80>
    103c:	22 0f       	add	r18, r18
    103e:	33 1f       	adc	r19, r19
    1040:	44 1f       	adc	r20, r20
    1042:	55 1f       	adc	r21, r21
    1044:	12 96       	adiw	r26, 0x02	; 2
    1046:	8d 91       	ld	r24, X+
    1048:	9c 91       	ld	r25, X
    104a:	13 97       	sbiw	r26, 0x03	; 3
    104c:	01 97       	sbiw	r24, 0x01	; 1
    104e:	13 96       	adiw	r26, 0x03	; 3
    1050:	9c 93       	st	X, r25
    1052:	8e 93       	st	-X, r24
    1054:	12 97       	sbiw	r26, 0x02	; 2
    1056:	20 30       	cpi	r18, 0x00	; 0
    1058:	80 e0       	ldi	r24, 0x00	; 0
    105a:	38 07       	cpc	r19, r24
    105c:	80 e0       	ldi	r24, 0x00	; 0
    105e:	48 07       	cpc	r20, r24
    1060:	80 e4       	ldi	r24, 0x40	; 64
    1062:	58 07       	cpc	r21, r24
    1064:	58 f3       	brcs	.-42     	; 0x103c <__unpack_f+0x66>
    1066:	14 96       	adiw	r26, 0x04	; 4
    1068:	2d 93       	st	X+, r18
    106a:	3d 93       	st	X+, r19
    106c:	4d 93       	st	X+, r20
    106e:	5c 93       	st	X, r21
    1070:	17 97       	sbiw	r26, 0x07	; 7
    1072:	08 95       	ret
    1074:	2f 3f       	cpi	r18, 0xFF	; 255
    1076:	31 05       	cpc	r19, r1
    1078:	79 f4       	brne	.+30     	; 0x1098 <__unpack_f+0xc2>
    107a:	41 15       	cp	r20, r1
    107c:	51 05       	cpc	r21, r1
    107e:	61 05       	cpc	r22, r1
    1080:	71 05       	cpc	r23, r1
    1082:	19 f4       	brne	.+6      	; 0x108a <__unpack_f+0xb4>
    1084:	84 e0       	ldi	r24, 0x04	; 4
    1086:	8c 93       	st	X, r24
    1088:	08 95       	ret
    108a:	64 ff       	sbrs	r22, 4
    108c:	03 c0       	rjmp	.+6      	; 0x1094 <__unpack_f+0xbe>
    108e:	81 e0       	ldi	r24, 0x01	; 1
    1090:	8c 93       	st	X, r24
    1092:	12 c0       	rjmp	.+36     	; 0x10b8 <__unpack_f+0xe2>
    1094:	1c 92       	st	X, r1
    1096:	10 c0       	rjmp	.+32     	; 0x10b8 <__unpack_f+0xe2>
    1098:	2f 57       	subi	r18, 0x7F	; 127
    109a:	30 40       	sbci	r19, 0x00	; 0
    109c:	13 96       	adiw	r26, 0x03	; 3
    109e:	3c 93       	st	X, r19
    10a0:	2e 93       	st	-X, r18
    10a2:	12 97       	sbiw	r26, 0x02	; 2
    10a4:	83 e0       	ldi	r24, 0x03	; 3
    10a6:	8c 93       	st	X, r24
    10a8:	87 e0       	ldi	r24, 0x07	; 7
    10aa:	44 0f       	add	r20, r20
    10ac:	55 1f       	adc	r21, r21
    10ae:	66 1f       	adc	r22, r22
    10b0:	77 1f       	adc	r23, r23
    10b2:	8a 95       	dec	r24
    10b4:	d1 f7       	brne	.-12     	; 0x10aa <__unpack_f+0xd4>
    10b6:	70 64       	ori	r23, 0x40	; 64
    10b8:	14 96       	adiw	r26, 0x04	; 4
    10ba:	4d 93       	st	X+, r20
    10bc:	5d 93       	st	X+, r21
    10be:	6d 93       	st	X+, r22
    10c0:	7c 93       	st	X, r23
    10c2:	17 97       	sbiw	r26, 0x07	; 7
    10c4:	08 95       	ret

000010c6 <__fpcmp_parts_f>:
    10c6:	1f 93       	push	r17
    10c8:	dc 01       	movw	r26, r24
    10ca:	fb 01       	movw	r30, r22
    10cc:	9c 91       	ld	r25, X
    10ce:	92 30       	cpi	r25, 0x02	; 2
    10d0:	08 f4       	brcc	.+2      	; 0x10d4 <__fpcmp_parts_f+0xe>
    10d2:	47 c0       	rjmp	.+142    	; 0x1162 <__fpcmp_parts_f+0x9c>
    10d4:	80 81       	ld	r24, Z
    10d6:	82 30       	cpi	r24, 0x02	; 2
    10d8:	08 f4       	brcc	.+2      	; 0x10dc <__fpcmp_parts_f+0x16>
    10da:	43 c0       	rjmp	.+134    	; 0x1162 <__fpcmp_parts_f+0x9c>
    10dc:	94 30       	cpi	r25, 0x04	; 4
    10de:	51 f4       	brne	.+20     	; 0x10f4 <__fpcmp_parts_f+0x2e>
    10e0:	11 96       	adiw	r26, 0x01	; 1
    10e2:	1c 91       	ld	r17, X
    10e4:	84 30       	cpi	r24, 0x04	; 4
    10e6:	99 f5       	brne	.+102    	; 0x114e <__fpcmp_parts_f+0x88>
    10e8:	81 81       	ldd	r24, Z+1	; 0x01
    10ea:	68 2f       	mov	r22, r24
    10ec:	70 e0       	ldi	r23, 0x00	; 0
    10ee:	61 1b       	sub	r22, r17
    10f0:	71 09       	sbc	r23, r1
    10f2:	3f c0       	rjmp	.+126    	; 0x1172 <__fpcmp_parts_f+0xac>
    10f4:	84 30       	cpi	r24, 0x04	; 4
    10f6:	21 f0       	breq	.+8      	; 0x1100 <__fpcmp_parts_f+0x3a>
    10f8:	92 30       	cpi	r25, 0x02	; 2
    10fa:	31 f4       	brne	.+12     	; 0x1108 <__fpcmp_parts_f+0x42>
    10fc:	82 30       	cpi	r24, 0x02	; 2
    10fe:	b9 f1       	breq	.+110    	; 0x116e <__fpcmp_parts_f+0xa8>
    1100:	81 81       	ldd	r24, Z+1	; 0x01
    1102:	88 23       	and	r24, r24
    1104:	89 f1       	breq	.+98     	; 0x1168 <__fpcmp_parts_f+0xa2>
    1106:	2d c0       	rjmp	.+90     	; 0x1162 <__fpcmp_parts_f+0x9c>
    1108:	11 96       	adiw	r26, 0x01	; 1
    110a:	1c 91       	ld	r17, X
    110c:	11 97       	sbiw	r26, 0x01	; 1
    110e:	82 30       	cpi	r24, 0x02	; 2
    1110:	f1 f0       	breq	.+60     	; 0x114e <__fpcmp_parts_f+0x88>
    1112:	81 81       	ldd	r24, Z+1	; 0x01
    1114:	18 17       	cp	r17, r24
    1116:	d9 f4       	brne	.+54     	; 0x114e <__fpcmp_parts_f+0x88>
    1118:	12 96       	adiw	r26, 0x02	; 2
    111a:	2d 91       	ld	r18, X+
    111c:	3c 91       	ld	r19, X
    111e:	13 97       	sbiw	r26, 0x03	; 3
    1120:	82 81       	ldd	r24, Z+2	; 0x02
    1122:	93 81       	ldd	r25, Z+3	; 0x03
    1124:	82 17       	cp	r24, r18
    1126:	93 07       	cpc	r25, r19
    1128:	94 f0       	brlt	.+36     	; 0x114e <__fpcmp_parts_f+0x88>
    112a:	28 17       	cp	r18, r24
    112c:	39 07       	cpc	r19, r25
    112e:	bc f0       	brlt	.+46     	; 0x115e <__fpcmp_parts_f+0x98>
    1130:	14 96       	adiw	r26, 0x04	; 4
    1132:	8d 91       	ld	r24, X+
    1134:	9d 91       	ld	r25, X+
    1136:	0d 90       	ld	r0, X+
    1138:	bc 91       	ld	r27, X
    113a:	a0 2d       	mov	r26, r0
    113c:	24 81       	ldd	r18, Z+4	; 0x04
    113e:	35 81       	ldd	r19, Z+5	; 0x05
    1140:	46 81       	ldd	r20, Z+6	; 0x06
    1142:	57 81       	ldd	r21, Z+7	; 0x07
    1144:	28 17       	cp	r18, r24
    1146:	39 07       	cpc	r19, r25
    1148:	4a 07       	cpc	r20, r26
    114a:	5b 07       	cpc	r21, r27
    114c:	18 f4       	brcc	.+6      	; 0x1154 <__fpcmp_parts_f+0x8e>
    114e:	11 23       	and	r17, r17
    1150:	41 f0       	breq	.+16     	; 0x1162 <__fpcmp_parts_f+0x9c>
    1152:	0a c0       	rjmp	.+20     	; 0x1168 <__fpcmp_parts_f+0xa2>
    1154:	82 17       	cp	r24, r18
    1156:	93 07       	cpc	r25, r19
    1158:	a4 07       	cpc	r26, r20
    115a:	b5 07       	cpc	r27, r21
    115c:	40 f4       	brcc	.+16     	; 0x116e <__fpcmp_parts_f+0xa8>
    115e:	11 23       	and	r17, r17
    1160:	19 f0       	breq	.+6      	; 0x1168 <__fpcmp_parts_f+0xa2>
    1162:	61 e0       	ldi	r22, 0x01	; 1
    1164:	70 e0       	ldi	r23, 0x00	; 0
    1166:	05 c0       	rjmp	.+10     	; 0x1172 <__fpcmp_parts_f+0xac>
    1168:	6f ef       	ldi	r22, 0xFF	; 255
    116a:	7f ef       	ldi	r23, 0xFF	; 255
    116c:	02 c0       	rjmp	.+4      	; 0x1172 <__fpcmp_parts_f+0xac>
    116e:	60 e0       	ldi	r22, 0x00	; 0
    1170:	70 e0       	ldi	r23, 0x00	; 0
    1172:	cb 01       	movw	r24, r22
    1174:	1f 91       	pop	r17
    1176:	08 95       	ret

00001178 <__prologue_saves__>:
    1178:	2f 92       	push	r2
    117a:	3f 92       	push	r3
    117c:	4f 92       	push	r4
    117e:	5f 92       	push	r5
    1180:	6f 92       	push	r6
    1182:	7f 92       	push	r7
    1184:	8f 92       	push	r8
    1186:	9f 92       	push	r9
    1188:	af 92       	push	r10
    118a:	bf 92       	push	r11
    118c:	cf 92       	push	r12
    118e:	df 92       	push	r13
    1190:	ef 92       	push	r14
    1192:	ff 92       	push	r15
    1194:	0f 93       	push	r16
    1196:	1f 93       	push	r17
    1198:	cf 93       	push	r28
    119a:	df 93       	push	r29
    119c:	cd b7       	in	r28, 0x3d	; 61
    119e:	de b7       	in	r29, 0x3e	; 62
    11a0:	ca 1b       	sub	r28, r26
    11a2:	db 0b       	sbc	r29, r27
    11a4:	0f b6       	in	r0, 0x3f	; 63
    11a6:	f8 94       	cli
    11a8:	de bf       	out	0x3e, r29	; 62
    11aa:	0f be       	out	0x3f, r0	; 63
    11ac:	cd bf       	out	0x3d, r28	; 61
    11ae:	09 94       	ijmp

000011b0 <__epilogue_restores__>:
    11b0:	2a 88       	ldd	r2, Y+18	; 0x12
    11b2:	39 88       	ldd	r3, Y+17	; 0x11
    11b4:	48 88       	ldd	r4, Y+16	; 0x10
    11b6:	5f 84       	ldd	r5, Y+15	; 0x0f
    11b8:	6e 84       	ldd	r6, Y+14	; 0x0e
    11ba:	7d 84       	ldd	r7, Y+13	; 0x0d
    11bc:	8c 84       	ldd	r8, Y+12	; 0x0c
    11be:	9b 84       	ldd	r9, Y+11	; 0x0b
    11c0:	aa 84       	ldd	r10, Y+10	; 0x0a
    11c2:	b9 84       	ldd	r11, Y+9	; 0x09
    11c4:	c8 84       	ldd	r12, Y+8	; 0x08
    11c6:	df 80       	ldd	r13, Y+7	; 0x07
    11c8:	ee 80       	ldd	r14, Y+6	; 0x06
    11ca:	fd 80       	ldd	r15, Y+5	; 0x05
    11cc:	0c 81       	ldd	r16, Y+4	; 0x04
    11ce:	1b 81       	ldd	r17, Y+3	; 0x03
    11d0:	aa 81       	ldd	r26, Y+2	; 0x02
    11d2:	b9 81       	ldd	r27, Y+1	; 0x01
    11d4:	ce 0f       	add	r28, r30
    11d6:	d1 1d       	adc	r29, r1
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	f8 94       	cli
    11dc:	de bf       	out	0x3e, r29	; 62
    11de:	0f be       	out	0x3f, r0	; 63
    11e0:	cd bf       	out	0x3d, r28	; 61
    11e2:	ed 01       	movw	r28, r26
    11e4:	08 95       	ret

000011e6 <_exit>:
    11e6:	f8 94       	cli

000011e8 <__stop_program>:
    11e8:	ff cf       	rjmp	.-2      	; 0x11e8 <__stop_program>
