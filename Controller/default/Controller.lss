
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000f7e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  00000f7e  00001012  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800170  00800170  00001122  2**0
                  ALLOC
  3 .debug_aranges 000001a0  00000000  00000000  00001122  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000036a  00000000  00000000  000012c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002556  00000000  00000000  0000162c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000136b  00000000  00000000  00003b82  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000015a0  00000000  00000000  00004eed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002f0  00000000  00000000  00006490  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004bb  00000000  00000000  00006780  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009e7  00000000  00000000  00006c3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00007622  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	11 e0       	ldi	r17, 0x01	; 1
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e7       	ldi	r30, 0x7E	; 126
  68:	ff e0       	ldi	r31, 0x0F	; 15
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 37       	cpi	r26, 0x78	; 120
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 0f 01 	call	0x21e	; 0x21e <main>
  8a:	0c 94 bd 07 	jmp	0xf7a	; 0xf7a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <setupMIDI>:
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
  92:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) baudrate;
  94:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
  96:	88 e1       	ldi	r24, 0x18	; 24
  98:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(1 << USBS) | (3 << UCSZ0); //only use 8 bit words
  9a:	8e e8       	ldi	r24, 0x8E	; 142
  9c:	80 bd       	out	0x20, r24	; 32
}
  9e:	08 95       	ret

000000a0 <setupPins>:
void setupPins(){
	DDRB = 0xFF;  //Set outputs
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
  a4:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
  a6:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
  a8:	87 e0       	ldi	r24, 0x07	; 7
  aa:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
  ac:	11 ba       	out	0x11, r1	; 17
}
  ae:	08 95       	ret

000000b0 <setupAnalog>:
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
  b0:	87 e4       	ldi	r24, 0x47	; 71
  b2:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
  b4:	87 e8       	ldi	r24, 0x87	; 135
  b6:	86 b9       	out	0x06, r24	; 6
}
  b8:	08 95       	ret

000000ba <setupTimer>:
void setupTimer(){
	TCCR0 = (1 << WGM01) | (1 << CS02) | (1 << CS00); // Sets CTC mode for clock and sets prescaler to clk/1024
  ba:	8d e0       	ldi	r24, 0x0D	; 13
  bc:	83 bf       	out	0x33, r24	; 51
	OCR0 = 78; // every 78 ticks = .01 miliseconds (comparsion variable)
  be:	8e e4       	ldi	r24, 0x4E	; 78
  c0:	8c bf       	out	0x3c, r24	; 60
	TIMSK = (1 << OCIE0); // Set an interput whenver the ticks and my comarsion variable matchs)
  c2:	82 e0       	ldi	r24, 0x02	; 2
  c4:	89 bf       	out	0x39, r24	; 57
	sei(); // needed to set interrupts
  c6:	78 94       	sei
}
  c8:	08 95       	ret

000000ca <record>:
	UDR =  data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
  ca:	5f 9b       	sbis	0x0b, 7	; 11
  cc:	fe cf       	rjmp	.-4      	; 0xca <record>

	/* get and return data from buffer */
	return UDR;
  ce:	8c b1       	in	r24, 0x0c	; 12
void modify(){
	analogLEDTest();
}

void midiReceiveTest(){
	if((midi_Receive()) != 0 ) {
  d0:	88 23       	and	r24, r24
  d2:	11 f0       	breq	.+4      	; 0xd8 <record+0xe>
		//did I recieve a message? do something!
		PORTB = 0xFF;	
  d4:	8f ef       	ldi	r24, 0xFF	; 255
  d6:	88 bb       	out	0x18, r24	; 24
  d8:	08 95       	ret

000000da <playBack>:
	//midiTransitTest();
	//midi_Receive();
}

void playBack(){
	PORTB = 0x02;
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	88 bb       	out	0x18, r24	; 24
}
  de:	08 95       	ret

000000e0 <midiReceiveTest>:
	UDR =  data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
  e0:	5f 9b       	sbis	0x0b, 7	; 11
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <midiReceiveTest>

	/* get and return data from buffer */
	return UDR;
  e4:	8c b1       	in	r24, 0x0c	; 12
void modify(){
	analogLEDTest();
}

void midiReceiveTest(){
	if((midi_Receive()) != 0 ) {
  e6:	88 23       	and	r24, r24
  e8:	11 f0       	breq	.+4      	; 0xee <midiReceiveTest+0xe>
		//did I recieve a message? do something!
		PORTB = 0xFF;	
  ea:	8f ef       	ldi	r24, 0xFF	; 255
  ec:	88 bb       	out	0x18, r24	; 24
  ee:	08 95       	ret

000000f0 <wait>:
	midi_Transmit(MIDIoff);
}


void wait(int time)
{
  f0:	af 92       	push	r10
  f2:	bf 92       	push	r11
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	ff 92       	push	r15
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
   _delay_ms(time);
 100:	aa 27       	eor	r26, r26
 102:	97 fd       	sbrc	r25, 7
 104:	a0 95       	com	r26
 106:	ba 2f       	mov	r27, r26
 108:	bc 01       	movw	r22, r24
 10a:	cd 01       	movw	r24, r26
 10c:	0e 94 df 04 	call	0x9be	; 0x9be <__floatsisf>
 110:	5b 01       	movw	r10, r22
 112:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
 114:	20 e0       	ldi	r18, 0x00	; 0
 116:	30 e0       	ldi	r19, 0x00	; 0
 118:	4a e7       	ldi	r20, 0x7A	; 122
 11a:	53 e4       	ldi	r21, 0x43	; 67
 11c:	0e 94 55 03 	call	0x6aa	; 0x6aa <__mulsf3>
 120:	7b 01       	movw	r14, r22
 122:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
 124:	20 e0       	ldi	r18, 0x00	; 0
 126:	30 e0       	ldi	r19, 0x00	; 0
 128:	40 e8       	ldi	r20, 0x80	; 128
 12a:	5f e3       	ldi	r21, 0x3F	; 63
 12c:	0e 94 af 04 	call	0x95e	; 0x95e <__ltsf2>
 130:	88 23       	and	r24, r24
 132:	1c f4       	brge	.+6      	; 0x13a <wait+0x4a>
 134:	61 e0       	ldi	r22, 0x01	; 1
 136:	70 e0       	ldi	r23, 0x00	; 0
 138:	24 c0       	rjmp	.+72     	; 0x182 <wait+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
 13a:	c8 01       	movw	r24, r16
 13c:	b7 01       	movw	r22, r14
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	3f ef       	ldi	r19, 0xFF	; 255
 142:	4f e7       	ldi	r20, 0x7F	; 127
 144:	57 e4       	ldi	r21, 0x47	; 71
 146:	0e 94 4f 04 	call	0x89e	; 0x89e <__gtsf2>
 14a:	18 16       	cp	r1, r24
 14c:	b4 f4       	brge	.+44     	; 0x17a <wait+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 14e:	c6 01       	movw	r24, r12
 150:	b5 01       	movw	r22, r10
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	40 e2       	ldi	r20, 0x20	; 32
 158:	51 e4       	ldi	r21, 0x41	; 65
 15a:	0e 94 55 03 	call	0x6aa	; 0x6aa <__mulsf3>
 15e:	0e 94 7f 01 	call	0x2fe	; 0x2fe <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
 162:	89 e1       	ldi	r24, 0x19	; 25
 164:	90 e0       	ldi	r25, 0x00	; 0
 166:	05 c0       	rjmp	.+10     	; 0x172 <wait+0x82>
 168:	fc 01       	movw	r30, r24
 16a:	31 97       	sbiw	r30, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <wait+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 16e:	61 50       	subi	r22, 0x01	; 1
 170:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 172:	61 15       	cp	r22, r1
 174:	71 05       	cpc	r23, r1
 176:	c1 f7       	brne	.-16     	; 0x168 <wait+0x78>
 178:	07 c0       	rjmp	.+14     	; 0x188 <wait+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 17a:	c8 01       	movw	r24, r16
 17c:	b7 01       	movw	r22, r14
 17e:	0e 94 7f 01 	call	0x2fe	; 0x2fe <__fixunssfsi>
 182:	cb 01       	movw	r24, r22
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <wait+0x94>
}
 188:	1f 91       	pop	r17
 18a:	0f 91       	pop	r16
 18c:	ff 90       	pop	r15
 18e:	ef 90       	pop	r14
 190:	df 90       	pop	r13
 192:	cf 90       	pop	r12
 194:	bf 90       	pop	r11
 196:	af 90       	pop	r10
 198:	08 95       	ret

0000019a <ledOFF>:

void ledOFF(){
	PORTB = 0x00;
 19a:	18 ba       	out	0x18, r1	; 24
}
 19c:	08 95       	ret

0000019e <ReadADC>:



uint16_t ReadADC(){
	//Start a single conversion
	ADCSRA |= (1 << ADSC);
 19e:	36 9a       	sbi	0x06, 6	; 6
	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
 1a0:	34 9b       	sbis	0x06, 4	; 6
 1a2:	fe cf       	rjmp	.-4      	; 0x1a0 <ReadADC+0x2>
	//clear data (conversion is complete)
	ADCSRA |= (1 << ADIF);
 1a4:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
 1a6:	24 b1       	in	r18, 0x04	; 4
 1a8:	35 b1       	in	r19, 0x05	; 5
}
 1aa:	c9 01       	movw	r24, r18
 1ac:	08 95       	ret

000001ae <analogLEDTest>:

void analogLEDTest(){
		adc_value = ReadADC();
 1ae:	0e 94 cf 00 	call	0x19e	; 0x19e <ReadADC>
 1b2:	9c 01       	movw	r18, r24
 1b4:	90 93 77 01 	sts	0x0177, r25
 1b8:	80 93 76 01 	sts	0x0176, r24
		if (adc_value > 30){
 1bc:	8f 31       	cpi	r24, 0x1F	; 31
 1be:	91 05       	cpc	r25, r1
 1c0:	28 f1       	brcs	.+74     	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB0);
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 60){
 1c6:	2d 33       	cpi	r18, 0x3D	; 61
 1c8:	31 05       	cpc	r19, r1
 1ca:	00 f1       	brcs	.+64     	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB1);
 1cc:	82 e0       	ldi	r24, 0x02	; 2
 1ce:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 90){
 1d0:	2b 35       	cpi	r18, 0x5B	; 91
 1d2:	31 05       	cpc	r19, r1
 1d4:	d8 f0       	brcs	.+54     	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB2);
 1d6:	84 e0       	ldi	r24, 0x04	; 4
 1d8:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 120){
 1da:	29 37       	cpi	r18, 0x79	; 121
 1dc:	31 05       	cpc	r19, r1
 1de:	b0 f0       	brcs	.+44     	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB3);
 1e0:	88 e0       	ldi	r24, 0x08	; 8
 1e2:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 150){
 1e4:	27 39       	cpi	r18, 0x97	; 151
 1e6:	31 05       	cpc	r19, r1
 1e8:	88 f0       	brcs	.+34     	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB4);
 1ea:	80 e1       	ldi	r24, 0x10	; 16
 1ec:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 180){
 1ee:	25 3b       	cpi	r18, 0xB5	; 181
 1f0:	31 05       	cpc	r19, r1
 1f2:	60 f0       	brcs	.+24     	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB5);
 1f4:	80 e2       	ldi	r24, 0x20	; 32
 1f6:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 210){
 1f8:	23 3d       	cpi	r18, 0xD3	; 211
 1fa:	31 05       	cpc	r19, r1
 1fc:	38 f0       	brcs	.+14     	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB6);
 1fe:	80 e4       	ldi	r24, 0x40	; 64
 200:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 240){
 202:	21 3f       	cpi	r18, 0xF1	; 241
 204:	31 05       	cpc	r19, r1
 206:	10 f0       	brcs	.+4      	; 0x20c <analogLEDTest+0x5e>
			PORTB = (1 << PORTB7);
 208:	80 e8       	ldi	r24, 0x80	; 128
 20a:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value >= 240){
 20c:	20 3f       	cpi	r18, 0xF0	; 240
 20e:	31 05       	cpc	r19, r1
 210:	10 f0       	brcs	.+4      	; 0x216 <analogLEDTest+0x68>
			PORTB = 0xFF;
 212:	8f ef       	ldi	r24, 0xFF	; 255
 214:	88 bb       	out	0x18, r24	; 24
 216:	08 95       	ret

00000218 <modify>:
void playBack(){
	PORTB = 0x02;
}

void modify(){
	analogLEDTest();
 218:	0e 94 d7 00 	call	0x1ae	; 0x1ae <analogLEDTest>
}
 21c:	08 95       	ret

0000021e <main>:




/***** Main Loop *****/
int main(void){
 21e:	0f 93       	push	r16
 220:	1f 93       	push	r17
	UBRRL = (unsigned char) baudrate;
	UCSRB = (1 << TXEN) | (1 << RXEN);
	UCSRC = (1 << URSEL )|(1 << USBS) | (3 << UCSZ0); //only use 8 bit words
}
void setupPins(){
	DDRB = 0xFF;  //Set outputs
 222:	8f ef       	ldi	r24, 0xFF	; 255
 224:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
 226:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
 228:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
 22a:	87 e0       	ldi	r24, 0x07	; 7
 22c:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
 22e:	11 ba       	out	0x11, r1	; 17
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
}
void setupTimer(){
	TCCR0 = (1 << WGM01) | (1 << CS02) | (1 << CS00); // Sets CTC mode for clock and sets prescaler to clk/1024
 230:	8d e0       	ldi	r24, 0x0D	; 13
 232:	83 bf       	out	0x33, r24	; 51
	OCR0 = 78; // every 78 ticks = .01 miliseconds (comparsion variable)
 234:	8e e4       	ldi	r24, 0x4E	; 78
 236:	8c bf       	out	0x3c, r24	; 60
	TIMSK = (1 << OCIE0); // Set an interput whenver the ticks and my comarsion variable matchs)
 238:	82 e0       	ldi	r24, 0x02	; 2
 23a:	89 bf       	out	0x39, r24	; 57
	sei(); // needed to set interrupts
 23c:	78 94       	sei
	PORTB = 0x00; //Turns all leds off
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
	DDRD = 0x00;
}
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
 23e:	87 e4       	ldi	r24, 0x47	; 71
 240:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
 242:	87 e8       	ldi	r24, 0x87	; 135
 244:	86 b9       	out	0x06, r24	; 6
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
 246:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) baudrate;
 248:	8f e0       	ldi	r24, 0x0F	; 15
 24a:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
 24c:	88 e1       	ldi	r24, 0x18	; 24
 24e:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(1 << USBS) | (3 << UCSZ0); //only use 8 bit words
 250:	8e e8       	ldi	r24, 0x8E	; 142
 252:	80 bd       	out	0x20, r24	; 32
}

void midiReceiveTest(){
	if((midi_Receive()) != 0 ) {
		//did I recieve a message? do something!
		PORTB = 0xFF;	
 254:	0f ef       	ldi	r16, 0xFF	; 255
	//midiTransitTest();
	//midi_Receive();
}

void playBack(){
	PORTB = 0x02;
 256:	12 e0       	ldi	r17, 0x02	; 2
   setupTimer();
   setupAnalog();
   setupMIDI(BUAD_PRESCALE);

    while(1){
		uint8_t rec = PINA & 0x04;
 258:	89 b3       	in	r24, 0x19	; 25
		uint8_t play = PINA & 0x02;
 25a:	99 b3       	in	r25, 0x19	; 25
 25c:	92 70       	andi	r25, 0x02	; 2
		uint8_t mod = PINA & 0x01;
 25e:	29 b3       	in	r18, 0x19	; 25
	
		if(rec && !play){
 260:	82 ff       	sbrs	r24, 2
 262:	09 c0       	rjmp	.+18     	; 0x276 <main+0x58>
 264:	99 23       	and	r25, r25
 266:	81 f4       	brne	.+32     	; 0x288 <main+0x6a>
	UDR =  data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
 268:	5f 9b       	sbis	0x0b, 7	; 11
 26a:	fe cf       	rjmp	.-4      	; 0x268 <main+0x4a>

	/* get and return data from buffer */
	return UDR;
 26c:	8c b1       	in	r24, 0x0c	; 12
void modify(){
	analogLEDTest();
}

void midiReceiveTest(){
	if((midi_Receive()) != 0 ) {
 26e:	88 23       	and	r24, r24
 270:	99 f3       	breq	.-26     	; 0x258 <main+0x3a>
		//did I recieve a message? do something!
		PORTB = 0xFF;	
 272:	08 bb       	out	0x18, r16	; 24
 274:	f1 cf       	rjmp	.-30     	; 0x258 <main+0x3a>
		uint8_t play = PINA & 0x02;
		uint8_t mod = PINA & 0x01;
	
		if(rec && !play){
			record();
		} else if (play && !rec){
 276:	99 23       	and	r25, r25
 278:	39 f0       	breq	.+14     	; 0x288 <main+0x6a>
			if (mod){ // Modify Mode
 27a:	20 ff       	sbrs	r18, 0
 27c:	03 c0       	rjmp	.+6      	; 0x284 <main+0x66>
void playBack(){
	PORTB = 0x02;
}

void modify(){
	analogLEDTest();
 27e:	0e 94 d7 00 	call	0x1ae	; 0x1ae <analogLEDTest>
 282:	ea cf       	rjmp	.-44     	; 0x258 <main+0x3a>
	//midiTransitTest();
	//midi_Receive();
}

void playBack(){
	PORTB = 0x02;
 284:	18 bb       	out	0x18, r17	; 24
 286:	e8 cf       	rjmp	.-48     	; 0x258 <main+0x3a>
{
   _delay_ms(time);
}

void ledOFF(){
	PORTB = 0x00;
 288:	18 ba       	out	0x18, r1	; 24
 28a:	e6 cf       	rjmp	.-52     	; 0x258 <main+0x3a>

0000028c <midi_Transmit>:
		}
	}

void midi_Transmit( unsigned char data){
	/* Wait for empty transmit buffer */
	while(! UCSRA & (1 << UDRE) );
 28c:	9b b1       	in	r25, 0x0b	; 11

	/* Put data into buffer, sends the data */
	UDR =  data;
 28e:	8c b9       	out	0x0c, r24	; 12
}
 290:	08 95       	ret

00000292 <midiTransitTest>:
		PORTB = 0xFF;	
	}
}

void midiTransitTest(){
	while ((UCSRA & (1 << UDRE)) == 0) {};
 292:	5d 9b       	sbis	0x0b, 5	; 11
 294:	fe cf       	rjmp	.-4      	; 0x292 <midiTransitTest>

	midi_Transmit(MIDIon);
 296:	80 91 60 00 	lds	r24, 0x0060
 29a:	90 91 61 00 	lds	r25, 0x0061
 29e:	0e 94 46 01 	call	0x28c	; 0x28c <midi_Transmit>
	midi_Transmit(MIDIb1);
 2a2:	80 91 62 00 	lds	r24, 0x0062
 2a6:	90 91 63 00 	lds	r25, 0x0063
 2aa:	0e 94 46 01 	call	0x28c	; 0x28c <midi_Transmit>
	midi_Transmit(MIDIb2);
 2ae:	80 91 64 00 	lds	r24, 0x0064
 2b2:	90 91 65 00 	lds	r25, 0x0065
 2b6:	0e 94 46 01 	call	0x28c	; 0x28c <midi_Transmit>
	midi_Transmit(MIDIoff);
 2ba:	80 91 66 00 	lds	r24, 0x0066
 2be:	90 91 67 00 	lds	r25, 0x0067
 2c2:	0e 94 46 01 	call	0x28c	; 0x28c <midi_Transmit>
}
 2c6:	08 95       	ret

000002c8 <midi_Receive>:
	UDR =  data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
 2c8:	5f 9b       	sbis	0x0b, 7	; 11
 2ca:	fe cf       	rjmp	.-4      	; 0x2c8 <midi_Receive>

	/* get and return data from buffer */
	return UDR;
 2cc:	8c b1       	in	r24, 0x0c	; 12
}
 2ce:	08 95       	ret

000002d0 <midi_Flush>:

/* flushs the buffer of the midi */
void midi_Flush(void){ 
 2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <midi_Flush+0x4>
	unsigned char dummy;
	while (UCSRA & (1 << RXC) ) dummy = UDR;
 2d2:	8c b1       	in	r24, 0x0c	; 12
 2d4:	5f 99       	sbic	0x0b, 7	; 11
 2d6:	fd cf       	rjmp	.-6      	; 0x2d2 <midi_Flush+0x2>
}
 2d8:	08 95       	ret

000002da <midi_ReadUCSRC>:

unsigned char midi_ReadUCSRC(void){
	unsigned char ucsrc;
	/* read UCSRC */
	//note may need cli() to disable interrupts
	ucsrc = UBRRH;
 2da:	80 b5       	in	r24, 0x20	; 32
	ucsrc = UCSRC;
 2dc:	80 b5       	in	r24, 0x20	; 32
	return ucsrc;
}
 2de:	08 95       	ret

000002e0 <EEPROM_write>:

void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
	/* wait for completion of previous write */
	while (EECR & (1 <<EEWE));
 2e0:	e1 99       	sbic	0x1c, 1	; 28
 2e2:	fe cf       	rjmp	.-4      	; 0x2e0 <EEPROM_write>

	/* Set up address and data registers */
	EEAR = uiAddress;
 2e4:	9f bb       	out	0x1f, r25	; 31
 2e6:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
 2e8:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1 << EEMWE);
 2ea:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeporm write by setting EEWE */
	EECR |= (1 << EEWE);
 2ec:	e1 9a       	sbi	0x1c, 1	; 28
}
 2ee:	08 95       	ret

000002f0 <EEPROM_read>:

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
 2f0:	e1 99       	sbic	0x1c, 1	; 28
 2f2:	fe cf       	rjmp	.-4      	; 0x2f0 <EEPROM_read>
	/* Set up address register */
	EEAR = uiAddress;
 2f4:	9f bb       	out	0x1f, r25	; 31
 2f6:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
 2f8:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
 2fa:	8d b3       	in	r24, 0x1d	; 29
}
 2fc:	08 95       	ret

000002fe <__fixunssfsi>:
 2fe:	ef 92       	push	r14
 300:	ff 92       	push	r15
 302:	0f 93       	push	r16
 304:	1f 93       	push	r17
 306:	7b 01       	movw	r14, r22
 308:	8c 01       	movw	r16, r24
 30a:	20 e0       	ldi	r18, 0x00	; 0
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	40 e0       	ldi	r20, 0x00	; 0
 310:	5f e4       	ldi	r21, 0x4F	; 79
 312:	0e 94 7f 04 	call	0x8fe	; 0x8fe <__gesf2>
 316:	88 23       	and	r24, r24
 318:	8c f0       	brlt	.+34     	; 0x33c <__fixunssfsi+0x3e>
 31a:	c8 01       	movw	r24, r16
 31c:	b7 01       	movw	r22, r14
 31e:	20 e0       	ldi	r18, 0x00	; 0
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	40 e0       	ldi	r20, 0x00	; 0
 324:	5f e4       	ldi	r21, 0x4F	; 79
 326:	0e 94 f7 02 	call	0x5ee	; 0x5ee <__subsf3>
 32a:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__fixsfsi>
 32e:	9b 01       	movw	r18, r22
 330:	ac 01       	movw	r20, r24
 332:	20 50       	subi	r18, 0x00	; 0
 334:	30 40       	sbci	r19, 0x00	; 0
 336:	40 40       	sbci	r20, 0x00	; 0
 338:	50 48       	sbci	r21, 0x80	; 128
 33a:	06 c0       	rjmp	.+12     	; 0x348 <__fixunssfsi+0x4a>
 33c:	c8 01       	movw	r24, r16
 33e:	b7 01       	movw	r22, r14
 340:	0e 94 3d 05 	call	0xa7a	; 0xa7a <__fixsfsi>
 344:	9b 01       	movw	r18, r22
 346:	ac 01       	movw	r20, r24
 348:	b9 01       	movw	r22, r18
 34a:	ca 01       	movw	r24, r20
 34c:	1f 91       	pop	r17
 34e:	0f 91       	pop	r16
 350:	ff 90       	pop	r15
 352:	ef 90       	pop	r14
 354:	08 95       	ret

00000356 <_fpadd_parts>:
 356:	a0 e0       	ldi	r26, 0x00	; 0
 358:	b0 e0       	ldi	r27, 0x00	; 0
 35a:	e1 eb       	ldi	r30, 0xB1	; 177
 35c:	f1 e0       	ldi	r31, 0x01	; 1
 35e:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <__prologue_saves__>
 362:	dc 01       	movw	r26, r24
 364:	2b 01       	movw	r4, r22
 366:	fa 01       	movw	r30, r20
 368:	9c 91       	ld	r25, X
 36a:	92 30       	cpi	r25, 0x02	; 2
 36c:	08 f4       	brcc	.+2      	; 0x370 <_fpadd_parts+0x1a>
 36e:	39 c1       	rjmp	.+626    	; 0x5e2 <_fpadd_parts+0x28c>
 370:	eb 01       	movw	r28, r22
 372:	88 81       	ld	r24, Y
 374:	82 30       	cpi	r24, 0x02	; 2
 376:	08 f4       	brcc	.+2      	; 0x37a <_fpadd_parts+0x24>
 378:	33 c1       	rjmp	.+614    	; 0x5e0 <_fpadd_parts+0x28a>
 37a:	94 30       	cpi	r25, 0x04	; 4
 37c:	69 f4       	brne	.+26     	; 0x398 <_fpadd_parts+0x42>
 37e:	84 30       	cpi	r24, 0x04	; 4
 380:	09 f0       	breq	.+2      	; 0x384 <_fpadd_parts+0x2e>
 382:	2f c1       	rjmp	.+606    	; 0x5e2 <_fpadd_parts+0x28c>
 384:	11 96       	adiw	r26, 0x01	; 1
 386:	9c 91       	ld	r25, X
 388:	11 97       	sbiw	r26, 0x01	; 1
 38a:	89 81       	ldd	r24, Y+1	; 0x01
 38c:	98 17       	cp	r25, r24
 38e:	09 f4       	brne	.+2      	; 0x392 <_fpadd_parts+0x3c>
 390:	28 c1       	rjmp	.+592    	; 0x5e2 <_fpadd_parts+0x28c>
 392:	a8 e6       	ldi	r26, 0x68	; 104
 394:	b0 e0       	ldi	r27, 0x00	; 0
 396:	25 c1       	rjmp	.+586    	; 0x5e2 <_fpadd_parts+0x28c>
 398:	84 30       	cpi	r24, 0x04	; 4
 39a:	09 f4       	brne	.+2      	; 0x39e <_fpadd_parts+0x48>
 39c:	21 c1       	rjmp	.+578    	; 0x5e0 <_fpadd_parts+0x28a>
 39e:	82 30       	cpi	r24, 0x02	; 2
 3a0:	a9 f4       	brne	.+42     	; 0x3cc <_fpadd_parts+0x76>
 3a2:	92 30       	cpi	r25, 0x02	; 2
 3a4:	09 f0       	breq	.+2      	; 0x3a8 <_fpadd_parts+0x52>
 3a6:	1d c1       	rjmp	.+570    	; 0x5e2 <_fpadd_parts+0x28c>
 3a8:	9a 01       	movw	r18, r20
 3aa:	ad 01       	movw	r20, r26
 3ac:	88 e0       	ldi	r24, 0x08	; 8
 3ae:	ea 01       	movw	r28, r20
 3b0:	09 90       	ld	r0, Y+
 3b2:	ae 01       	movw	r20, r28
 3b4:	e9 01       	movw	r28, r18
 3b6:	09 92       	st	Y+, r0
 3b8:	9e 01       	movw	r18, r28
 3ba:	81 50       	subi	r24, 0x01	; 1
 3bc:	c1 f7       	brne	.-16     	; 0x3ae <_fpadd_parts+0x58>
 3be:	e2 01       	movw	r28, r4
 3c0:	89 81       	ldd	r24, Y+1	; 0x01
 3c2:	11 96       	adiw	r26, 0x01	; 1
 3c4:	9c 91       	ld	r25, X
 3c6:	89 23       	and	r24, r25
 3c8:	81 83       	std	Z+1, r24	; 0x01
 3ca:	08 c1       	rjmp	.+528    	; 0x5dc <_fpadd_parts+0x286>
 3cc:	92 30       	cpi	r25, 0x02	; 2
 3ce:	09 f4       	brne	.+2      	; 0x3d2 <_fpadd_parts+0x7c>
 3d0:	07 c1       	rjmp	.+526    	; 0x5e0 <_fpadd_parts+0x28a>
 3d2:	12 96       	adiw	r26, 0x02	; 2
 3d4:	2d 90       	ld	r2, X+
 3d6:	3c 90       	ld	r3, X
 3d8:	13 97       	sbiw	r26, 0x03	; 3
 3da:	eb 01       	movw	r28, r22
 3dc:	8a 81       	ldd	r24, Y+2	; 0x02
 3de:	9b 81       	ldd	r25, Y+3	; 0x03
 3e0:	14 96       	adiw	r26, 0x04	; 4
 3e2:	ad 90       	ld	r10, X+
 3e4:	bd 90       	ld	r11, X+
 3e6:	cd 90       	ld	r12, X+
 3e8:	dc 90       	ld	r13, X
 3ea:	17 97       	sbiw	r26, 0x07	; 7
 3ec:	ec 80       	ldd	r14, Y+4	; 0x04
 3ee:	fd 80       	ldd	r15, Y+5	; 0x05
 3f0:	0e 81       	ldd	r16, Y+6	; 0x06
 3f2:	1f 81       	ldd	r17, Y+7	; 0x07
 3f4:	91 01       	movw	r18, r2
 3f6:	28 1b       	sub	r18, r24
 3f8:	39 0b       	sbc	r19, r25
 3fa:	b9 01       	movw	r22, r18
 3fc:	37 ff       	sbrs	r19, 7
 3fe:	04 c0       	rjmp	.+8      	; 0x408 <_fpadd_parts+0xb2>
 400:	66 27       	eor	r22, r22
 402:	77 27       	eor	r23, r23
 404:	62 1b       	sub	r22, r18
 406:	73 0b       	sbc	r23, r19
 408:	60 32       	cpi	r22, 0x20	; 32
 40a:	71 05       	cpc	r23, r1
 40c:	0c f0       	brlt	.+2      	; 0x410 <_fpadd_parts+0xba>
 40e:	61 c0       	rjmp	.+194    	; 0x4d2 <_fpadd_parts+0x17c>
 410:	12 16       	cp	r1, r18
 412:	13 06       	cpc	r1, r19
 414:	6c f5       	brge	.+90     	; 0x470 <_fpadd_parts+0x11a>
 416:	37 01       	movw	r6, r14
 418:	48 01       	movw	r8, r16
 41a:	06 2e       	mov	r0, r22
 41c:	04 c0       	rjmp	.+8      	; 0x426 <_fpadd_parts+0xd0>
 41e:	96 94       	lsr	r9
 420:	87 94       	ror	r8
 422:	77 94       	ror	r7
 424:	67 94       	ror	r6
 426:	0a 94       	dec	r0
 428:	d2 f7       	brpl	.-12     	; 0x41e <_fpadd_parts+0xc8>
 42a:	21 e0       	ldi	r18, 0x01	; 1
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	40 e0       	ldi	r20, 0x00	; 0
 430:	50 e0       	ldi	r21, 0x00	; 0
 432:	04 c0       	rjmp	.+8      	; 0x43c <_fpadd_parts+0xe6>
 434:	22 0f       	add	r18, r18
 436:	33 1f       	adc	r19, r19
 438:	44 1f       	adc	r20, r20
 43a:	55 1f       	adc	r21, r21
 43c:	6a 95       	dec	r22
 43e:	d2 f7       	brpl	.-12     	; 0x434 <_fpadd_parts+0xde>
 440:	21 50       	subi	r18, 0x01	; 1
 442:	30 40       	sbci	r19, 0x00	; 0
 444:	40 40       	sbci	r20, 0x00	; 0
 446:	50 40       	sbci	r21, 0x00	; 0
 448:	2e 21       	and	r18, r14
 44a:	3f 21       	and	r19, r15
 44c:	40 23       	and	r20, r16
 44e:	51 23       	and	r21, r17
 450:	21 15       	cp	r18, r1
 452:	31 05       	cpc	r19, r1
 454:	41 05       	cpc	r20, r1
 456:	51 05       	cpc	r21, r1
 458:	21 f0       	breq	.+8      	; 0x462 <_fpadd_parts+0x10c>
 45a:	21 e0       	ldi	r18, 0x01	; 1
 45c:	30 e0       	ldi	r19, 0x00	; 0
 45e:	40 e0       	ldi	r20, 0x00	; 0
 460:	50 e0       	ldi	r21, 0x00	; 0
 462:	79 01       	movw	r14, r18
 464:	8a 01       	movw	r16, r20
 466:	e6 28       	or	r14, r6
 468:	f7 28       	or	r15, r7
 46a:	08 29       	or	r16, r8
 46c:	19 29       	or	r17, r9
 46e:	3c c0       	rjmp	.+120    	; 0x4e8 <_fpadd_parts+0x192>
 470:	23 2b       	or	r18, r19
 472:	d1 f1       	breq	.+116    	; 0x4e8 <_fpadd_parts+0x192>
 474:	26 0e       	add	r2, r22
 476:	37 1e       	adc	r3, r23
 478:	35 01       	movw	r6, r10
 47a:	46 01       	movw	r8, r12
 47c:	06 2e       	mov	r0, r22
 47e:	04 c0       	rjmp	.+8      	; 0x488 <_fpadd_parts+0x132>
 480:	96 94       	lsr	r9
 482:	87 94       	ror	r8
 484:	77 94       	ror	r7
 486:	67 94       	ror	r6
 488:	0a 94       	dec	r0
 48a:	d2 f7       	brpl	.-12     	; 0x480 <_fpadd_parts+0x12a>
 48c:	21 e0       	ldi	r18, 0x01	; 1
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	40 e0       	ldi	r20, 0x00	; 0
 492:	50 e0       	ldi	r21, 0x00	; 0
 494:	04 c0       	rjmp	.+8      	; 0x49e <_fpadd_parts+0x148>
 496:	22 0f       	add	r18, r18
 498:	33 1f       	adc	r19, r19
 49a:	44 1f       	adc	r20, r20
 49c:	55 1f       	adc	r21, r21
 49e:	6a 95       	dec	r22
 4a0:	d2 f7       	brpl	.-12     	; 0x496 <_fpadd_parts+0x140>
 4a2:	21 50       	subi	r18, 0x01	; 1
 4a4:	30 40       	sbci	r19, 0x00	; 0
 4a6:	40 40       	sbci	r20, 0x00	; 0
 4a8:	50 40       	sbci	r21, 0x00	; 0
 4aa:	2a 21       	and	r18, r10
 4ac:	3b 21       	and	r19, r11
 4ae:	4c 21       	and	r20, r12
 4b0:	5d 21       	and	r21, r13
 4b2:	21 15       	cp	r18, r1
 4b4:	31 05       	cpc	r19, r1
 4b6:	41 05       	cpc	r20, r1
 4b8:	51 05       	cpc	r21, r1
 4ba:	21 f0       	breq	.+8      	; 0x4c4 <_fpadd_parts+0x16e>
 4bc:	21 e0       	ldi	r18, 0x01	; 1
 4be:	30 e0       	ldi	r19, 0x00	; 0
 4c0:	40 e0       	ldi	r20, 0x00	; 0
 4c2:	50 e0       	ldi	r21, 0x00	; 0
 4c4:	59 01       	movw	r10, r18
 4c6:	6a 01       	movw	r12, r20
 4c8:	a6 28       	or	r10, r6
 4ca:	b7 28       	or	r11, r7
 4cc:	c8 28       	or	r12, r8
 4ce:	d9 28       	or	r13, r9
 4d0:	0b c0       	rjmp	.+22     	; 0x4e8 <_fpadd_parts+0x192>
 4d2:	82 15       	cp	r24, r2
 4d4:	93 05       	cpc	r25, r3
 4d6:	2c f0       	brlt	.+10     	; 0x4e2 <_fpadd_parts+0x18c>
 4d8:	1c 01       	movw	r2, r24
 4da:	aa 24       	eor	r10, r10
 4dc:	bb 24       	eor	r11, r11
 4de:	65 01       	movw	r12, r10
 4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <_fpadd_parts+0x192>
 4e2:	ee 24       	eor	r14, r14
 4e4:	ff 24       	eor	r15, r15
 4e6:	87 01       	movw	r16, r14
 4e8:	11 96       	adiw	r26, 0x01	; 1
 4ea:	9c 91       	ld	r25, X
 4ec:	d2 01       	movw	r26, r4
 4ee:	11 96       	adiw	r26, 0x01	; 1
 4f0:	8c 91       	ld	r24, X
 4f2:	98 17       	cp	r25, r24
 4f4:	09 f4       	brne	.+2      	; 0x4f8 <_fpadd_parts+0x1a2>
 4f6:	45 c0       	rjmp	.+138    	; 0x582 <_fpadd_parts+0x22c>
 4f8:	99 23       	and	r25, r25
 4fa:	39 f0       	breq	.+14     	; 0x50a <_fpadd_parts+0x1b4>
 4fc:	a8 01       	movw	r20, r16
 4fe:	97 01       	movw	r18, r14
 500:	2a 19       	sub	r18, r10
 502:	3b 09       	sbc	r19, r11
 504:	4c 09       	sbc	r20, r12
 506:	5d 09       	sbc	r21, r13
 508:	06 c0       	rjmp	.+12     	; 0x516 <_fpadd_parts+0x1c0>
 50a:	a6 01       	movw	r20, r12
 50c:	95 01       	movw	r18, r10
 50e:	2e 19       	sub	r18, r14
 510:	3f 09       	sbc	r19, r15
 512:	40 0b       	sbc	r20, r16
 514:	51 0b       	sbc	r21, r17
 516:	57 fd       	sbrc	r21, 7
 518:	08 c0       	rjmp	.+16     	; 0x52a <_fpadd_parts+0x1d4>
 51a:	11 82       	std	Z+1, r1	; 0x01
 51c:	33 82       	std	Z+3, r3	; 0x03
 51e:	22 82       	std	Z+2, r2	; 0x02
 520:	24 83       	std	Z+4, r18	; 0x04
 522:	35 83       	std	Z+5, r19	; 0x05
 524:	46 83       	std	Z+6, r20	; 0x06
 526:	57 83       	std	Z+7, r21	; 0x07
 528:	1d c0       	rjmp	.+58     	; 0x564 <_fpadd_parts+0x20e>
 52a:	81 e0       	ldi	r24, 0x01	; 1
 52c:	81 83       	std	Z+1, r24	; 0x01
 52e:	33 82       	std	Z+3, r3	; 0x03
 530:	22 82       	std	Z+2, r2	; 0x02
 532:	88 27       	eor	r24, r24
 534:	99 27       	eor	r25, r25
 536:	dc 01       	movw	r26, r24
 538:	82 1b       	sub	r24, r18
 53a:	93 0b       	sbc	r25, r19
 53c:	a4 0b       	sbc	r26, r20
 53e:	b5 0b       	sbc	r27, r21
 540:	84 83       	std	Z+4, r24	; 0x04
 542:	95 83       	std	Z+5, r25	; 0x05
 544:	a6 83       	std	Z+6, r26	; 0x06
 546:	b7 83       	std	Z+7, r27	; 0x07
 548:	0d c0       	rjmp	.+26     	; 0x564 <_fpadd_parts+0x20e>
 54a:	22 0f       	add	r18, r18
 54c:	33 1f       	adc	r19, r19
 54e:	44 1f       	adc	r20, r20
 550:	55 1f       	adc	r21, r21
 552:	24 83       	std	Z+4, r18	; 0x04
 554:	35 83       	std	Z+5, r19	; 0x05
 556:	46 83       	std	Z+6, r20	; 0x06
 558:	57 83       	std	Z+7, r21	; 0x07
 55a:	82 81       	ldd	r24, Z+2	; 0x02
 55c:	93 81       	ldd	r25, Z+3	; 0x03
 55e:	01 97       	sbiw	r24, 0x01	; 1
 560:	93 83       	std	Z+3, r25	; 0x03
 562:	82 83       	std	Z+2, r24	; 0x02
 564:	24 81       	ldd	r18, Z+4	; 0x04
 566:	35 81       	ldd	r19, Z+5	; 0x05
 568:	46 81       	ldd	r20, Z+6	; 0x06
 56a:	57 81       	ldd	r21, Z+7	; 0x07
 56c:	da 01       	movw	r26, r20
 56e:	c9 01       	movw	r24, r18
 570:	01 97       	sbiw	r24, 0x01	; 1
 572:	a1 09       	sbc	r26, r1
 574:	b1 09       	sbc	r27, r1
 576:	8f 5f       	subi	r24, 0xFF	; 255
 578:	9f 4f       	sbci	r25, 0xFF	; 255
 57a:	af 4f       	sbci	r26, 0xFF	; 255
 57c:	bf 43       	sbci	r27, 0x3F	; 63
 57e:	28 f3       	brcs	.-54     	; 0x54a <_fpadd_parts+0x1f4>
 580:	0b c0       	rjmp	.+22     	; 0x598 <_fpadd_parts+0x242>
 582:	91 83       	std	Z+1, r25	; 0x01
 584:	33 82       	std	Z+3, r3	; 0x03
 586:	22 82       	std	Z+2, r2	; 0x02
 588:	ea 0c       	add	r14, r10
 58a:	fb 1c       	adc	r15, r11
 58c:	0c 1d       	adc	r16, r12
 58e:	1d 1d       	adc	r17, r13
 590:	e4 82       	std	Z+4, r14	; 0x04
 592:	f5 82       	std	Z+5, r15	; 0x05
 594:	06 83       	std	Z+6, r16	; 0x06
 596:	17 83       	std	Z+7, r17	; 0x07
 598:	83 e0       	ldi	r24, 0x03	; 3
 59a:	80 83       	st	Z, r24
 59c:	24 81       	ldd	r18, Z+4	; 0x04
 59e:	35 81       	ldd	r19, Z+5	; 0x05
 5a0:	46 81       	ldd	r20, Z+6	; 0x06
 5a2:	57 81       	ldd	r21, Z+7	; 0x07
 5a4:	57 ff       	sbrs	r21, 7
 5a6:	1a c0       	rjmp	.+52     	; 0x5dc <_fpadd_parts+0x286>
 5a8:	c9 01       	movw	r24, r18
 5aa:	aa 27       	eor	r26, r26
 5ac:	97 fd       	sbrc	r25, 7
 5ae:	a0 95       	com	r26
 5b0:	ba 2f       	mov	r27, r26
 5b2:	81 70       	andi	r24, 0x01	; 1
 5b4:	90 70       	andi	r25, 0x00	; 0
 5b6:	a0 70       	andi	r26, 0x00	; 0
 5b8:	b0 70       	andi	r27, 0x00	; 0
 5ba:	56 95       	lsr	r21
 5bc:	47 95       	ror	r20
 5be:	37 95       	ror	r19
 5c0:	27 95       	ror	r18
 5c2:	82 2b       	or	r24, r18
 5c4:	93 2b       	or	r25, r19
 5c6:	a4 2b       	or	r26, r20
 5c8:	b5 2b       	or	r27, r21
 5ca:	84 83       	std	Z+4, r24	; 0x04
 5cc:	95 83       	std	Z+5, r25	; 0x05
 5ce:	a6 83       	std	Z+6, r26	; 0x06
 5d0:	b7 83       	std	Z+7, r27	; 0x07
 5d2:	82 81       	ldd	r24, Z+2	; 0x02
 5d4:	93 81       	ldd	r25, Z+3	; 0x03
 5d6:	01 96       	adiw	r24, 0x01	; 1
 5d8:	93 83       	std	Z+3, r25	; 0x03
 5da:	82 83       	std	Z+2, r24	; 0x02
 5dc:	df 01       	movw	r26, r30
 5de:	01 c0       	rjmp	.+2      	; 0x5e2 <_fpadd_parts+0x28c>
 5e0:	d2 01       	movw	r26, r4
 5e2:	cd 01       	movw	r24, r26
 5e4:	cd b7       	in	r28, 0x3d	; 61
 5e6:	de b7       	in	r29, 0x3e	; 62
 5e8:	e2 e1       	ldi	r30, 0x12	; 18
 5ea:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <__epilogue_restores__>

000005ee <__subsf3>:
 5ee:	a0 e2       	ldi	r26, 0x20	; 32
 5f0:	b0 e0       	ldi	r27, 0x00	; 0
 5f2:	ed ef       	ldi	r30, 0xFD	; 253
 5f4:	f2 e0       	ldi	r31, 0x02	; 2
 5f6:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__prologue_saves__+0x18>
 5fa:	69 83       	std	Y+1, r22	; 0x01
 5fc:	7a 83       	std	Y+2, r23	; 0x02
 5fe:	8b 83       	std	Y+3, r24	; 0x03
 600:	9c 83       	std	Y+4, r25	; 0x04
 602:	2d 83       	std	Y+5, r18	; 0x05
 604:	3e 83       	std	Y+6, r19	; 0x06
 606:	4f 83       	std	Y+7, r20	; 0x07
 608:	58 87       	std	Y+8, r21	; 0x08
 60a:	e9 e0       	ldi	r30, 0x09	; 9
 60c:	ee 2e       	mov	r14, r30
 60e:	f1 2c       	mov	r15, r1
 610:	ec 0e       	add	r14, r28
 612:	fd 1e       	adc	r15, r29
 614:	ce 01       	movw	r24, r28
 616:	01 96       	adiw	r24, 0x01	; 1
 618:	b7 01       	movw	r22, r14
 61a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 61e:	8e 01       	movw	r16, r28
 620:	0f 5e       	subi	r16, 0xEF	; 239
 622:	1f 4f       	sbci	r17, 0xFF	; 255
 624:	ce 01       	movw	r24, r28
 626:	05 96       	adiw	r24, 0x05	; 5
 628:	b8 01       	movw	r22, r16
 62a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 62e:	8a 89       	ldd	r24, Y+18	; 0x12
 630:	91 e0       	ldi	r25, 0x01	; 1
 632:	89 27       	eor	r24, r25
 634:	8a 8b       	std	Y+18, r24	; 0x12
 636:	c7 01       	movw	r24, r14
 638:	b8 01       	movw	r22, r16
 63a:	ae 01       	movw	r20, r28
 63c:	47 5e       	subi	r20, 0xE7	; 231
 63e:	5f 4f       	sbci	r21, 0xFF	; 255
 640:	0e 94 ab 01 	call	0x356	; 0x356 <_fpadd_parts>
 644:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <__pack_f>
 648:	a0 96       	adiw	r28, 0x20	; 32
 64a:	e6 e0       	ldi	r30, 0x06	; 6
 64c:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <__epilogue_restores__+0x18>

00000650 <__addsf3>:
 650:	a0 e2       	ldi	r26, 0x20	; 32
 652:	b0 e0       	ldi	r27, 0x00	; 0
 654:	ee e2       	ldi	r30, 0x2E	; 46
 656:	f3 e0       	ldi	r31, 0x03	; 3
 658:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__prologue_saves__+0x18>
 65c:	69 83       	std	Y+1, r22	; 0x01
 65e:	7a 83       	std	Y+2, r23	; 0x02
 660:	8b 83       	std	Y+3, r24	; 0x03
 662:	9c 83       	std	Y+4, r25	; 0x04
 664:	2d 83       	std	Y+5, r18	; 0x05
 666:	3e 83       	std	Y+6, r19	; 0x06
 668:	4f 83       	std	Y+7, r20	; 0x07
 66a:	58 87       	std	Y+8, r21	; 0x08
 66c:	f9 e0       	ldi	r31, 0x09	; 9
 66e:	ef 2e       	mov	r14, r31
 670:	f1 2c       	mov	r15, r1
 672:	ec 0e       	add	r14, r28
 674:	fd 1e       	adc	r15, r29
 676:	ce 01       	movw	r24, r28
 678:	01 96       	adiw	r24, 0x01	; 1
 67a:	b7 01       	movw	r22, r14
 67c:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 680:	8e 01       	movw	r16, r28
 682:	0f 5e       	subi	r16, 0xEF	; 239
 684:	1f 4f       	sbci	r17, 0xFF	; 255
 686:	ce 01       	movw	r24, r28
 688:	05 96       	adiw	r24, 0x05	; 5
 68a:	b8 01       	movw	r22, r16
 68c:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 690:	c7 01       	movw	r24, r14
 692:	b8 01       	movw	r22, r16
 694:	ae 01       	movw	r20, r28
 696:	47 5e       	subi	r20, 0xE7	; 231
 698:	5f 4f       	sbci	r21, 0xFF	; 255
 69a:	0e 94 ab 01 	call	0x356	; 0x356 <_fpadd_parts>
 69e:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <__pack_f>
 6a2:	a0 96       	adiw	r28, 0x20	; 32
 6a4:	e6 e0       	ldi	r30, 0x06	; 6
 6a6:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <__epilogue_restores__+0x18>

000006aa <__mulsf3>:
 6aa:	a0 e2       	ldi	r26, 0x20	; 32
 6ac:	b0 e0       	ldi	r27, 0x00	; 0
 6ae:	eb e5       	ldi	r30, 0x5B	; 91
 6b0:	f3 e0       	ldi	r31, 0x03	; 3
 6b2:	0c 94 86 07 	jmp	0xf0c	; 0xf0c <__prologue_saves__>
 6b6:	69 83       	std	Y+1, r22	; 0x01
 6b8:	7a 83       	std	Y+2, r23	; 0x02
 6ba:	8b 83       	std	Y+3, r24	; 0x03
 6bc:	9c 83       	std	Y+4, r25	; 0x04
 6be:	2d 83       	std	Y+5, r18	; 0x05
 6c0:	3e 83       	std	Y+6, r19	; 0x06
 6c2:	4f 83       	std	Y+7, r20	; 0x07
 6c4:	58 87       	std	Y+8, r21	; 0x08
 6c6:	ce 01       	movw	r24, r28
 6c8:	01 96       	adiw	r24, 0x01	; 1
 6ca:	be 01       	movw	r22, r28
 6cc:	67 5f       	subi	r22, 0xF7	; 247
 6ce:	7f 4f       	sbci	r23, 0xFF	; 255
 6d0:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 6d4:	ce 01       	movw	r24, r28
 6d6:	05 96       	adiw	r24, 0x05	; 5
 6d8:	be 01       	movw	r22, r28
 6da:	6f 5e       	subi	r22, 0xEF	; 239
 6dc:	7f 4f       	sbci	r23, 0xFF	; 255
 6de:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 6e2:	99 85       	ldd	r25, Y+9	; 0x09
 6e4:	92 30       	cpi	r25, 0x02	; 2
 6e6:	88 f0       	brcs	.+34     	; 0x70a <__mulsf3+0x60>
 6e8:	89 89       	ldd	r24, Y+17	; 0x11
 6ea:	82 30       	cpi	r24, 0x02	; 2
 6ec:	c8 f0       	brcs	.+50     	; 0x720 <__mulsf3+0x76>
 6ee:	94 30       	cpi	r25, 0x04	; 4
 6f0:	19 f4       	brne	.+6      	; 0x6f8 <__mulsf3+0x4e>
 6f2:	82 30       	cpi	r24, 0x02	; 2
 6f4:	51 f4       	brne	.+20     	; 0x70a <__mulsf3+0x60>
 6f6:	04 c0       	rjmp	.+8      	; 0x700 <__mulsf3+0x56>
 6f8:	84 30       	cpi	r24, 0x04	; 4
 6fa:	29 f4       	brne	.+10     	; 0x706 <__mulsf3+0x5c>
 6fc:	92 30       	cpi	r25, 0x02	; 2
 6fe:	81 f4       	brne	.+32     	; 0x720 <__mulsf3+0x76>
 700:	88 e6       	ldi	r24, 0x68	; 104
 702:	90 e0       	ldi	r25, 0x00	; 0
 704:	c6 c0       	rjmp	.+396    	; 0x892 <__stack+0x33>
 706:	92 30       	cpi	r25, 0x02	; 2
 708:	49 f4       	brne	.+18     	; 0x71c <__mulsf3+0x72>
 70a:	20 e0       	ldi	r18, 0x00	; 0
 70c:	9a 85       	ldd	r25, Y+10	; 0x0a
 70e:	8a 89       	ldd	r24, Y+18	; 0x12
 710:	98 13       	cpse	r25, r24
 712:	21 e0       	ldi	r18, 0x01	; 1
 714:	2a 87       	std	Y+10, r18	; 0x0a
 716:	ce 01       	movw	r24, r28
 718:	09 96       	adiw	r24, 0x09	; 9
 71a:	bb c0       	rjmp	.+374    	; 0x892 <__stack+0x33>
 71c:	82 30       	cpi	r24, 0x02	; 2
 71e:	49 f4       	brne	.+18     	; 0x732 <__mulsf3+0x88>
 720:	20 e0       	ldi	r18, 0x00	; 0
 722:	9a 85       	ldd	r25, Y+10	; 0x0a
 724:	8a 89       	ldd	r24, Y+18	; 0x12
 726:	98 13       	cpse	r25, r24
 728:	21 e0       	ldi	r18, 0x01	; 1
 72a:	2a 8b       	std	Y+18, r18	; 0x12
 72c:	ce 01       	movw	r24, r28
 72e:	41 96       	adiw	r24, 0x11	; 17
 730:	b0 c0       	rjmp	.+352    	; 0x892 <__stack+0x33>
 732:	2d 84       	ldd	r2, Y+13	; 0x0d
 734:	3e 84       	ldd	r3, Y+14	; 0x0e
 736:	4f 84       	ldd	r4, Y+15	; 0x0f
 738:	58 88       	ldd	r5, Y+16	; 0x10
 73a:	6d 88       	ldd	r6, Y+21	; 0x15
 73c:	7e 88       	ldd	r7, Y+22	; 0x16
 73e:	8f 88       	ldd	r8, Y+23	; 0x17
 740:	98 8c       	ldd	r9, Y+24	; 0x18
 742:	ee 24       	eor	r14, r14
 744:	ff 24       	eor	r15, r15
 746:	87 01       	movw	r16, r14
 748:	aa 24       	eor	r10, r10
 74a:	bb 24       	eor	r11, r11
 74c:	65 01       	movw	r12, r10
 74e:	40 e0       	ldi	r20, 0x00	; 0
 750:	50 e0       	ldi	r21, 0x00	; 0
 752:	60 e0       	ldi	r22, 0x00	; 0
 754:	70 e0       	ldi	r23, 0x00	; 0
 756:	e0 e0       	ldi	r30, 0x00	; 0
 758:	f0 e0       	ldi	r31, 0x00	; 0
 75a:	c1 01       	movw	r24, r2
 75c:	81 70       	andi	r24, 0x01	; 1
 75e:	90 70       	andi	r25, 0x00	; 0
 760:	89 2b       	or	r24, r25
 762:	e9 f0       	breq	.+58     	; 0x79e <__mulsf3+0xf4>
 764:	e6 0c       	add	r14, r6
 766:	f7 1c       	adc	r15, r7
 768:	08 1d       	adc	r16, r8
 76a:	19 1d       	adc	r17, r9
 76c:	9a 01       	movw	r18, r20
 76e:	ab 01       	movw	r20, r22
 770:	2a 0d       	add	r18, r10
 772:	3b 1d       	adc	r19, r11
 774:	4c 1d       	adc	r20, r12
 776:	5d 1d       	adc	r21, r13
 778:	80 e0       	ldi	r24, 0x00	; 0
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	a0 e0       	ldi	r26, 0x00	; 0
 77e:	b0 e0       	ldi	r27, 0x00	; 0
 780:	e6 14       	cp	r14, r6
 782:	f7 04       	cpc	r15, r7
 784:	08 05       	cpc	r16, r8
 786:	19 05       	cpc	r17, r9
 788:	20 f4       	brcc	.+8      	; 0x792 <__mulsf3+0xe8>
 78a:	81 e0       	ldi	r24, 0x01	; 1
 78c:	90 e0       	ldi	r25, 0x00	; 0
 78e:	a0 e0       	ldi	r26, 0x00	; 0
 790:	b0 e0       	ldi	r27, 0x00	; 0
 792:	ba 01       	movw	r22, r20
 794:	a9 01       	movw	r20, r18
 796:	48 0f       	add	r20, r24
 798:	59 1f       	adc	r21, r25
 79a:	6a 1f       	adc	r22, r26
 79c:	7b 1f       	adc	r23, r27
 79e:	aa 0c       	add	r10, r10
 7a0:	bb 1c       	adc	r11, r11
 7a2:	cc 1c       	adc	r12, r12
 7a4:	dd 1c       	adc	r13, r13
 7a6:	97 fe       	sbrs	r9, 7
 7a8:	08 c0       	rjmp	.+16     	; 0x7ba <__mulsf3+0x110>
 7aa:	81 e0       	ldi	r24, 0x01	; 1
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	a0 e0       	ldi	r26, 0x00	; 0
 7b0:	b0 e0       	ldi	r27, 0x00	; 0
 7b2:	a8 2a       	or	r10, r24
 7b4:	b9 2a       	or	r11, r25
 7b6:	ca 2a       	or	r12, r26
 7b8:	db 2a       	or	r13, r27
 7ba:	31 96       	adiw	r30, 0x01	; 1
 7bc:	e0 32       	cpi	r30, 0x20	; 32
 7be:	f1 05       	cpc	r31, r1
 7c0:	49 f0       	breq	.+18     	; 0x7d4 <__mulsf3+0x12a>
 7c2:	66 0c       	add	r6, r6
 7c4:	77 1c       	adc	r7, r7
 7c6:	88 1c       	adc	r8, r8
 7c8:	99 1c       	adc	r9, r9
 7ca:	56 94       	lsr	r5
 7cc:	47 94       	ror	r4
 7ce:	37 94       	ror	r3
 7d0:	27 94       	ror	r2
 7d2:	c3 cf       	rjmp	.-122    	; 0x75a <__mulsf3+0xb0>
 7d4:	fa 85       	ldd	r31, Y+10	; 0x0a
 7d6:	ea 89       	ldd	r30, Y+18	; 0x12
 7d8:	2b 89       	ldd	r18, Y+19	; 0x13
 7da:	3c 89       	ldd	r19, Y+20	; 0x14
 7dc:	8b 85       	ldd	r24, Y+11	; 0x0b
 7de:	9c 85       	ldd	r25, Y+12	; 0x0c
 7e0:	28 0f       	add	r18, r24
 7e2:	39 1f       	adc	r19, r25
 7e4:	2e 5f       	subi	r18, 0xFE	; 254
 7e6:	3f 4f       	sbci	r19, 0xFF	; 255
 7e8:	17 c0       	rjmp	.+46     	; 0x818 <__mulsf3+0x16e>
 7ea:	ca 01       	movw	r24, r20
 7ec:	81 70       	andi	r24, 0x01	; 1
 7ee:	90 70       	andi	r25, 0x00	; 0
 7f0:	89 2b       	or	r24, r25
 7f2:	61 f0       	breq	.+24     	; 0x80c <__mulsf3+0x162>
 7f4:	16 95       	lsr	r17
 7f6:	07 95       	ror	r16
 7f8:	f7 94       	ror	r15
 7fa:	e7 94       	ror	r14
 7fc:	80 e0       	ldi	r24, 0x00	; 0
 7fe:	90 e0       	ldi	r25, 0x00	; 0
 800:	a0 e0       	ldi	r26, 0x00	; 0
 802:	b0 e8       	ldi	r27, 0x80	; 128
 804:	e8 2a       	or	r14, r24
 806:	f9 2a       	or	r15, r25
 808:	0a 2b       	or	r16, r26
 80a:	1b 2b       	or	r17, r27
 80c:	76 95       	lsr	r23
 80e:	67 95       	ror	r22
 810:	57 95       	ror	r21
 812:	47 95       	ror	r20
 814:	2f 5f       	subi	r18, 0xFF	; 255
 816:	3f 4f       	sbci	r19, 0xFF	; 255
 818:	77 fd       	sbrc	r23, 7
 81a:	e7 cf       	rjmp	.-50     	; 0x7ea <__mulsf3+0x140>
 81c:	0c c0       	rjmp	.+24     	; 0x836 <__mulsf3+0x18c>
 81e:	44 0f       	add	r20, r20
 820:	55 1f       	adc	r21, r21
 822:	66 1f       	adc	r22, r22
 824:	77 1f       	adc	r23, r23
 826:	17 fd       	sbrc	r17, 7
 828:	41 60       	ori	r20, 0x01	; 1
 82a:	ee 0c       	add	r14, r14
 82c:	ff 1c       	adc	r15, r15
 82e:	00 1f       	adc	r16, r16
 830:	11 1f       	adc	r17, r17
 832:	21 50       	subi	r18, 0x01	; 1
 834:	30 40       	sbci	r19, 0x00	; 0
 836:	40 30       	cpi	r20, 0x00	; 0
 838:	90 e0       	ldi	r25, 0x00	; 0
 83a:	59 07       	cpc	r21, r25
 83c:	90 e0       	ldi	r25, 0x00	; 0
 83e:	69 07       	cpc	r22, r25
 840:	90 e4       	ldi	r25, 0x40	; 64
 842:	79 07       	cpc	r23, r25
 844:	60 f3       	brcs	.-40     	; 0x81e <__mulsf3+0x174>
 846:	2b 8f       	std	Y+27, r18	; 0x1b
 848:	3c 8f       	std	Y+28, r19	; 0x1c
 84a:	db 01       	movw	r26, r22
 84c:	ca 01       	movw	r24, r20
 84e:	8f 77       	andi	r24, 0x7F	; 127
 850:	90 70       	andi	r25, 0x00	; 0
 852:	a0 70       	andi	r26, 0x00	; 0
 854:	b0 70       	andi	r27, 0x00	; 0
 856:	80 34       	cpi	r24, 0x40	; 64
 858:	91 05       	cpc	r25, r1
 85a:	a1 05       	cpc	r26, r1
 85c:	b1 05       	cpc	r27, r1
 85e:	61 f4       	brne	.+24     	; 0x878 <__stack+0x19>
 860:	47 fd       	sbrc	r20, 7
 862:	0a c0       	rjmp	.+20     	; 0x878 <__stack+0x19>
 864:	e1 14       	cp	r14, r1
 866:	f1 04       	cpc	r15, r1
 868:	01 05       	cpc	r16, r1
 86a:	11 05       	cpc	r17, r1
 86c:	29 f0       	breq	.+10     	; 0x878 <__stack+0x19>
 86e:	40 5c       	subi	r20, 0xC0	; 192
 870:	5f 4f       	sbci	r21, 0xFF	; 255
 872:	6f 4f       	sbci	r22, 0xFF	; 255
 874:	7f 4f       	sbci	r23, 0xFF	; 255
 876:	40 78       	andi	r20, 0x80	; 128
 878:	1a 8e       	std	Y+26, r1	; 0x1a
 87a:	fe 17       	cp	r31, r30
 87c:	11 f0       	breq	.+4      	; 0x882 <__stack+0x23>
 87e:	81 e0       	ldi	r24, 0x01	; 1
 880:	8a 8f       	std	Y+26, r24	; 0x1a
 882:	4d 8f       	std	Y+29, r20	; 0x1d
 884:	5e 8f       	std	Y+30, r21	; 0x1e
 886:	6f 8f       	std	Y+31, r22	; 0x1f
 888:	78 a3       	std	Y+32, r23	; 0x20
 88a:	83 e0       	ldi	r24, 0x03	; 3
 88c:	89 8f       	std	Y+25, r24	; 0x19
 88e:	ce 01       	movw	r24, r28
 890:	49 96       	adiw	r24, 0x19	; 25
 892:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <__pack_f>
 896:	a0 96       	adiw	r28, 0x20	; 32
 898:	e2 e1       	ldi	r30, 0x12	; 18
 89a:	0c 94 a2 07 	jmp	0xf44	; 0xf44 <__epilogue_restores__>

0000089e <__gtsf2>:
 89e:	a8 e1       	ldi	r26, 0x18	; 24
 8a0:	b0 e0       	ldi	r27, 0x00	; 0
 8a2:	e5 e5       	ldi	r30, 0x55	; 85
 8a4:	f4 e0       	ldi	r31, 0x04	; 4
 8a6:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__prologue_saves__+0x18>
 8aa:	69 83       	std	Y+1, r22	; 0x01
 8ac:	7a 83       	std	Y+2, r23	; 0x02
 8ae:	8b 83       	std	Y+3, r24	; 0x03
 8b0:	9c 83       	std	Y+4, r25	; 0x04
 8b2:	2d 83       	std	Y+5, r18	; 0x05
 8b4:	3e 83       	std	Y+6, r19	; 0x06
 8b6:	4f 83       	std	Y+7, r20	; 0x07
 8b8:	58 87       	std	Y+8, r21	; 0x08
 8ba:	89 e0       	ldi	r24, 0x09	; 9
 8bc:	e8 2e       	mov	r14, r24
 8be:	f1 2c       	mov	r15, r1
 8c0:	ec 0e       	add	r14, r28
 8c2:	fd 1e       	adc	r15, r29
 8c4:	ce 01       	movw	r24, r28
 8c6:	01 96       	adiw	r24, 0x01	; 1
 8c8:	b7 01       	movw	r22, r14
 8ca:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 8ce:	8e 01       	movw	r16, r28
 8d0:	0f 5e       	subi	r16, 0xEF	; 239
 8d2:	1f 4f       	sbci	r17, 0xFF	; 255
 8d4:	ce 01       	movw	r24, r28
 8d6:	05 96       	adiw	r24, 0x05	; 5
 8d8:	b8 01       	movw	r22, r16
 8da:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 8de:	89 85       	ldd	r24, Y+9	; 0x09
 8e0:	82 30       	cpi	r24, 0x02	; 2
 8e2:	40 f0       	brcs	.+16     	; 0x8f4 <__gtsf2+0x56>
 8e4:	89 89       	ldd	r24, Y+17	; 0x11
 8e6:	82 30       	cpi	r24, 0x02	; 2
 8e8:	28 f0       	brcs	.+10     	; 0x8f4 <__gtsf2+0x56>
 8ea:	c7 01       	movw	r24, r14
 8ec:	b8 01       	movw	r22, r16
 8ee:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fpcmp_parts_f>
 8f2:	01 c0       	rjmp	.+2      	; 0x8f6 <__gtsf2+0x58>
 8f4:	8f ef       	ldi	r24, 0xFF	; 255
 8f6:	68 96       	adiw	r28, 0x18	; 24
 8f8:	e6 e0       	ldi	r30, 0x06	; 6
 8fa:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <__epilogue_restores__+0x18>

000008fe <__gesf2>:
 8fe:	a8 e1       	ldi	r26, 0x18	; 24
 900:	b0 e0       	ldi	r27, 0x00	; 0
 902:	e5 e8       	ldi	r30, 0x85	; 133
 904:	f4 e0       	ldi	r31, 0x04	; 4
 906:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__prologue_saves__+0x18>
 90a:	69 83       	std	Y+1, r22	; 0x01
 90c:	7a 83       	std	Y+2, r23	; 0x02
 90e:	8b 83       	std	Y+3, r24	; 0x03
 910:	9c 83       	std	Y+4, r25	; 0x04
 912:	2d 83       	std	Y+5, r18	; 0x05
 914:	3e 83       	std	Y+6, r19	; 0x06
 916:	4f 83       	std	Y+7, r20	; 0x07
 918:	58 87       	std	Y+8, r21	; 0x08
 91a:	89 e0       	ldi	r24, 0x09	; 9
 91c:	e8 2e       	mov	r14, r24
 91e:	f1 2c       	mov	r15, r1
 920:	ec 0e       	add	r14, r28
 922:	fd 1e       	adc	r15, r29
 924:	ce 01       	movw	r24, r28
 926:	01 96       	adiw	r24, 0x01	; 1
 928:	b7 01       	movw	r22, r14
 92a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 92e:	8e 01       	movw	r16, r28
 930:	0f 5e       	subi	r16, 0xEF	; 239
 932:	1f 4f       	sbci	r17, 0xFF	; 255
 934:	ce 01       	movw	r24, r28
 936:	05 96       	adiw	r24, 0x05	; 5
 938:	b8 01       	movw	r22, r16
 93a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 93e:	89 85       	ldd	r24, Y+9	; 0x09
 940:	82 30       	cpi	r24, 0x02	; 2
 942:	40 f0       	brcs	.+16     	; 0x954 <__gesf2+0x56>
 944:	89 89       	ldd	r24, Y+17	; 0x11
 946:	82 30       	cpi	r24, 0x02	; 2
 948:	28 f0       	brcs	.+10     	; 0x954 <__gesf2+0x56>
 94a:	c7 01       	movw	r24, r14
 94c:	b8 01       	movw	r22, r16
 94e:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fpcmp_parts_f>
 952:	01 c0       	rjmp	.+2      	; 0x956 <__gesf2+0x58>
 954:	8f ef       	ldi	r24, 0xFF	; 255
 956:	68 96       	adiw	r28, 0x18	; 24
 958:	e6 e0       	ldi	r30, 0x06	; 6
 95a:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <__epilogue_restores__+0x18>

0000095e <__ltsf2>:
 95e:	a8 e1       	ldi	r26, 0x18	; 24
 960:	b0 e0       	ldi	r27, 0x00	; 0
 962:	e5 eb       	ldi	r30, 0xB5	; 181
 964:	f4 e0       	ldi	r31, 0x04	; 4
 966:	0c 94 92 07 	jmp	0xf24	; 0xf24 <__prologue_saves__+0x18>
 96a:	69 83       	std	Y+1, r22	; 0x01
 96c:	7a 83       	std	Y+2, r23	; 0x02
 96e:	8b 83       	std	Y+3, r24	; 0x03
 970:	9c 83       	std	Y+4, r25	; 0x04
 972:	2d 83       	std	Y+5, r18	; 0x05
 974:	3e 83       	std	Y+6, r19	; 0x06
 976:	4f 83       	std	Y+7, r20	; 0x07
 978:	58 87       	std	Y+8, r21	; 0x08
 97a:	89 e0       	ldi	r24, 0x09	; 9
 97c:	e8 2e       	mov	r14, r24
 97e:	f1 2c       	mov	r15, r1
 980:	ec 0e       	add	r14, r28
 982:	fd 1e       	adc	r15, r29
 984:	ce 01       	movw	r24, r28
 986:	01 96       	adiw	r24, 0x01	; 1
 988:	b7 01       	movw	r22, r14
 98a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 98e:	8e 01       	movw	r16, r28
 990:	0f 5e       	subi	r16, 0xEF	; 239
 992:	1f 4f       	sbci	r17, 0xFF	; 255
 994:	ce 01       	movw	r24, r28
 996:	05 96       	adiw	r24, 0x05	; 5
 998:	b8 01       	movw	r22, r16
 99a:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 99e:	89 85       	ldd	r24, Y+9	; 0x09
 9a0:	82 30       	cpi	r24, 0x02	; 2
 9a2:	40 f0       	brcs	.+16     	; 0x9b4 <__ltsf2+0x56>
 9a4:	89 89       	ldd	r24, Y+17	; 0x11
 9a6:	82 30       	cpi	r24, 0x02	; 2
 9a8:	28 f0       	brcs	.+10     	; 0x9b4 <__ltsf2+0x56>
 9aa:	c7 01       	movw	r24, r14
 9ac:	b8 01       	movw	r22, r16
 9ae:	0e 94 2d 07 	call	0xe5a	; 0xe5a <__fpcmp_parts_f>
 9b2:	01 c0       	rjmp	.+2      	; 0x9b6 <__ltsf2+0x58>
 9b4:	81 e0       	ldi	r24, 0x01	; 1
 9b6:	68 96       	adiw	r28, 0x18	; 24
 9b8:	e6 e0       	ldi	r30, 0x06	; 6
 9ba:	0c 94 ae 07 	jmp	0xf5c	; 0xf5c <__epilogue_restores__+0x18>

000009be <__floatsisf>:
 9be:	a8 e0       	ldi	r26, 0x08	; 8
 9c0:	b0 e0       	ldi	r27, 0x00	; 0
 9c2:	e5 ee       	ldi	r30, 0xE5	; 229
 9c4:	f4 e0       	ldi	r31, 0x04	; 4
 9c6:	0c 94 8f 07 	jmp	0xf1e	; 0xf1e <__prologue_saves__+0x12>
 9ca:	9b 01       	movw	r18, r22
 9cc:	ac 01       	movw	r20, r24
 9ce:	83 e0       	ldi	r24, 0x03	; 3
 9d0:	89 83       	std	Y+1, r24	; 0x01
 9d2:	da 01       	movw	r26, r20
 9d4:	c9 01       	movw	r24, r18
 9d6:	88 27       	eor	r24, r24
 9d8:	b7 fd       	sbrc	r27, 7
 9da:	83 95       	inc	r24
 9dc:	99 27       	eor	r25, r25
 9de:	aa 27       	eor	r26, r26
 9e0:	bb 27       	eor	r27, r27
 9e2:	b8 2e       	mov	r11, r24
 9e4:	21 15       	cp	r18, r1
 9e6:	31 05       	cpc	r19, r1
 9e8:	41 05       	cpc	r20, r1
 9ea:	51 05       	cpc	r21, r1
 9ec:	19 f4       	brne	.+6      	; 0x9f4 <__floatsisf+0x36>
 9ee:	82 e0       	ldi	r24, 0x02	; 2
 9f0:	89 83       	std	Y+1, r24	; 0x01
 9f2:	3a c0       	rjmp	.+116    	; 0xa68 <__floatsisf+0xaa>
 9f4:	88 23       	and	r24, r24
 9f6:	a9 f0       	breq	.+42     	; 0xa22 <__floatsisf+0x64>
 9f8:	20 30       	cpi	r18, 0x00	; 0
 9fa:	80 e0       	ldi	r24, 0x00	; 0
 9fc:	38 07       	cpc	r19, r24
 9fe:	80 e0       	ldi	r24, 0x00	; 0
 a00:	48 07       	cpc	r20, r24
 a02:	80 e8       	ldi	r24, 0x80	; 128
 a04:	58 07       	cpc	r21, r24
 a06:	29 f4       	brne	.+10     	; 0xa12 <__floatsisf+0x54>
 a08:	60 e0       	ldi	r22, 0x00	; 0
 a0a:	70 e0       	ldi	r23, 0x00	; 0
 a0c:	80 e0       	ldi	r24, 0x00	; 0
 a0e:	9f ec       	ldi	r25, 0xCF	; 207
 a10:	30 c0       	rjmp	.+96     	; 0xa72 <__floatsisf+0xb4>
 a12:	ee 24       	eor	r14, r14
 a14:	ff 24       	eor	r15, r15
 a16:	87 01       	movw	r16, r14
 a18:	e2 1a       	sub	r14, r18
 a1a:	f3 0a       	sbc	r15, r19
 a1c:	04 0b       	sbc	r16, r20
 a1e:	15 0b       	sbc	r17, r21
 a20:	02 c0       	rjmp	.+4      	; 0xa26 <__floatsisf+0x68>
 a22:	79 01       	movw	r14, r18
 a24:	8a 01       	movw	r16, r20
 a26:	8e e1       	ldi	r24, 0x1E	; 30
 a28:	c8 2e       	mov	r12, r24
 a2a:	d1 2c       	mov	r13, r1
 a2c:	dc 82       	std	Y+4, r13	; 0x04
 a2e:	cb 82       	std	Y+3, r12	; 0x03
 a30:	ed 82       	std	Y+5, r14	; 0x05
 a32:	fe 82       	std	Y+6, r15	; 0x06
 a34:	0f 83       	std	Y+7, r16	; 0x07
 a36:	18 87       	std	Y+8, r17	; 0x08
 a38:	c8 01       	movw	r24, r16
 a3a:	b7 01       	movw	r22, r14
 a3c:	0e 94 91 05 	call	0xb22	; 0xb22 <__clzsi2>
 a40:	01 97       	sbiw	r24, 0x01	; 1
 a42:	18 16       	cp	r1, r24
 a44:	19 06       	cpc	r1, r25
 a46:	84 f4       	brge	.+32     	; 0xa68 <__floatsisf+0xaa>
 a48:	08 2e       	mov	r0, r24
 a4a:	04 c0       	rjmp	.+8      	; 0xa54 <__floatsisf+0x96>
 a4c:	ee 0c       	add	r14, r14
 a4e:	ff 1c       	adc	r15, r15
 a50:	00 1f       	adc	r16, r16
 a52:	11 1f       	adc	r17, r17
 a54:	0a 94       	dec	r0
 a56:	d2 f7       	brpl	.-12     	; 0xa4c <__floatsisf+0x8e>
 a58:	ed 82       	std	Y+5, r14	; 0x05
 a5a:	fe 82       	std	Y+6, r15	; 0x06
 a5c:	0f 83       	std	Y+7, r16	; 0x07
 a5e:	18 87       	std	Y+8, r17	; 0x08
 a60:	c8 1a       	sub	r12, r24
 a62:	d9 0a       	sbc	r13, r25
 a64:	dc 82       	std	Y+4, r13	; 0x04
 a66:	cb 82       	std	Y+3, r12	; 0x03
 a68:	ba 82       	std	Y+2, r11	; 0x02
 a6a:	ce 01       	movw	r24, r28
 a6c:	01 96       	adiw	r24, 0x01	; 1
 a6e:	0e 94 e0 05 	call	0xbc0	; 0xbc0 <__pack_f>
 a72:	28 96       	adiw	r28, 0x08	; 8
 a74:	e9 e0       	ldi	r30, 0x09	; 9
 a76:	0c 94 ab 07 	jmp	0xf56	; 0xf56 <__epilogue_restores__+0x12>

00000a7a <__fixsfsi>:
 a7a:	ac e0       	ldi	r26, 0x0C	; 12
 a7c:	b0 e0       	ldi	r27, 0x00	; 0
 a7e:	e3 e4       	ldi	r30, 0x43	; 67
 a80:	f5 e0       	ldi	r31, 0x05	; 5
 a82:	0c 94 96 07 	jmp	0xf2c	; 0xf2c <__prologue_saves__+0x20>
 a86:	69 83       	std	Y+1, r22	; 0x01
 a88:	7a 83       	std	Y+2, r23	; 0x02
 a8a:	8b 83       	std	Y+3, r24	; 0x03
 a8c:	9c 83       	std	Y+4, r25	; 0x04
 a8e:	ce 01       	movw	r24, r28
 a90:	01 96       	adiw	r24, 0x01	; 1
 a92:	be 01       	movw	r22, r28
 a94:	6b 5f       	subi	r22, 0xFB	; 251
 a96:	7f 4f       	sbci	r23, 0xFF	; 255
 a98:	0e 94 b5 06 	call	0xd6a	; 0xd6a <__unpack_f>
 a9c:	8d 81       	ldd	r24, Y+5	; 0x05
 a9e:	82 30       	cpi	r24, 0x02	; 2
 aa0:	61 f1       	breq	.+88     	; 0xafa <__fixsfsi+0x80>
 aa2:	82 30       	cpi	r24, 0x02	; 2
 aa4:	50 f1       	brcs	.+84     	; 0xafa <__fixsfsi+0x80>
 aa6:	84 30       	cpi	r24, 0x04	; 4
 aa8:	21 f4       	brne	.+8      	; 0xab2 <__fixsfsi+0x38>
 aaa:	8e 81       	ldd	r24, Y+6	; 0x06
 aac:	88 23       	and	r24, r24
 aae:	51 f1       	breq	.+84     	; 0xb04 <__fixsfsi+0x8a>
 ab0:	2e c0       	rjmp	.+92     	; 0xb0e <__fixsfsi+0x94>
 ab2:	2f 81       	ldd	r18, Y+7	; 0x07
 ab4:	38 85       	ldd	r19, Y+8	; 0x08
 ab6:	37 fd       	sbrc	r19, 7
 ab8:	20 c0       	rjmp	.+64     	; 0xafa <__fixsfsi+0x80>
 aba:	6e 81       	ldd	r22, Y+6	; 0x06
 abc:	2f 31       	cpi	r18, 0x1F	; 31
 abe:	31 05       	cpc	r19, r1
 ac0:	1c f0       	brlt	.+6      	; 0xac8 <__fixsfsi+0x4e>
 ac2:	66 23       	and	r22, r22
 ac4:	f9 f0       	breq	.+62     	; 0xb04 <__fixsfsi+0x8a>
 ac6:	23 c0       	rjmp	.+70     	; 0xb0e <__fixsfsi+0x94>
 ac8:	8e e1       	ldi	r24, 0x1E	; 30
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	82 1b       	sub	r24, r18
 ace:	93 0b       	sbc	r25, r19
 ad0:	29 85       	ldd	r18, Y+9	; 0x09
 ad2:	3a 85       	ldd	r19, Y+10	; 0x0a
 ad4:	4b 85       	ldd	r20, Y+11	; 0x0b
 ad6:	5c 85       	ldd	r21, Y+12	; 0x0c
 ad8:	04 c0       	rjmp	.+8      	; 0xae2 <__fixsfsi+0x68>
 ada:	56 95       	lsr	r21
 adc:	47 95       	ror	r20
 ade:	37 95       	ror	r19
 ae0:	27 95       	ror	r18
 ae2:	8a 95       	dec	r24
 ae4:	d2 f7       	brpl	.-12     	; 0xada <__fixsfsi+0x60>
 ae6:	66 23       	and	r22, r22
 ae8:	b1 f0       	breq	.+44     	; 0xb16 <__fixsfsi+0x9c>
 aea:	50 95       	com	r21
 aec:	40 95       	com	r20
 aee:	30 95       	com	r19
 af0:	21 95       	neg	r18
 af2:	3f 4f       	sbci	r19, 0xFF	; 255
 af4:	4f 4f       	sbci	r20, 0xFF	; 255
 af6:	5f 4f       	sbci	r21, 0xFF	; 255
 af8:	0e c0       	rjmp	.+28     	; 0xb16 <__fixsfsi+0x9c>
 afa:	20 e0       	ldi	r18, 0x00	; 0
 afc:	30 e0       	ldi	r19, 0x00	; 0
 afe:	40 e0       	ldi	r20, 0x00	; 0
 b00:	50 e0       	ldi	r21, 0x00	; 0
 b02:	09 c0       	rjmp	.+18     	; 0xb16 <__fixsfsi+0x9c>
 b04:	2f ef       	ldi	r18, 0xFF	; 255
 b06:	3f ef       	ldi	r19, 0xFF	; 255
 b08:	4f ef       	ldi	r20, 0xFF	; 255
 b0a:	5f e7       	ldi	r21, 0x7F	; 127
 b0c:	04 c0       	rjmp	.+8      	; 0xb16 <__fixsfsi+0x9c>
 b0e:	20 e0       	ldi	r18, 0x00	; 0
 b10:	30 e0       	ldi	r19, 0x00	; 0
 b12:	40 e0       	ldi	r20, 0x00	; 0
 b14:	50 e8       	ldi	r21, 0x80	; 128
 b16:	b9 01       	movw	r22, r18
 b18:	ca 01       	movw	r24, r20
 b1a:	2c 96       	adiw	r28, 0x0c	; 12
 b1c:	e2 e0       	ldi	r30, 0x02	; 2
 b1e:	0c 94 b2 07 	jmp	0xf64	; 0xf64 <__epilogue_restores__+0x20>

00000b22 <__clzsi2>:
 b22:	ef 92       	push	r14
 b24:	ff 92       	push	r15
 b26:	0f 93       	push	r16
 b28:	1f 93       	push	r17
 b2a:	7b 01       	movw	r14, r22
 b2c:	8c 01       	movw	r16, r24
 b2e:	80 e0       	ldi	r24, 0x00	; 0
 b30:	e8 16       	cp	r14, r24
 b32:	80 e0       	ldi	r24, 0x00	; 0
 b34:	f8 06       	cpc	r15, r24
 b36:	81 e0       	ldi	r24, 0x01	; 1
 b38:	08 07       	cpc	r16, r24
 b3a:	80 e0       	ldi	r24, 0x00	; 0
 b3c:	18 07       	cpc	r17, r24
 b3e:	88 f4       	brcc	.+34     	; 0xb62 <__clzsi2+0x40>
 b40:	8f ef       	ldi	r24, 0xFF	; 255
 b42:	e8 16       	cp	r14, r24
 b44:	f1 04       	cpc	r15, r1
 b46:	01 05       	cpc	r16, r1
 b48:	11 05       	cpc	r17, r1
 b4a:	31 f0       	breq	.+12     	; 0xb58 <__clzsi2+0x36>
 b4c:	28 f0       	brcs	.+10     	; 0xb58 <__clzsi2+0x36>
 b4e:	88 e0       	ldi	r24, 0x08	; 8
 b50:	90 e0       	ldi	r25, 0x00	; 0
 b52:	a0 e0       	ldi	r26, 0x00	; 0
 b54:	b0 e0       	ldi	r27, 0x00	; 0
 b56:	17 c0       	rjmp	.+46     	; 0xb86 <__clzsi2+0x64>
 b58:	80 e0       	ldi	r24, 0x00	; 0
 b5a:	90 e0       	ldi	r25, 0x00	; 0
 b5c:	a0 e0       	ldi	r26, 0x00	; 0
 b5e:	b0 e0       	ldi	r27, 0x00	; 0
 b60:	12 c0       	rjmp	.+36     	; 0xb86 <__clzsi2+0x64>
 b62:	80 e0       	ldi	r24, 0x00	; 0
 b64:	e8 16       	cp	r14, r24
 b66:	80 e0       	ldi	r24, 0x00	; 0
 b68:	f8 06       	cpc	r15, r24
 b6a:	80 e0       	ldi	r24, 0x00	; 0
 b6c:	08 07       	cpc	r16, r24
 b6e:	81 e0       	ldi	r24, 0x01	; 1
 b70:	18 07       	cpc	r17, r24
 b72:	28 f0       	brcs	.+10     	; 0xb7e <__clzsi2+0x5c>
 b74:	88 e1       	ldi	r24, 0x18	; 24
 b76:	90 e0       	ldi	r25, 0x00	; 0
 b78:	a0 e0       	ldi	r26, 0x00	; 0
 b7a:	b0 e0       	ldi	r27, 0x00	; 0
 b7c:	04 c0       	rjmp	.+8      	; 0xb86 <__clzsi2+0x64>
 b7e:	80 e1       	ldi	r24, 0x10	; 16
 b80:	90 e0       	ldi	r25, 0x00	; 0
 b82:	a0 e0       	ldi	r26, 0x00	; 0
 b84:	b0 e0       	ldi	r27, 0x00	; 0
 b86:	20 e2       	ldi	r18, 0x20	; 32
 b88:	30 e0       	ldi	r19, 0x00	; 0
 b8a:	40 e0       	ldi	r20, 0x00	; 0
 b8c:	50 e0       	ldi	r21, 0x00	; 0
 b8e:	28 1b       	sub	r18, r24
 b90:	39 0b       	sbc	r19, r25
 b92:	4a 0b       	sbc	r20, r26
 b94:	5b 0b       	sbc	r21, r27
 b96:	04 c0       	rjmp	.+8      	; 0xba0 <__clzsi2+0x7e>
 b98:	16 95       	lsr	r17
 b9a:	07 95       	ror	r16
 b9c:	f7 94       	ror	r15
 b9e:	e7 94       	ror	r14
 ba0:	8a 95       	dec	r24
 ba2:	d2 f7       	brpl	.-12     	; 0xb98 <__clzsi2+0x76>
 ba4:	f7 01       	movw	r30, r14
 ba6:	e0 59       	subi	r30, 0x90	; 144
 ba8:	ff 4f       	sbci	r31, 0xFF	; 255
 baa:	80 81       	ld	r24, Z
 bac:	28 1b       	sub	r18, r24
 bae:	31 09       	sbc	r19, r1
 bb0:	41 09       	sbc	r20, r1
 bb2:	51 09       	sbc	r21, r1
 bb4:	c9 01       	movw	r24, r18
 bb6:	1f 91       	pop	r17
 bb8:	0f 91       	pop	r16
 bba:	ff 90       	pop	r15
 bbc:	ef 90       	pop	r14
 bbe:	08 95       	ret

00000bc0 <__pack_f>:
 bc0:	df 92       	push	r13
 bc2:	ef 92       	push	r14
 bc4:	ff 92       	push	r15
 bc6:	0f 93       	push	r16
 bc8:	1f 93       	push	r17
 bca:	fc 01       	movw	r30, r24
 bcc:	e4 80       	ldd	r14, Z+4	; 0x04
 bce:	f5 80       	ldd	r15, Z+5	; 0x05
 bd0:	06 81       	ldd	r16, Z+6	; 0x06
 bd2:	17 81       	ldd	r17, Z+7	; 0x07
 bd4:	d1 80       	ldd	r13, Z+1	; 0x01
 bd6:	80 81       	ld	r24, Z
 bd8:	82 30       	cpi	r24, 0x02	; 2
 bda:	48 f4       	brcc	.+18     	; 0xbee <__pack_f+0x2e>
 bdc:	80 e0       	ldi	r24, 0x00	; 0
 bde:	90 e0       	ldi	r25, 0x00	; 0
 be0:	a0 e1       	ldi	r26, 0x10	; 16
 be2:	b0 e0       	ldi	r27, 0x00	; 0
 be4:	e8 2a       	or	r14, r24
 be6:	f9 2a       	or	r15, r25
 be8:	0a 2b       	or	r16, r26
 bea:	1b 2b       	or	r17, r27
 bec:	a5 c0       	rjmp	.+330    	; 0xd38 <__pack_f+0x178>
 bee:	84 30       	cpi	r24, 0x04	; 4
 bf0:	09 f4       	brne	.+2      	; 0xbf4 <__pack_f+0x34>
 bf2:	9f c0       	rjmp	.+318    	; 0xd32 <__pack_f+0x172>
 bf4:	82 30       	cpi	r24, 0x02	; 2
 bf6:	21 f4       	brne	.+8      	; 0xc00 <__pack_f+0x40>
 bf8:	ee 24       	eor	r14, r14
 bfa:	ff 24       	eor	r15, r15
 bfc:	87 01       	movw	r16, r14
 bfe:	05 c0       	rjmp	.+10     	; 0xc0a <__pack_f+0x4a>
 c00:	e1 14       	cp	r14, r1
 c02:	f1 04       	cpc	r15, r1
 c04:	01 05       	cpc	r16, r1
 c06:	11 05       	cpc	r17, r1
 c08:	19 f4       	brne	.+6      	; 0xc10 <__pack_f+0x50>
 c0a:	e0 e0       	ldi	r30, 0x00	; 0
 c0c:	f0 e0       	ldi	r31, 0x00	; 0
 c0e:	96 c0       	rjmp	.+300    	; 0xd3c <__pack_f+0x17c>
 c10:	62 81       	ldd	r22, Z+2	; 0x02
 c12:	73 81       	ldd	r23, Z+3	; 0x03
 c14:	9f ef       	ldi	r25, 0xFF	; 255
 c16:	62 38       	cpi	r22, 0x82	; 130
 c18:	79 07       	cpc	r23, r25
 c1a:	0c f0       	brlt	.+2      	; 0xc1e <__pack_f+0x5e>
 c1c:	5b c0       	rjmp	.+182    	; 0xcd4 <__pack_f+0x114>
 c1e:	22 e8       	ldi	r18, 0x82	; 130
 c20:	3f ef       	ldi	r19, 0xFF	; 255
 c22:	26 1b       	sub	r18, r22
 c24:	37 0b       	sbc	r19, r23
 c26:	2a 31       	cpi	r18, 0x1A	; 26
 c28:	31 05       	cpc	r19, r1
 c2a:	2c f0       	brlt	.+10     	; 0xc36 <__pack_f+0x76>
 c2c:	20 e0       	ldi	r18, 0x00	; 0
 c2e:	30 e0       	ldi	r19, 0x00	; 0
 c30:	40 e0       	ldi	r20, 0x00	; 0
 c32:	50 e0       	ldi	r21, 0x00	; 0
 c34:	2a c0       	rjmp	.+84     	; 0xc8a <__pack_f+0xca>
 c36:	b8 01       	movw	r22, r16
 c38:	a7 01       	movw	r20, r14
 c3a:	02 2e       	mov	r0, r18
 c3c:	04 c0       	rjmp	.+8      	; 0xc46 <__pack_f+0x86>
 c3e:	76 95       	lsr	r23
 c40:	67 95       	ror	r22
 c42:	57 95       	ror	r21
 c44:	47 95       	ror	r20
 c46:	0a 94       	dec	r0
 c48:	d2 f7       	brpl	.-12     	; 0xc3e <__pack_f+0x7e>
 c4a:	81 e0       	ldi	r24, 0x01	; 1
 c4c:	90 e0       	ldi	r25, 0x00	; 0
 c4e:	a0 e0       	ldi	r26, 0x00	; 0
 c50:	b0 e0       	ldi	r27, 0x00	; 0
 c52:	04 c0       	rjmp	.+8      	; 0xc5c <__pack_f+0x9c>
 c54:	88 0f       	add	r24, r24
 c56:	99 1f       	adc	r25, r25
 c58:	aa 1f       	adc	r26, r26
 c5a:	bb 1f       	adc	r27, r27
 c5c:	2a 95       	dec	r18
 c5e:	d2 f7       	brpl	.-12     	; 0xc54 <__pack_f+0x94>
 c60:	01 97       	sbiw	r24, 0x01	; 1
 c62:	a1 09       	sbc	r26, r1
 c64:	b1 09       	sbc	r27, r1
 c66:	8e 21       	and	r24, r14
 c68:	9f 21       	and	r25, r15
 c6a:	a0 23       	and	r26, r16
 c6c:	b1 23       	and	r27, r17
 c6e:	00 97       	sbiw	r24, 0x00	; 0
 c70:	a1 05       	cpc	r26, r1
 c72:	b1 05       	cpc	r27, r1
 c74:	21 f0       	breq	.+8      	; 0xc7e <__pack_f+0xbe>
 c76:	81 e0       	ldi	r24, 0x01	; 1
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	a0 e0       	ldi	r26, 0x00	; 0
 c7c:	b0 e0       	ldi	r27, 0x00	; 0
 c7e:	9a 01       	movw	r18, r20
 c80:	ab 01       	movw	r20, r22
 c82:	28 2b       	or	r18, r24
 c84:	39 2b       	or	r19, r25
 c86:	4a 2b       	or	r20, r26
 c88:	5b 2b       	or	r21, r27
 c8a:	da 01       	movw	r26, r20
 c8c:	c9 01       	movw	r24, r18
 c8e:	8f 77       	andi	r24, 0x7F	; 127
 c90:	90 70       	andi	r25, 0x00	; 0
 c92:	a0 70       	andi	r26, 0x00	; 0
 c94:	b0 70       	andi	r27, 0x00	; 0
 c96:	80 34       	cpi	r24, 0x40	; 64
 c98:	91 05       	cpc	r25, r1
 c9a:	a1 05       	cpc	r26, r1
 c9c:	b1 05       	cpc	r27, r1
 c9e:	39 f4       	brne	.+14     	; 0xcae <__pack_f+0xee>
 ca0:	27 ff       	sbrs	r18, 7
 ca2:	09 c0       	rjmp	.+18     	; 0xcb6 <__pack_f+0xf6>
 ca4:	20 5c       	subi	r18, 0xC0	; 192
 ca6:	3f 4f       	sbci	r19, 0xFF	; 255
 ca8:	4f 4f       	sbci	r20, 0xFF	; 255
 caa:	5f 4f       	sbci	r21, 0xFF	; 255
 cac:	04 c0       	rjmp	.+8      	; 0xcb6 <__pack_f+0xf6>
 cae:	21 5c       	subi	r18, 0xC1	; 193
 cb0:	3f 4f       	sbci	r19, 0xFF	; 255
 cb2:	4f 4f       	sbci	r20, 0xFF	; 255
 cb4:	5f 4f       	sbci	r21, 0xFF	; 255
 cb6:	e0 e0       	ldi	r30, 0x00	; 0
 cb8:	f0 e0       	ldi	r31, 0x00	; 0
 cba:	20 30       	cpi	r18, 0x00	; 0
 cbc:	a0 e0       	ldi	r26, 0x00	; 0
 cbe:	3a 07       	cpc	r19, r26
 cc0:	a0 e0       	ldi	r26, 0x00	; 0
 cc2:	4a 07       	cpc	r20, r26
 cc4:	a0 e4       	ldi	r26, 0x40	; 64
 cc6:	5a 07       	cpc	r21, r26
 cc8:	10 f0       	brcs	.+4      	; 0xcce <__pack_f+0x10e>
 cca:	e1 e0       	ldi	r30, 0x01	; 1
 ccc:	f0 e0       	ldi	r31, 0x00	; 0
 cce:	79 01       	movw	r14, r18
 cd0:	8a 01       	movw	r16, r20
 cd2:	27 c0       	rjmp	.+78     	; 0xd22 <__pack_f+0x162>
 cd4:	60 38       	cpi	r22, 0x80	; 128
 cd6:	71 05       	cpc	r23, r1
 cd8:	64 f5       	brge	.+88     	; 0xd32 <__pack_f+0x172>
 cda:	fb 01       	movw	r30, r22
 cdc:	e1 58       	subi	r30, 0x81	; 129
 cde:	ff 4f       	sbci	r31, 0xFF	; 255
 ce0:	d8 01       	movw	r26, r16
 ce2:	c7 01       	movw	r24, r14
 ce4:	8f 77       	andi	r24, 0x7F	; 127
 ce6:	90 70       	andi	r25, 0x00	; 0
 ce8:	a0 70       	andi	r26, 0x00	; 0
 cea:	b0 70       	andi	r27, 0x00	; 0
 cec:	80 34       	cpi	r24, 0x40	; 64
 cee:	91 05       	cpc	r25, r1
 cf0:	a1 05       	cpc	r26, r1
 cf2:	b1 05       	cpc	r27, r1
 cf4:	39 f4       	brne	.+14     	; 0xd04 <__pack_f+0x144>
 cf6:	e7 fe       	sbrs	r14, 7
 cf8:	0d c0       	rjmp	.+26     	; 0xd14 <__pack_f+0x154>
 cfa:	80 e4       	ldi	r24, 0x40	; 64
 cfc:	90 e0       	ldi	r25, 0x00	; 0
 cfe:	a0 e0       	ldi	r26, 0x00	; 0
 d00:	b0 e0       	ldi	r27, 0x00	; 0
 d02:	04 c0       	rjmp	.+8      	; 0xd0c <__pack_f+0x14c>
 d04:	8f e3       	ldi	r24, 0x3F	; 63
 d06:	90 e0       	ldi	r25, 0x00	; 0
 d08:	a0 e0       	ldi	r26, 0x00	; 0
 d0a:	b0 e0       	ldi	r27, 0x00	; 0
 d0c:	e8 0e       	add	r14, r24
 d0e:	f9 1e       	adc	r15, r25
 d10:	0a 1f       	adc	r16, r26
 d12:	1b 1f       	adc	r17, r27
 d14:	17 ff       	sbrs	r17, 7
 d16:	05 c0       	rjmp	.+10     	; 0xd22 <__pack_f+0x162>
 d18:	16 95       	lsr	r17
 d1a:	07 95       	ror	r16
 d1c:	f7 94       	ror	r15
 d1e:	e7 94       	ror	r14
 d20:	31 96       	adiw	r30, 0x01	; 1
 d22:	87 e0       	ldi	r24, 0x07	; 7
 d24:	16 95       	lsr	r17
 d26:	07 95       	ror	r16
 d28:	f7 94       	ror	r15
 d2a:	e7 94       	ror	r14
 d2c:	8a 95       	dec	r24
 d2e:	d1 f7       	brne	.-12     	; 0xd24 <__pack_f+0x164>
 d30:	05 c0       	rjmp	.+10     	; 0xd3c <__pack_f+0x17c>
 d32:	ee 24       	eor	r14, r14
 d34:	ff 24       	eor	r15, r15
 d36:	87 01       	movw	r16, r14
 d38:	ef ef       	ldi	r30, 0xFF	; 255
 d3a:	f0 e0       	ldi	r31, 0x00	; 0
 d3c:	6e 2f       	mov	r22, r30
 d3e:	67 95       	ror	r22
 d40:	66 27       	eor	r22, r22
 d42:	67 95       	ror	r22
 d44:	90 2f       	mov	r25, r16
 d46:	9f 77       	andi	r25, 0x7F	; 127
 d48:	d7 94       	ror	r13
 d4a:	dd 24       	eor	r13, r13
 d4c:	d7 94       	ror	r13
 d4e:	8e 2f       	mov	r24, r30
 d50:	86 95       	lsr	r24
 d52:	49 2f       	mov	r20, r25
 d54:	46 2b       	or	r20, r22
 d56:	58 2f       	mov	r21, r24
 d58:	5d 29       	or	r21, r13
 d5a:	b7 01       	movw	r22, r14
 d5c:	ca 01       	movw	r24, r20
 d5e:	1f 91       	pop	r17
 d60:	0f 91       	pop	r16
 d62:	ff 90       	pop	r15
 d64:	ef 90       	pop	r14
 d66:	df 90       	pop	r13
 d68:	08 95       	ret

00000d6a <__unpack_f>:
 d6a:	fc 01       	movw	r30, r24
 d6c:	db 01       	movw	r26, r22
 d6e:	40 81       	ld	r20, Z
 d70:	51 81       	ldd	r21, Z+1	; 0x01
 d72:	22 81       	ldd	r18, Z+2	; 0x02
 d74:	62 2f       	mov	r22, r18
 d76:	6f 77       	andi	r22, 0x7F	; 127
 d78:	70 e0       	ldi	r23, 0x00	; 0
 d7a:	22 1f       	adc	r18, r18
 d7c:	22 27       	eor	r18, r18
 d7e:	22 1f       	adc	r18, r18
 d80:	93 81       	ldd	r25, Z+3	; 0x03
 d82:	89 2f       	mov	r24, r25
 d84:	88 0f       	add	r24, r24
 d86:	82 2b       	or	r24, r18
 d88:	28 2f       	mov	r18, r24
 d8a:	30 e0       	ldi	r19, 0x00	; 0
 d8c:	99 1f       	adc	r25, r25
 d8e:	99 27       	eor	r25, r25
 d90:	99 1f       	adc	r25, r25
 d92:	11 96       	adiw	r26, 0x01	; 1
 d94:	9c 93       	st	X, r25
 d96:	11 97       	sbiw	r26, 0x01	; 1
 d98:	21 15       	cp	r18, r1
 d9a:	31 05       	cpc	r19, r1
 d9c:	a9 f5       	brne	.+106    	; 0xe08 <__unpack_f+0x9e>
 d9e:	41 15       	cp	r20, r1
 da0:	51 05       	cpc	r21, r1
 da2:	61 05       	cpc	r22, r1
 da4:	71 05       	cpc	r23, r1
 da6:	11 f4       	brne	.+4      	; 0xdac <__unpack_f+0x42>
 da8:	82 e0       	ldi	r24, 0x02	; 2
 daa:	37 c0       	rjmp	.+110    	; 0xe1a <__unpack_f+0xb0>
 dac:	82 e8       	ldi	r24, 0x82	; 130
 dae:	9f ef       	ldi	r25, 0xFF	; 255
 db0:	13 96       	adiw	r26, 0x03	; 3
 db2:	9c 93       	st	X, r25
 db4:	8e 93       	st	-X, r24
 db6:	12 97       	sbiw	r26, 0x02	; 2
 db8:	9a 01       	movw	r18, r20
 dba:	ab 01       	movw	r20, r22
 dbc:	67 e0       	ldi	r22, 0x07	; 7
 dbe:	22 0f       	add	r18, r18
 dc0:	33 1f       	adc	r19, r19
 dc2:	44 1f       	adc	r20, r20
 dc4:	55 1f       	adc	r21, r21
 dc6:	6a 95       	dec	r22
 dc8:	d1 f7       	brne	.-12     	; 0xdbe <__unpack_f+0x54>
 dca:	83 e0       	ldi	r24, 0x03	; 3
 dcc:	8c 93       	st	X, r24
 dce:	0d c0       	rjmp	.+26     	; 0xdea <__unpack_f+0x80>
 dd0:	22 0f       	add	r18, r18
 dd2:	33 1f       	adc	r19, r19
 dd4:	44 1f       	adc	r20, r20
 dd6:	55 1f       	adc	r21, r21
 dd8:	12 96       	adiw	r26, 0x02	; 2
 dda:	8d 91       	ld	r24, X+
 ddc:	9c 91       	ld	r25, X
 dde:	13 97       	sbiw	r26, 0x03	; 3
 de0:	01 97       	sbiw	r24, 0x01	; 1
 de2:	13 96       	adiw	r26, 0x03	; 3
 de4:	9c 93       	st	X, r25
 de6:	8e 93       	st	-X, r24
 de8:	12 97       	sbiw	r26, 0x02	; 2
 dea:	20 30       	cpi	r18, 0x00	; 0
 dec:	80 e0       	ldi	r24, 0x00	; 0
 dee:	38 07       	cpc	r19, r24
 df0:	80 e0       	ldi	r24, 0x00	; 0
 df2:	48 07       	cpc	r20, r24
 df4:	80 e4       	ldi	r24, 0x40	; 64
 df6:	58 07       	cpc	r21, r24
 df8:	58 f3       	brcs	.-42     	; 0xdd0 <__unpack_f+0x66>
 dfa:	14 96       	adiw	r26, 0x04	; 4
 dfc:	2d 93       	st	X+, r18
 dfe:	3d 93       	st	X+, r19
 e00:	4d 93       	st	X+, r20
 e02:	5c 93       	st	X, r21
 e04:	17 97       	sbiw	r26, 0x07	; 7
 e06:	08 95       	ret
 e08:	2f 3f       	cpi	r18, 0xFF	; 255
 e0a:	31 05       	cpc	r19, r1
 e0c:	79 f4       	brne	.+30     	; 0xe2c <__unpack_f+0xc2>
 e0e:	41 15       	cp	r20, r1
 e10:	51 05       	cpc	r21, r1
 e12:	61 05       	cpc	r22, r1
 e14:	71 05       	cpc	r23, r1
 e16:	19 f4       	brne	.+6      	; 0xe1e <__unpack_f+0xb4>
 e18:	84 e0       	ldi	r24, 0x04	; 4
 e1a:	8c 93       	st	X, r24
 e1c:	08 95       	ret
 e1e:	64 ff       	sbrs	r22, 4
 e20:	03 c0       	rjmp	.+6      	; 0xe28 <__unpack_f+0xbe>
 e22:	81 e0       	ldi	r24, 0x01	; 1
 e24:	8c 93       	st	X, r24
 e26:	12 c0       	rjmp	.+36     	; 0xe4c <__unpack_f+0xe2>
 e28:	1c 92       	st	X, r1
 e2a:	10 c0       	rjmp	.+32     	; 0xe4c <__unpack_f+0xe2>
 e2c:	2f 57       	subi	r18, 0x7F	; 127
 e2e:	30 40       	sbci	r19, 0x00	; 0
 e30:	13 96       	adiw	r26, 0x03	; 3
 e32:	3c 93       	st	X, r19
 e34:	2e 93       	st	-X, r18
 e36:	12 97       	sbiw	r26, 0x02	; 2
 e38:	83 e0       	ldi	r24, 0x03	; 3
 e3a:	8c 93       	st	X, r24
 e3c:	87 e0       	ldi	r24, 0x07	; 7
 e3e:	44 0f       	add	r20, r20
 e40:	55 1f       	adc	r21, r21
 e42:	66 1f       	adc	r22, r22
 e44:	77 1f       	adc	r23, r23
 e46:	8a 95       	dec	r24
 e48:	d1 f7       	brne	.-12     	; 0xe3e <__unpack_f+0xd4>
 e4a:	70 64       	ori	r23, 0x40	; 64
 e4c:	14 96       	adiw	r26, 0x04	; 4
 e4e:	4d 93       	st	X+, r20
 e50:	5d 93       	st	X+, r21
 e52:	6d 93       	st	X+, r22
 e54:	7c 93       	st	X, r23
 e56:	17 97       	sbiw	r26, 0x07	; 7
 e58:	08 95       	ret

00000e5a <__fpcmp_parts_f>:
 e5a:	1f 93       	push	r17
 e5c:	dc 01       	movw	r26, r24
 e5e:	fb 01       	movw	r30, r22
 e60:	9c 91       	ld	r25, X
 e62:	92 30       	cpi	r25, 0x02	; 2
 e64:	08 f4       	brcc	.+2      	; 0xe68 <__fpcmp_parts_f+0xe>
 e66:	47 c0       	rjmp	.+142    	; 0xef6 <__fpcmp_parts_f+0x9c>
 e68:	80 81       	ld	r24, Z
 e6a:	82 30       	cpi	r24, 0x02	; 2
 e6c:	08 f4       	brcc	.+2      	; 0xe70 <__fpcmp_parts_f+0x16>
 e6e:	43 c0       	rjmp	.+134    	; 0xef6 <__fpcmp_parts_f+0x9c>
 e70:	94 30       	cpi	r25, 0x04	; 4
 e72:	51 f4       	brne	.+20     	; 0xe88 <__fpcmp_parts_f+0x2e>
 e74:	11 96       	adiw	r26, 0x01	; 1
 e76:	1c 91       	ld	r17, X
 e78:	84 30       	cpi	r24, 0x04	; 4
 e7a:	99 f5       	brne	.+102    	; 0xee2 <__fpcmp_parts_f+0x88>
 e7c:	81 81       	ldd	r24, Z+1	; 0x01
 e7e:	68 2f       	mov	r22, r24
 e80:	70 e0       	ldi	r23, 0x00	; 0
 e82:	61 1b       	sub	r22, r17
 e84:	71 09       	sbc	r23, r1
 e86:	3f c0       	rjmp	.+126    	; 0xf06 <__fpcmp_parts_f+0xac>
 e88:	84 30       	cpi	r24, 0x04	; 4
 e8a:	21 f0       	breq	.+8      	; 0xe94 <__fpcmp_parts_f+0x3a>
 e8c:	92 30       	cpi	r25, 0x02	; 2
 e8e:	31 f4       	brne	.+12     	; 0xe9c <__fpcmp_parts_f+0x42>
 e90:	82 30       	cpi	r24, 0x02	; 2
 e92:	b9 f1       	breq	.+110    	; 0xf02 <__fpcmp_parts_f+0xa8>
 e94:	81 81       	ldd	r24, Z+1	; 0x01
 e96:	88 23       	and	r24, r24
 e98:	89 f1       	breq	.+98     	; 0xefc <__fpcmp_parts_f+0xa2>
 e9a:	2d c0       	rjmp	.+90     	; 0xef6 <__fpcmp_parts_f+0x9c>
 e9c:	11 96       	adiw	r26, 0x01	; 1
 e9e:	1c 91       	ld	r17, X
 ea0:	11 97       	sbiw	r26, 0x01	; 1
 ea2:	82 30       	cpi	r24, 0x02	; 2
 ea4:	f1 f0       	breq	.+60     	; 0xee2 <__fpcmp_parts_f+0x88>
 ea6:	81 81       	ldd	r24, Z+1	; 0x01
 ea8:	18 17       	cp	r17, r24
 eaa:	d9 f4       	brne	.+54     	; 0xee2 <__fpcmp_parts_f+0x88>
 eac:	12 96       	adiw	r26, 0x02	; 2
 eae:	2d 91       	ld	r18, X+
 eb0:	3c 91       	ld	r19, X
 eb2:	13 97       	sbiw	r26, 0x03	; 3
 eb4:	82 81       	ldd	r24, Z+2	; 0x02
 eb6:	93 81       	ldd	r25, Z+3	; 0x03
 eb8:	82 17       	cp	r24, r18
 eba:	93 07       	cpc	r25, r19
 ebc:	94 f0       	brlt	.+36     	; 0xee2 <__fpcmp_parts_f+0x88>
 ebe:	28 17       	cp	r18, r24
 ec0:	39 07       	cpc	r19, r25
 ec2:	bc f0       	brlt	.+46     	; 0xef2 <__fpcmp_parts_f+0x98>
 ec4:	14 96       	adiw	r26, 0x04	; 4
 ec6:	8d 91       	ld	r24, X+
 ec8:	9d 91       	ld	r25, X+
 eca:	0d 90       	ld	r0, X+
 ecc:	bc 91       	ld	r27, X
 ece:	a0 2d       	mov	r26, r0
 ed0:	24 81       	ldd	r18, Z+4	; 0x04
 ed2:	35 81       	ldd	r19, Z+5	; 0x05
 ed4:	46 81       	ldd	r20, Z+6	; 0x06
 ed6:	57 81       	ldd	r21, Z+7	; 0x07
 ed8:	28 17       	cp	r18, r24
 eda:	39 07       	cpc	r19, r25
 edc:	4a 07       	cpc	r20, r26
 ede:	5b 07       	cpc	r21, r27
 ee0:	18 f4       	brcc	.+6      	; 0xee8 <__fpcmp_parts_f+0x8e>
 ee2:	11 23       	and	r17, r17
 ee4:	41 f0       	breq	.+16     	; 0xef6 <__fpcmp_parts_f+0x9c>
 ee6:	0a c0       	rjmp	.+20     	; 0xefc <__fpcmp_parts_f+0xa2>
 ee8:	82 17       	cp	r24, r18
 eea:	93 07       	cpc	r25, r19
 eec:	a4 07       	cpc	r26, r20
 eee:	b5 07       	cpc	r27, r21
 ef0:	40 f4       	brcc	.+16     	; 0xf02 <__fpcmp_parts_f+0xa8>
 ef2:	11 23       	and	r17, r17
 ef4:	19 f0       	breq	.+6      	; 0xefc <__fpcmp_parts_f+0xa2>
 ef6:	61 e0       	ldi	r22, 0x01	; 1
 ef8:	70 e0       	ldi	r23, 0x00	; 0
 efa:	05 c0       	rjmp	.+10     	; 0xf06 <__fpcmp_parts_f+0xac>
 efc:	6f ef       	ldi	r22, 0xFF	; 255
 efe:	7f ef       	ldi	r23, 0xFF	; 255
 f00:	02 c0       	rjmp	.+4      	; 0xf06 <__fpcmp_parts_f+0xac>
 f02:	60 e0       	ldi	r22, 0x00	; 0
 f04:	70 e0       	ldi	r23, 0x00	; 0
 f06:	cb 01       	movw	r24, r22
 f08:	1f 91       	pop	r17
 f0a:	08 95       	ret

00000f0c <__prologue_saves__>:
 f0c:	2f 92       	push	r2
 f0e:	3f 92       	push	r3
 f10:	4f 92       	push	r4
 f12:	5f 92       	push	r5
 f14:	6f 92       	push	r6
 f16:	7f 92       	push	r7
 f18:	8f 92       	push	r8
 f1a:	9f 92       	push	r9
 f1c:	af 92       	push	r10
 f1e:	bf 92       	push	r11
 f20:	cf 92       	push	r12
 f22:	df 92       	push	r13
 f24:	ef 92       	push	r14
 f26:	ff 92       	push	r15
 f28:	0f 93       	push	r16
 f2a:	1f 93       	push	r17
 f2c:	cf 93       	push	r28
 f2e:	df 93       	push	r29
 f30:	cd b7       	in	r28, 0x3d	; 61
 f32:	de b7       	in	r29, 0x3e	; 62
 f34:	ca 1b       	sub	r28, r26
 f36:	db 0b       	sbc	r29, r27
 f38:	0f b6       	in	r0, 0x3f	; 63
 f3a:	f8 94       	cli
 f3c:	de bf       	out	0x3e, r29	; 62
 f3e:	0f be       	out	0x3f, r0	; 63
 f40:	cd bf       	out	0x3d, r28	; 61
 f42:	09 94       	ijmp

00000f44 <__epilogue_restores__>:
 f44:	2a 88       	ldd	r2, Y+18	; 0x12
 f46:	39 88       	ldd	r3, Y+17	; 0x11
 f48:	48 88       	ldd	r4, Y+16	; 0x10
 f4a:	5f 84       	ldd	r5, Y+15	; 0x0f
 f4c:	6e 84       	ldd	r6, Y+14	; 0x0e
 f4e:	7d 84       	ldd	r7, Y+13	; 0x0d
 f50:	8c 84       	ldd	r8, Y+12	; 0x0c
 f52:	9b 84       	ldd	r9, Y+11	; 0x0b
 f54:	aa 84       	ldd	r10, Y+10	; 0x0a
 f56:	b9 84       	ldd	r11, Y+9	; 0x09
 f58:	c8 84       	ldd	r12, Y+8	; 0x08
 f5a:	df 80       	ldd	r13, Y+7	; 0x07
 f5c:	ee 80       	ldd	r14, Y+6	; 0x06
 f5e:	fd 80       	ldd	r15, Y+5	; 0x05
 f60:	0c 81       	ldd	r16, Y+4	; 0x04
 f62:	1b 81       	ldd	r17, Y+3	; 0x03
 f64:	aa 81       	ldd	r26, Y+2	; 0x02
 f66:	b9 81       	ldd	r27, Y+1	; 0x01
 f68:	ce 0f       	add	r28, r30
 f6a:	d1 1d       	adc	r29, r1
 f6c:	0f b6       	in	r0, 0x3f	; 63
 f6e:	f8 94       	cli
 f70:	de bf       	out	0x3e, r29	; 62
 f72:	0f be       	out	0x3f, r0	; 63
 f74:	cd bf       	out	0x3d, r28	; 61
 f76:	ed 01       	movw	r28, r26
 f78:	08 95       	ret

00000f7a <_exit>:
 f7a:	f8 94       	cli

00000f7c <__stop_program>:
 f7c:	ff cf       	rjmp	.-2      	; 0xf7c <__stop_program>
