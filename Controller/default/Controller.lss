
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  000011fa  0000128e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000010  00800170  00800170  0000139e  2**0
                  ALLOC
  3 .debug_aranges 000001c0  00000000  00000000  0000139e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000040b  00000000  00000000  0000155e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000028d1  00000000  00000000  00001969  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000153a  00000000  00000000  0000423a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000018aa  00000000  00000000  00005774  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000350  00000000  00000000  00007020  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004ec  00000000  00000000  00007370  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ad1  00000000  00000000  0000785c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  0000832d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ef       	ldi	r30, 0xFA	; 250
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e7       	ldi	r26, 0x70	; 112
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 38       	cpi	r26, 0x80	; 128
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 c6 01 	call	0x38c	; 0x38c <main>
      8a:	0c 94 fb 08 	jmp	0x11f6	; 0x11f6 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <setupMIDI>:
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
      92:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) baudrate;
      94:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
      96:	88 e1       	ldi	r24, 0x18	; 24
      98:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
      9a:	86 e8       	ldi	r24, 0x86	; 134
      9c:	80 bd       	out	0x20, r24	; 32
}
      9e:	08 95       	ret

000000a0 <setupPins>:
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      a0:	8f ef       	ldi	r24, 0xFF	; 255
      a2:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      a4:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      a6:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      a8:	87 e0       	ldi	r24, 0x07	; 7
      aa:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
      ac:	11 ba       	out	0x11, r1	; 17
}
      ae:	08 95       	ret

000000b0 <setupAnalog>:
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
      b0:	87 e4       	ldi	r24, 0x47	; 71
      b2:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
      b4:	87 e8       	ldi	r24, 0x87	; 135
      b6:	86 b9       	out	0x06, r24	; 6
}
      b8:	08 95       	ret

000000ba <setupTimer>:
void setupTimer(){
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
      ba:	85 e0       	ldi	r24, 0x05	; 5
      bc:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
      be:	81 ea       	ldi	r24, 0xA1	; 161
      c0:	97 e0       	ldi	r25, 0x07	; 7
      c2:	9b bd       	out	0x2b, r25	; 43
      c4:	8a bd       	out	0x2a, r24	; 42
	TCNT1 = 0;
      c6:	1d bc       	out	0x2d, r1	; 45
      c8:	1c bc       	out	0x2c, r1	; 44
}
      ca:	08 95       	ret

000000cc <record>:

/***** Create Methods *****/

void record(){
      cc:	04 c0       	rjmp	.+8      	; 0xd6 <record+0xa>
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
      ce:	5f 9b       	sbis	0x0b, 7	; 11
      d0:	fe cf       	rjmp	.-4      	; 0xce <record+0x2>

	/* get and return data from buffer */
	return UDR;
      d2:	8c b1       	in	r24, 0x0c	; 12
void record(){
	 
    //PORTB = 0x01;
   //midiReceiveTest();
	while(midi_Receive() != 0){
		PORTB = midi_Receive();
      d4:	88 bb       	out	0x18, r24	; 24
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
      d6:	5f 9b       	sbis	0x0b, 7	; 11
      d8:	fe cf       	rjmp	.-4      	; 0xd6 <record+0xa>

	/* get and return data from buffer */
	return UDR;
      da:	8c b1       	in	r24, 0x0c	; 12

void record(){
	 
    //PORTB = 0x01;
   //midiReceiveTest();
	while(midi_Receive() != 0){
      dc:	88 23       	and	r24, r24
      de:	b9 f7       	brne	.-18     	; 0xce <record+0x2>
 //   			eeprom_address++;
 //   			notecount++;
 //   		}
 //   	}
 //   	stop_addr = eprom_address;
}
      e0:	08 95       	ret

000000e2 <wait>:
	midi_Transmit(MIDIoff);
}


void wait(int time)
{
      e2:	af 92       	push	r10
      e4:	bf 92       	push	r11
      e6:	cf 92       	push	r12
      e8:	df 92       	push	r13
      ea:	ef 92       	push	r14
      ec:	ff 92       	push	r15
      ee:	0f 93       	push	r16
      f0:	1f 93       	push	r17
   _delay_ms(time);
      f2:	aa 27       	eor	r26, r26
      f4:	97 fd       	sbrc	r25, 7
      f6:	a0 95       	com	r26
      f8:	ba 2f       	mov	r27, r26
      fa:	bc 01       	movw	r22, r24
      fc:	cd 01       	movw	r24, r26
      fe:	0e 94 a4 05 	call	0xb48	; 0xb48 <__floatsisf>
     102:	5b 01       	movw	r10, r22
     104:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     106:	20 e0       	ldi	r18, 0x00	; 0
     108:	30 e0       	ldi	r19, 0x00	; 0
     10a:	4a e7       	ldi	r20, 0x7A	; 122
     10c:	53 e4       	ldi	r21, 0x43	; 67
     10e:	0e 94 1a 04 	call	0x834	; 0x834 <__mulsf3>
     112:	7b 01       	movw	r14, r22
     114:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     116:	20 e0       	ldi	r18, 0x00	; 0
     118:	30 e0       	ldi	r19, 0x00	; 0
     11a:	40 e8       	ldi	r20, 0x80	; 128
     11c:	5f e3       	ldi	r21, 0x3F	; 63
     11e:	0e 94 74 05 	call	0xae8	; 0xae8 <__ltsf2>
     122:	88 23       	and	r24, r24
     124:	1c f4       	brge	.+6      	; 0x12c <wait+0x4a>
     126:	61 e0       	ldi	r22, 0x01	; 1
     128:	70 e0       	ldi	r23, 0x00	; 0
     12a:	24 c0       	rjmp	.+72     	; 0x174 <wait+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
     12c:	c8 01       	movw	r24, r16
     12e:	b7 01       	movw	r22, r14
     130:	20 e0       	ldi	r18, 0x00	; 0
     132:	3f ef       	ldi	r19, 0xFF	; 255
     134:	4f e7       	ldi	r20, 0x7F	; 127
     136:	57 e4       	ldi	r21, 0x47	; 71
     138:	0e 94 14 05 	call	0xa28	; 0xa28 <__gtsf2>
     13c:	18 16       	cp	r1, r24
     13e:	b4 f4       	brge	.+44     	; 0x16c <wait+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     140:	c6 01       	movw	r24, r12
     142:	b5 01       	movw	r22, r10
     144:	20 e0       	ldi	r18, 0x00	; 0
     146:	30 e0       	ldi	r19, 0x00	; 0
     148:	40 e2       	ldi	r20, 0x20	; 32
     14a:	51 e4       	ldi	r21, 0x41	; 65
     14c:	0e 94 1a 04 	call	0x834	; 0x834 <__mulsf3>
     150:	0e 94 44 02 	call	0x488	; 0x488 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     154:	89 e1       	ldi	r24, 0x19	; 25
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	05 c0       	rjmp	.+10     	; 0x164 <wait+0x82>
     15a:	fc 01       	movw	r30, r24
     15c:	31 97       	sbiw	r30, 0x01	; 1
     15e:	f1 f7       	brne	.-4      	; 0x15c <wait+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     160:	61 50       	subi	r22, 0x01	; 1
     162:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     164:	61 15       	cp	r22, r1
     166:	71 05       	cpc	r23, r1
     168:	c1 f7       	brne	.-16     	; 0x15a <wait+0x78>
     16a:	07 c0       	rjmp	.+14     	; 0x17a <wait+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     16c:	c8 01       	movw	r24, r16
     16e:	b7 01       	movw	r22, r14
     170:	0e 94 44 02 	call	0x488	; 0x488 <__fixunssfsi>
     174:	cb 01       	movw	r24, r22
     176:	01 97       	sbiw	r24, 0x01	; 1
     178:	f1 f7       	brne	.-4      	; 0x176 <wait+0x94>
}
     17a:	1f 91       	pop	r17
     17c:	0f 91       	pop	r16
     17e:	ff 90       	pop	r15
     180:	ef 90       	pop	r14
     182:	df 90       	pop	r13
     184:	cf 90       	pop	r12
     186:	bf 90       	pop	r11
     188:	af 90       	pop	r10
     18a:	08 95       	ret

0000018c <ledOFF>:

void ledOFF(){
	PORTB = 0x00;
     18c:	18 ba       	out	0x18, r1	; 24
}
     18e:	08 95       	ret

00000190 <timer500>:


void timer500(){
	while((TIFR & (1<<OCF1A)) == 0); // wait for timer overflow flag
     190:	08 b6       	in	r0, 0x38	; 56
     192:	04 fe       	sbrs	r0, 4
     194:	fd cf       	rjmp	.-6      	; 0x190 <timer500>
	PORTB ^= (1 << PORTB0);
     196:	88 b3       	in	r24, 0x18	; 24
     198:	91 e0       	ldi	r25, 0x01	; 1
     19a:	89 27       	eor	r24, r25
     19c:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 0;
     19e:	1d bc       	out	0x2d, r1	; 45
     1a0:	1c bc       	out	0x2c, r1	; 44
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag
     1a2:	88 b7       	in	r24, 0x38	; 56
     1a4:	80 61       	ori	r24, 0x10	; 16
     1a6:	88 bf       	out	0x38, r24	; 56
}
     1a8:	08 95       	ret

000001aa <ReadADC>:

uint16_t ReadADC(){
	//Start a single conversion
	ADCSRA |= (1 << ADSC);
     1aa:	36 9a       	sbi	0x06, 6	; 6
	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
     1ac:	34 9b       	sbis	0x06, 4	; 6
     1ae:	fe cf       	rjmp	.-4      	; 0x1ac <ReadADC+0x2>
	//clear data (conversion is complete)
	ADCSRA |= (1 << ADIF);
     1b0:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
     1b2:	24 b1       	in	r18, 0x04	; 4
     1b4:	35 b1       	in	r19, 0x05	; 5
}
     1b6:	c9 01       	movw	r24, r18
     1b8:	08 95       	ret

000001ba <analogLEDTest>:

void analogLEDTest(){
		adc_value = ReadADC();
     1ba:	0e 94 d5 00 	call	0x1aa	; 0x1aa <ReadADC>
     1be:	9c 01       	movw	r18, r24
     1c0:	90 93 7f 01 	sts	0x017F, r25
     1c4:	80 93 7e 01 	sts	0x017E, r24
		if (adc_value > 30){
     1c8:	8f 31       	cpi	r24, 0x1F	; 31
     1ca:	91 05       	cpc	r25, r1
     1cc:	28 f1       	brcs	.+74     	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB0);
     1ce:	81 e0       	ldi	r24, 0x01	; 1
     1d0:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 60){
     1d2:	2d 33       	cpi	r18, 0x3D	; 61
     1d4:	31 05       	cpc	r19, r1
     1d6:	00 f1       	brcs	.+64     	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB1);
     1d8:	82 e0       	ldi	r24, 0x02	; 2
     1da:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 90){
     1dc:	2b 35       	cpi	r18, 0x5B	; 91
     1de:	31 05       	cpc	r19, r1
     1e0:	d8 f0       	brcs	.+54     	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB2);
     1e2:	84 e0       	ldi	r24, 0x04	; 4
     1e4:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 120){
     1e6:	29 37       	cpi	r18, 0x79	; 121
     1e8:	31 05       	cpc	r19, r1
     1ea:	b0 f0       	brcs	.+44     	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB3);
     1ec:	88 e0       	ldi	r24, 0x08	; 8
     1ee:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 150){
     1f0:	27 39       	cpi	r18, 0x97	; 151
     1f2:	31 05       	cpc	r19, r1
     1f4:	88 f0       	brcs	.+34     	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB4);
     1f6:	80 e1       	ldi	r24, 0x10	; 16
     1f8:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 180){
     1fa:	25 3b       	cpi	r18, 0xB5	; 181
     1fc:	31 05       	cpc	r19, r1
     1fe:	60 f0       	brcs	.+24     	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB5);
     200:	80 e2       	ldi	r24, 0x20	; 32
     202:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 210){
     204:	23 3d       	cpi	r18, 0xD3	; 211
     206:	31 05       	cpc	r19, r1
     208:	38 f0       	brcs	.+14     	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB6);
     20a:	80 e4       	ldi	r24, 0x40	; 64
     20c:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 240){
     20e:	21 3f       	cpi	r18, 0xF1	; 241
     210:	31 05       	cpc	r19, r1
     212:	10 f0       	brcs	.+4      	; 0x218 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB7);
     214:	80 e8       	ldi	r24, 0x80	; 128
     216:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value >= 240){
     218:	20 3f       	cpi	r18, 0xF0	; 240
     21a:	31 05       	cpc	r19, r1
     21c:	10 f0       	brcs	.+4      	; 0x222 <analogLEDTest+0x68>
			PORTB = 0xFF;
     21e:	8f ef       	ldi	r24, 0xFF	; 255
     220:	88 bb       	out	0x18, r24	; 24
     222:	08 95       	ret

00000224 <modify>:
void playBack(){
	playSong();
}

void modify(){
	analogLEDTest();
     224:	0e 94 dd 00 	call	0x1ba	; 0x1ba <analogLEDTest>
}
     228:	08 95       	ret

0000022a <midi_Transmit>:
		}
	}

void midi_Transmit( unsigned char data){
	/* Wait for empty transmit buffer */
	while(! UCSRA & (1 << UDRE) );
     22a:	9b b1       	in	r25, 0x0b	; 11

	/* Put data into buffer, sends the data */
	UDR = data;
     22c:	8c b9       	out	0x0c, r24	; 12
}
     22e:	08 95       	ret

00000230 <midiTransitTest>:
		eeprom_address++;
	}
	
}
void midiTransitTest(){
	while ((UCSRA & (1 << UDRE)) == 0) {};
     230:	5d 9b       	sbis	0x0b, 5	; 11
     232:	fe cf       	rjmp	.-4      	; 0x230 <midiTransitTest>

	midi_Transmit(MIDIon);
     234:	80 91 60 00 	lds	r24, 0x0060
     238:	90 91 61 00 	lds	r25, 0x0061
     23c:	0e 94 15 01 	call	0x22a	; 0x22a <midi_Transmit>
	midi_Transmit(MIDIb1);
     240:	80 91 62 00 	lds	r24, 0x0062
     244:	90 91 63 00 	lds	r25, 0x0063
     248:	0e 94 15 01 	call	0x22a	; 0x22a <midi_Transmit>
	midi_Transmit(MIDIb2);
     24c:	80 91 64 00 	lds	r24, 0x0064
     250:	90 91 65 00 	lds	r25, 0x0065
     254:	0e 94 15 01 	call	0x22a	; 0x22a <midi_Transmit>
	midi_Transmit(MIDIoff);
     258:	80 91 66 00 	lds	r24, 0x0066
     25c:	90 91 67 00 	lds	r25, 0x0067
     260:	0e 94 15 01 	call	0x22a	; 0x22a <midi_Transmit>
}
     264:	08 95       	ret

00000266 <playSong>:
		eeprom_address += sizeof(midi_Receive());
		notecount= notecount + 1;
	}
}

void playSong(){
     266:	8f 92       	push	r8
     268:	9f 92       	push	r9
     26a:	af 92       	push	r10
     26c:	bf 92       	push	r11
     26e:	cf 92       	push	r12
     270:	df 92       	push	r13
     272:	ef 92       	push	r14
     274:	ff 92       	push	r15
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
	eeprom_address= 0x00;
     27e:	10 92 7b 01 	sts	0x017B, r1
     282:	10 92 7a 01 	sts	0x017A, r1
     286:	89 e1       	ldi	r24, 0x19	; 25
     288:	88 2e       	mov	r8, r24
     28a:	91 2c       	mov	r9, r1
     28c:	63 c0       	rjmp	.+198    	; 0x354 <playSong+0xee>
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     28e:	e1 99       	sbic	0x1c, 1	; 28
     290:	fe cf       	rjmp	.-4      	; 0x28e <playSong+0x28>
	/* Set up address register */
	EEAR = uiAddress;
     292:	3f bb       	out	0x1f, r19	; 31
     294:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     296:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     298:	8d b3       	in	r24, 0x1d	; 29
}

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
     29a:	88 bb       	out	0x18, r24	; 24
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     29c:	e1 99       	sbic	0x1c, 1	; 28
     29e:	fe cf       	rjmp	.-4      	; 0x29c <playSong+0x36>
	/* Set up address register */
	EEAR = uiAddress;
     2a0:	3f bb       	out	0x1f, r19	; 31
     2a2:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2a4:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2a6:	8d b3       	in	r24, 0x1d	; 29

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	0e 94 15 01 	call	0x22a	; 0x22a <midi_Transmit>
		eeprom_address++;
     2ae:	c0 91 7a 01 	lds	r28, 0x017A
     2b2:	d0 91 7b 01 	lds	r29, 0x017B
     2b6:	21 96       	adiw	r28, 0x01	; 1
     2b8:	d0 93 7b 01 	sts	0x017B, r29
     2bc:	c0 93 7a 01 	sts	0x017A, r28
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2c0:	e1 99       	sbic	0x1c, 1	; 28
     2c2:	fe cf       	rjmp	.-4      	; 0x2c0 <playSong+0x5a>
	/* Set up address register */
	EEAR = uiAddress;
     2c4:	df bb       	out	0x1f, r29	; 31
     2c6:	ce bb       	out	0x1e, r28	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2c8:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2ca:	6d b3       	in	r22, 0x1d	; 29
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	80 e0       	ldi	r24, 0x00	; 0
     2d0:	90 e0       	ldi	r25, 0x00	; 0
     2d2:	0e 94 56 06 	call	0xcac	; 0xcac <__floatunsisf>
     2d6:	5b 01       	movw	r10, r22
     2d8:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2da:	20 e0       	ldi	r18, 0x00	; 0
     2dc:	30 e0       	ldi	r19, 0x00	; 0
     2de:	4a e7       	ldi	r20, 0x7A	; 122
     2e0:	53 e4       	ldi	r21, 0x43	; 67
     2e2:	0e 94 1a 04 	call	0x834	; 0x834 <__mulsf3>
     2e6:	7b 01       	movw	r14, r22
     2e8:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	40 e8       	ldi	r20, 0x80	; 128
     2f0:	5f e3       	ldi	r21, 0x3F	; 63
     2f2:	0e 94 74 05 	call	0xae8	; 0xae8 <__ltsf2>
     2f6:	88 23       	and	r24, r24
     2f8:	1c f4       	brge	.+6      	; 0x300 <playSong+0x9a>
     2fa:	61 e0       	ldi	r22, 0x01	; 1
     2fc:	70 e0       	ldi	r23, 0x00	; 0
     2fe:	22 c0       	rjmp	.+68     	; 0x344 <playSong+0xde>
		__ticks = 1;
	else if (__tmp > 65535)
     300:	c8 01       	movw	r24, r16
     302:	b7 01       	movw	r22, r14
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	3f ef       	ldi	r19, 0xFF	; 255
     308:	4f e7       	ldi	r20, 0x7F	; 127
     30a:	57 e4       	ldi	r21, 0x47	; 71
     30c:	0e 94 14 05 	call	0xa28	; 0xa28 <__gtsf2>
     310:	18 16       	cp	r1, r24
     312:	a4 f4       	brge	.+40     	; 0x33c <playSong+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     314:	c6 01       	movw	r24, r12
     316:	b5 01       	movw	r22, r10
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	40 e2       	ldi	r20, 0x20	; 32
     31e:	51 e4       	ldi	r21, 0x41	; 65
     320:	0e 94 1a 04 	call	0x834	; 0x834 <__mulsf3>
     324:	0e 94 44 02 	call	0x488	; 0x488 <__fixunssfsi>
     328:	05 c0       	rjmp	.+10     	; 0x334 <playSong+0xce>
     32a:	c4 01       	movw	r24, r8
     32c:	01 97       	sbiw	r24, 0x01	; 1
     32e:	f1 f7       	brne	.-4      	; 0x32c <playSong+0xc6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     330:	61 50       	subi	r22, 0x01	; 1
     332:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     334:	61 15       	cp	r22, r1
     336:	71 05       	cpc	r23, r1
     338:	c1 f7       	brne	.-16     	; 0x32a <playSong+0xc4>
     33a:	07 c0       	rjmp	.+14     	; 0x34a <playSong+0xe4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     33c:	c8 01       	movw	r24, r16
     33e:	b7 01       	movw	r22, r14
     340:	0e 94 44 02 	call	0x488	; 0x488 <__fixunssfsi>
     344:	cb 01       	movw	r24, r22
     346:	01 97       	sbiw	r24, 0x01	; 1
     348:	f1 f7       	brne	.-4      	; 0x346 <playSong+0xe0>
		eeprom_address++;
     34a:	21 96       	adiw	r28, 0x01	; 1
     34c:	d0 93 7b 01 	sts	0x017B, r29
     350:	c0 93 7a 01 	sts	0x017A, r28
	}
}

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
     354:	20 91 7a 01 	lds	r18, 0x017A
     358:	30 91 7b 01 	lds	r19, 0x017B
     35c:	80 91 7c 01 	lds	r24, 0x017C
     360:	90 91 7d 01 	lds	r25, 0x017D
     364:	28 17       	cp	r18, r24
     366:	39 07       	cpc	r19, r25
     368:	08 f4       	brcc	.+2      	; 0x36c <playSong+0x106>
     36a:	91 cf       	rjmp	.-222    	; 0x28e <playSong+0x28>
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
		eeprom_address++;
	}
	
}
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	1f 91       	pop	r17
     372:	0f 91       	pop	r16
     374:	ff 90       	pop	r15
     376:	ef 90       	pop	r14
     378:	df 90       	pop	r13
     37a:	cf 90       	pop	r12
     37c:	bf 90       	pop	r11
     37e:	af 90       	pop	r10
     380:	9f 90       	pop	r9
     382:	8f 90       	pop	r8
     384:	08 95       	ret

00000386 <playBack>:
 //   	}
 //   	stop_addr = eprom_address;
}

void playBack(){
	playSong();
     386:	0e 94 33 01 	call	0x266	; 0x266 <playSong>
}
     38a:	08 95       	ret

0000038c <main>:
	UBRRL = (unsigned char) baudrate;
	UCSRB = (1 << TXEN) | (1 << RXEN);
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
}
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
     38c:	8f ef       	ldi	r24, 0xFF	; 255
     38e:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
     390:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
     392:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
     394:	27 e0       	ldi	r18, 0x07	; 7
     396:	2b bb       	out	0x1b, r18	; 27
	DDRD = 0x00;
     398:	11 ba       	out	0x11, r1	; 17
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
}
void setupTimer(){
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
     39a:	85 e0       	ldi	r24, 0x05	; 5
     39c:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
     39e:	81 ea       	ldi	r24, 0xA1	; 161
     3a0:	97 e0       	ldi	r25, 0x07	; 7
     3a2:	9b bd       	out	0x2b, r25	; 43
     3a4:	8a bd       	out	0x2a, r24	; 42
	TCNT1 = 0;
     3a6:	1d bc       	out	0x2d, r1	; 45
     3a8:	1c bc       	out	0x2c, r1	; 44
	PORTB = 0x00; //Turns all leds off
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
	DDRD = 0x00;
}
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
     3aa:	87 e4       	ldi	r24, 0x47	; 71
     3ac:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
     3ae:	87 e8       	ldi	r24, 0x87	; 135
     3b0:	86 b9       	out	0x06, r24	; 6
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
     3b2:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) baudrate;
     3b4:	29 b9       	out	0x09, r18	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
     3b6:	88 e1       	ldi	r24, 0x18	; 24
     3b8:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
     3ba:	86 e8       	ldi	r24, 0x86	; 134
     3bc:	80 bd       	out	0x20, r24	; 32
   setupTimer();
   setupAnalog();
   setupMIDI(BUAD_PRESCALE);

    while(1){
		uint8_t rec = PINA & 0x04;
     3be:	89 b3       	in	r24, 0x19	; 25
		uint8_t play = PINA & 0x02;
     3c0:	99 b3       	in	r25, 0x19	; 25
     3c2:	92 70       	andi	r25, 0x02	; 2
		uint8_t mod = PINA & 0x01;
     3c4:	29 b3       	in	r18, 0x19	; 25
	
		if(rec && !play){
     3c6:	82 ff       	sbrs	r24, 2
     3c8:	05 c0       	rjmp	.+10     	; 0x3d4 <main+0x48>
     3ca:	99 23       	and	r25, r25
     3cc:	61 f4       	brne	.+24     	; 0x3e6 <main+0x5a>
			record();
     3ce:	0e 94 66 00 	call	0xcc	; 0xcc <record>
     3d2:	09 c0       	rjmp	.+18     	; 0x3e6 <main+0x5a>
		}
		if(play && !rec){
     3d4:	99 23       	and	r25, r25
     3d6:	39 f0       	breq	.+14     	; 0x3e6 <main+0x5a>
			if (mod){ // Modify Mode
     3d8:	20 ff       	sbrs	r18, 0
     3da:	03 c0       	rjmp	.+6      	; 0x3e2 <main+0x56>
void playBack(){
	playSong();
}

void modify(){
	analogLEDTest();
     3dc:	0e 94 dd 00 	call	0x1ba	; 0x1ba <analogLEDTest>
     3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <main+0x5a>
 //   	}
 //   	stop_addr = eprom_address;
}

void playBack(){
	playSong();
     3e2:	0e 94 33 01 	call	0x266	; 0x266 <playSong>
{
   _delay_ms(time);
}

void ledOFF(){
	PORTB = 0x00;
     3e6:	18 ba       	out	0x18, r1	; 24
     3e8:	ea cf       	rjmp	.-44     	; 0x3be <main+0x32>

000003ea <midi_Receive>:
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     3ea:	5f 9b       	sbis	0x0b, 7	; 11
     3ec:	fe cf       	rjmp	.-4      	; 0x3ea <midi_Receive>

	/* get and return data from buffer */
	return UDR;
     3ee:	8c b1       	in	r24, 0x0c	; 12
}
     3f0:	08 95       	ret

000003f2 <midi_Flush>:

/* flushs the buffer of the midi */
void midi_Flush(void){ 
     3f2:	01 c0       	rjmp	.+2      	; 0x3f6 <midi_Flush+0x4>
	unsigned char dummy;
	while (UCSRA & (1 << RXC) ) dummy = UDR;
     3f4:	8c b1       	in	r24, 0x0c	; 12
     3f6:	5f 99       	sbic	0x0b, 7	; 11
     3f8:	fd cf       	rjmp	.-6      	; 0x3f4 <midi_Flush+0x2>
}
     3fa:	08 95       	ret

000003fc <midi_ReadUCSRC>:

unsigned char midi_ReadUCSRC(void){
	unsigned char ucsrc;
	/* read UCSRC */
	//note may need cli() to disable interrupts
	ucsrc = UBRRH;
     3fc:	80 b5       	in	r24, 0x20	; 32
	ucsrc = UCSRC;
     3fe:	80 b5       	in	r24, 0x20	; 32
	return ucsrc;
}
     400:	08 95       	ret

00000402 <TIM16_ReadTCNT1>:

unsigned char TIM16_ReadTCNT1(void){
	unsigned char sreg;
	unsigned char i;
	/* save gloval interrupt flag */
	sreg = SREG;
     402:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     404:	f8 94       	cli
	/* read TCNT1 into i */
	i = TCNT1;
     406:	8c b5       	in	r24, 0x2c	; 44
     408:	9d b5       	in	r25, 0x2d	; 45
	/* restore global interrupt flag */
	SREG = sreg;
     40a:	2f bf       	out	0x3f, r18	; 63
	return i;
}
     40c:	08 95       	ret

0000040e <TIM16_WriteTCNT1>:

void TIM16_WriteTCNT1 (unsigned int i){
	unsigned char sreg;
	/* save global interrupt flag */
	sreg = SREG;
     40e:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     410:	f8 94       	cli
	/* set tcnt1 to i */
	TCNT1 = i;
     412:	9d bd       	out	0x2d, r25	; 45
     414:	8c bd       	out	0x2c, r24	; 44
	/* restore global interrupt flag */
	SREG = sreg;
     416:	2f bf       	out	0x3f, r18	; 63
}
     418:	08 95       	ret

0000041a <EEPROM_write>:

void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
	/* wait for completion of previous write */
	while (EECR & (1 <<EEWE));
     41a:	e1 99       	sbic	0x1c, 1	; 28
     41c:	fe cf       	rjmp	.-4      	; 0x41a <EEPROM_write>

	/* Set up address and data registers */
	EEAR = uiAddress;
     41e:	9f bb       	out	0x1f, r25	; 31
     420:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
     422:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1 << EEMWE);
     424:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeporm write by setting EEWE */
	EECR |= (1 << EEWE);
     426:	e1 9a       	sbi	0x1c, 1	; 28
}
     428:	08 95       	ret

0000042a <writeSong>:
void modify(){
	analogLEDTest();
}

void writeSong(){
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag
     42a:	88 b7       	in	r24, 0x38	; 56
     42c:	80 61       	ori	r24, 0x10	; 16
     42e:	88 bf       	out	0x38, r24	; 56
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     430:	5f 9b       	sbis	0x0b, 7	; 11
     432:	fe cf       	rjmp	.-4      	; 0x430 <writeSong+0x6>

	/* get and return data from buffer */
	return UDR;
     434:	8c b1       	in	r24, 0x0c	; 12

void writeSong(){
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag


	if((midi_Receive()) != 0 ) {
     436:	88 23       	and	r24, r24
     438:	f9 f0       	breq	.+62     	; 0x478 <writeSong+0x4e>
		EEPROM_write(eeprom_address, midi_Receive());
     43a:	80 91 7a 01 	lds	r24, 0x017A
     43e:	90 91 7b 01 	lds	r25, 0x017B
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     442:	5f 9b       	sbis	0x0b, 7	; 11
     444:	fe cf       	rjmp	.-4      	; 0x442 <writeSong+0x18>

	/* get and return data from buffer */
	return UDR;
     446:	6c b1       	in	r22, 0x0c	; 12
void writeSong(){
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag


	if((midi_Receive()) != 0 ) {
		EEPROM_write(eeprom_address, midi_Receive());
     448:	0e 94 0d 02 	call	0x41a	; 0x41a <EEPROM_write>
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     44c:	5f 9b       	sbis	0x0b, 7	; 11
     44e:	fe cf       	rjmp	.-4      	; 0x44c <writeSong+0x22>

	/* get and return data from buffer */
	return UDR;
     450:	8c b1       	in	r24, 0x0c	; 12
	TIFR |= (1<< OCF1A); //reset timer1 overflow flag


	if((midi_Receive()) != 0 ) {
		EEPROM_write(eeprom_address, midi_Receive());
		PORTB = midi_Receive();	
     452:	88 bb       	out	0x18, r24	; 24
		eeprom_address += sizeof(midi_Receive());
     454:	80 91 7a 01 	lds	r24, 0x017A
     458:	90 91 7b 01 	lds	r25, 0x017B
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	90 93 7b 01 	sts	0x017B, r25
     462:	80 93 7a 01 	sts	0x017A, r24
		notecount= notecount + 1;
     466:	80 91 76 01 	lds	r24, 0x0176
     46a:	90 91 77 01 	lds	r25, 0x0177
     46e:	01 96       	adiw	r24, 0x01	; 1
     470:	90 93 77 01 	sts	0x0177, r25
     474:	80 93 76 01 	sts	0x0176, r24
     478:	08 95       	ret

0000047a <EEPROM_read>:
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     47a:	e1 99       	sbic	0x1c, 1	; 28
     47c:	fe cf       	rjmp	.-4      	; 0x47a <EEPROM_read>
	/* Set up address register */
	EEAR = uiAddress;
     47e:	9f bb       	out	0x1f, r25	; 31
     480:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     482:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     484:	8d b3       	in	r24, 0x1d	; 29
}
     486:	08 95       	ret

00000488 <__fixunssfsi>:
     488:	ef 92       	push	r14
     48a:	ff 92       	push	r15
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	7b 01       	movw	r14, r22
     492:	8c 01       	movw	r16, r24
     494:	20 e0       	ldi	r18, 0x00	; 0
     496:	30 e0       	ldi	r19, 0x00	; 0
     498:	40 e0       	ldi	r20, 0x00	; 0
     49a:	5f e4       	ldi	r21, 0x4F	; 79
     49c:	0e 94 44 05 	call	0xa88	; 0xa88 <__gesf2>
     4a0:	88 23       	and	r24, r24
     4a2:	8c f0       	brlt	.+34     	; 0x4c6 <__fixunssfsi+0x3e>
     4a4:	c8 01       	movw	r24, r16
     4a6:	b7 01       	movw	r22, r14
     4a8:	20 e0       	ldi	r18, 0x00	; 0
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	40 e0       	ldi	r20, 0x00	; 0
     4ae:	5f e4       	ldi	r21, 0x4F	; 79
     4b0:	0e 94 bc 03 	call	0x778	; 0x778 <__subsf3>
     4b4:	0e 94 02 06 	call	0xc04	; 0xc04 <__fixsfsi>
     4b8:	9b 01       	movw	r18, r22
     4ba:	ac 01       	movw	r20, r24
     4bc:	20 50       	subi	r18, 0x00	; 0
     4be:	30 40       	sbci	r19, 0x00	; 0
     4c0:	40 40       	sbci	r20, 0x00	; 0
     4c2:	50 48       	sbci	r21, 0x80	; 128
     4c4:	06 c0       	rjmp	.+12     	; 0x4d2 <__fixunssfsi+0x4a>
     4c6:	c8 01       	movw	r24, r16
     4c8:	b7 01       	movw	r22, r14
     4ca:	0e 94 02 06 	call	0xc04	; 0xc04 <__fixsfsi>
     4ce:	9b 01       	movw	r18, r22
     4d0:	ac 01       	movw	r20, r24
     4d2:	b9 01       	movw	r22, r18
     4d4:	ca 01       	movw	r24, r20
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	ff 90       	pop	r15
     4dc:	ef 90       	pop	r14
     4de:	08 95       	ret

000004e0 <_fpadd_parts>:
     4e0:	a0 e0       	ldi	r26, 0x00	; 0
     4e2:	b0 e0       	ldi	r27, 0x00	; 0
     4e4:	e6 e7       	ldi	r30, 0x76	; 118
     4e6:	f2 e0       	ldi	r31, 0x02	; 2
     4e8:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__prologue_saves__>
     4ec:	dc 01       	movw	r26, r24
     4ee:	2b 01       	movw	r4, r22
     4f0:	fa 01       	movw	r30, r20
     4f2:	9c 91       	ld	r25, X
     4f4:	92 30       	cpi	r25, 0x02	; 2
     4f6:	08 f4       	brcc	.+2      	; 0x4fa <_fpadd_parts+0x1a>
     4f8:	39 c1       	rjmp	.+626    	; 0x76c <_fpadd_parts+0x28c>
     4fa:	eb 01       	movw	r28, r22
     4fc:	88 81       	ld	r24, Y
     4fe:	82 30       	cpi	r24, 0x02	; 2
     500:	08 f4       	brcc	.+2      	; 0x504 <_fpadd_parts+0x24>
     502:	33 c1       	rjmp	.+614    	; 0x76a <_fpadd_parts+0x28a>
     504:	94 30       	cpi	r25, 0x04	; 4
     506:	69 f4       	brne	.+26     	; 0x522 <_fpadd_parts+0x42>
     508:	84 30       	cpi	r24, 0x04	; 4
     50a:	09 f0       	breq	.+2      	; 0x50e <_fpadd_parts+0x2e>
     50c:	2f c1       	rjmp	.+606    	; 0x76c <_fpadd_parts+0x28c>
     50e:	11 96       	adiw	r26, 0x01	; 1
     510:	9c 91       	ld	r25, X
     512:	11 97       	sbiw	r26, 0x01	; 1
     514:	89 81       	ldd	r24, Y+1	; 0x01
     516:	98 17       	cp	r25, r24
     518:	09 f4       	brne	.+2      	; 0x51c <_fpadd_parts+0x3c>
     51a:	28 c1       	rjmp	.+592    	; 0x76c <_fpadd_parts+0x28c>
     51c:	a8 e6       	ldi	r26, 0x68	; 104
     51e:	b0 e0       	ldi	r27, 0x00	; 0
     520:	25 c1       	rjmp	.+586    	; 0x76c <_fpadd_parts+0x28c>
     522:	84 30       	cpi	r24, 0x04	; 4
     524:	09 f4       	brne	.+2      	; 0x528 <_fpadd_parts+0x48>
     526:	21 c1       	rjmp	.+578    	; 0x76a <_fpadd_parts+0x28a>
     528:	82 30       	cpi	r24, 0x02	; 2
     52a:	a9 f4       	brne	.+42     	; 0x556 <_fpadd_parts+0x76>
     52c:	92 30       	cpi	r25, 0x02	; 2
     52e:	09 f0       	breq	.+2      	; 0x532 <_fpadd_parts+0x52>
     530:	1d c1       	rjmp	.+570    	; 0x76c <_fpadd_parts+0x28c>
     532:	9a 01       	movw	r18, r20
     534:	ad 01       	movw	r20, r26
     536:	88 e0       	ldi	r24, 0x08	; 8
     538:	ea 01       	movw	r28, r20
     53a:	09 90       	ld	r0, Y+
     53c:	ae 01       	movw	r20, r28
     53e:	e9 01       	movw	r28, r18
     540:	09 92       	st	Y+, r0
     542:	9e 01       	movw	r18, r28
     544:	81 50       	subi	r24, 0x01	; 1
     546:	c1 f7       	brne	.-16     	; 0x538 <_fpadd_parts+0x58>
     548:	e2 01       	movw	r28, r4
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	11 96       	adiw	r26, 0x01	; 1
     54e:	9c 91       	ld	r25, X
     550:	89 23       	and	r24, r25
     552:	81 83       	std	Z+1, r24	; 0x01
     554:	08 c1       	rjmp	.+528    	; 0x766 <_fpadd_parts+0x286>
     556:	92 30       	cpi	r25, 0x02	; 2
     558:	09 f4       	brne	.+2      	; 0x55c <_fpadd_parts+0x7c>
     55a:	07 c1       	rjmp	.+526    	; 0x76a <_fpadd_parts+0x28a>
     55c:	12 96       	adiw	r26, 0x02	; 2
     55e:	2d 90       	ld	r2, X+
     560:	3c 90       	ld	r3, X
     562:	13 97       	sbiw	r26, 0x03	; 3
     564:	eb 01       	movw	r28, r22
     566:	8a 81       	ldd	r24, Y+2	; 0x02
     568:	9b 81       	ldd	r25, Y+3	; 0x03
     56a:	14 96       	adiw	r26, 0x04	; 4
     56c:	ad 90       	ld	r10, X+
     56e:	bd 90       	ld	r11, X+
     570:	cd 90       	ld	r12, X+
     572:	dc 90       	ld	r13, X
     574:	17 97       	sbiw	r26, 0x07	; 7
     576:	ec 80       	ldd	r14, Y+4	; 0x04
     578:	fd 80       	ldd	r15, Y+5	; 0x05
     57a:	0e 81       	ldd	r16, Y+6	; 0x06
     57c:	1f 81       	ldd	r17, Y+7	; 0x07
     57e:	91 01       	movw	r18, r2
     580:	28 1b       	sub	r18, r24
     582:	39 0b       	sbc	r19, r25
     584:	b9 01       	movw	r22, r18
     586:	37 ff       	sbrs	r19, 7
     588:	04 c0       	rjmp	.+8      	; 0x592 <_fpadd_parts+0xb2>
     58a:	66 27       	eor	r22, r22
     58c:	77 27       	eor	r23, r23
     58e:	62 1b       	sub	r22, r18
     590:	73 0b       	sbc	r23, r19
     592:	60 32       	cpi	r22, 0x20	; 32
     594:	71 05       	cpc	r23, r1
     596:	0c f0       	brlt	.+2      	; 0x59a <_fpadd_parts+0xba>
     598:	61 c0       	rjmp	.+194    	; 0x65c <_fpadd_parts+0x17c>
     59a:	12 16       	cp	r1, r18
     59c:	13 06       	cpc	r1, r19
     59e:	6c f5       	brge	.+90     	; 0x5fa <_fpadd_parts+0x11a>
     5a0:	37 01       	movw	r6, r14
     5a2:	48 01       	movw	r8, r16
     5a4:	06 2e       	mov	r0, r22
     5a6:	04 c0       	rjmp	.+8      	; 0x5b0 <_fpadd_parts+0xd0>
     5a8:	96 94       	lsr	r9
     5aa:	87 94       	ror	r8
     5ac:	77 94       	ror	r7
     5ae:	67 94       	ror	r6
     5b0:	0a 94       	dec	r0
     5b2:	d2 f7       	brpl	.-12     	; 0x5a8 <_fpadd_parts+0xc8>
     5b4:	21 e0       	ldi	r18, 0x01	; 1
     5b6:	30 e0       	ldi	r19, 0x00	; 0
     5b8:	40 e0       	ldi	r20, 0x00	; 0
     5ba:	50 e0       	ldi	r21, 0x00	; 0
     5bc:	04 c0       	rjmp	.+8      	; 0x5c6 <_fpadd_parts+0xe6>
     5be:	22 0f       	add	r18, r18
     5c0:	33 1f       	adc	r19, r19
     5c2:	44 1f       	adc	r20, r20
     5c4:	55 1f       	adc	r21, r21
     5c6:	6a 95       	dec	r22
     5c8:	d2 f7       	brpl	.-12     	; 0x5be <_fpadd_parts+0xde>
     5ca:	21 50       	subi	r18, 0x01	; 1
     5cc:	30 40       	sbci	r19, 0x00	; 0
     5ce:	40 40       	sbci	r20, 0x00	; 0
     5d0:	50 40       	sbci	r21, 0x00	; 0
     5d2:	2e 21       	and	r18, r14
     5d4:	3f 21       	and	r19, r15
     5d6:	40 23       	and	r20, r16
     5d8:	51 23       	and	r21, r17
     5da:	21 15       	cp	r18, r1
     5dc:	31 05       	cpc	r19, r1
     5de:	41 05       	cpc	r20, r1
     5e0:	51 05       	cpc	r21, r1
     5e2:	21 f0       	breq	.+8      	; 0x5ec <_fpadd_parts+0x10c>
     5e4:	21 e0       	ldi	r18, 0x01	; 1
     5e6:	30 e0       	ldi	r19, 0x00	; 0
     5e8:	40 e0       	ldi	r20, 0x00	; 0
     5ea:	50 e0       	ldi	r21, 0x00	; 0
     5ec:	79 01       	movw	r14, r18
     5ee:	8a 01       	movw	r16, r20
     5f0:	e6 28       	or	r14, r6
     5f2:	f7 28       	or	r15, r7
     5f4:	08 29       	or	r16, r8
     5f6:	19 29       	or	r17, r9
     5f8:	3c c0       	rjmp	.+120    	; 0x672 <_fpadd_parts+0x192>
     5fa:	23 2b       	or	r18, r19
     5fc:	d1 f1       	breq	.+116    	; 0x672 <_fpadd_parts+0x192>
     5fe:	26 0e       	add	r2, r22
     600:	37 1e       	adc	r3, r23
     602:	35 01       	movw	r6, r10
     604:	46 01       	movw	r8, r12
     606:	06 2e       	mov	r0, r22
     608:	04 c0       	rjmp	.+8      	; 0x612 <_fpadd_parts+0x132>
     60a:	96 94       	lsr	r9
     60c:	87 94       	ror	r8
     60e:	77 94       	ror	r7
     610:	67 94       	ror	r6
     612:	0a 94       	dec	r0
     614:	d2 f7       	brpl	.-12     	; 0x60a <_fpadd_parts+0x12a>
     616:	21 e0       	ldi	r18, 0x01	; 1
     618:	30 e0       	ldi	r19, 0x00	; 0
     61a:	40 e0       	ldi	r20, 0x00	; 0
     61c:	50 e0       	ldi	r21, 0x00	; 0
     61e:	04 c0       	rjmp	.+8      	; 0x628 <_fpadd_parts+0x148>
     620:	22 0f       	add	r18, r18
     622:	33 1f       	adc	r19, r19
     624:	44 1f       	adc	r20, r20
     626:	55 1f       	adc	r21, r21
     628:	6a 95       	dec	r22
     62a:	d2 f7       	brpl	.-12     	; 0x620 <_fpadd_parts+0x140>
     62c:	21 50       	subi	r18, 0x01	; 1
     62e:	30 40       	sbci	r19, 0x00	; 0
     630:	40 40       	sbci	r20, 0x00	; 0
     632:	50 40       	sbci	r21, 0x00	; 0
     634:	2a 21       	and	r18, r10
     636:	3b 21       	and	r19, r11
     638:	4c 21       	and	r20, r12
     63a:	5d 21       	and	r21, r13
     63c:	21 15       	cp	r18, r1
     63e:	31 05       	cpc	r19, r1
     640:	41 05       	cpc	r20, r1
     642:	51 05       	cpc	r21, r1
     644:	21 f0       	breq	.+8      	; 0x64e <_fpadd_parts+0x16e>
     646:	21 e0       	ldi	r18, 0x01	; 1
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	40 e0       	ldi	r20, 0x00	; 0
     64c:	50 e0       	ldi	r21, 0x00	; 0
     64e:	59 01       	movw	r10, r18
     650:	6a 01       	movw	r12, r20
     652:	a6 28       	or	r10, r6
     654:	b7 28       	or	r11, r7
     656:	c8 28       	or	r12, r8
     658:	d9 28       	or	r13, r9
     65a:	0b c0       	rjmp	.+22     	; 0x672 <_fpadd_parts+0x192>
     65c:	82 15       	cp	r24, r2
     65e:	93 05       	cpc	r25, r3
     660:	2c f0       	brlt	.+10     	; 0x66c <_fpadd_parts+0x18c>
     662:	1c 01       	movw	r2, r24
     664:	aa 24       	eor	r10, r10
     666:	bb 24       	eor	r11, r11
     668:	65 01       	movw	r12, r10
     66a:	03 c0       	rjmp	.+6      	; 0x672 <_fpadd_parts+0x192>
     66c:	ee 24       	eor	r14, r14
     66e:	ff 24       	eor	r15, r15
     670:	87 01       	movw	r16, r14
     672:	11 96       	adiw	r26, 0x01	; 1
     674:	9c 91       	ld	r25, X
     676:	d2 01       	movw	r26, r4
     678:	11 96       	adiw	r26, 0x01	; 1
     67a:	8c 91       	ld	r24, X
     67c:	98 17       	cp	r25, r24
     67e:	09 f4       	brne	.+2      	; 0x682 <_fpadd_parts+0x1a2>
     680:	45 c0       	rjmp	.+138    	; 0x70c <_fpadd_parts+0x22c>
     682:	99 23       	and	r25, r25
     684:	39 f0       	breq	.+14     	; 0x694 <_fpadd_parts+0x1b4>
     686:	a8 01       	movw	r20, r16
     688:	97 01       	movw	r18, r14
     68a:	2a 19       	sub	r18, r10
     68c:	3b 09       	sbc	r19, r11
     68e:	4c 09       	sbc	r20, r12
     690:	5d 09       	sbc	r21, r13
     692:	06 c0       	rjmp	.+12     	; 0x6a0 <_fpadd_parts+0x1c0>
     694:	a6 01       	movw	r20, r12
     696:	95 01       	movw	r18, r10
     698:	2e 19       	sub	r18, r14
     69a:	3f 09       	sbc	r19, r15
     69c:	40 0b       	sbc	r20, r16
     69e:	51 0b       	sbc	r21, r17
     6a0:	57 fd       	sbrc	r21, 7
     6a2:	08 c0       	rjmp	.+16     	; 0x6b4 <_fpadd_parts+0x1d4>
     6a4:	11 82       	std	Z+1, r1	; 0x01
     6a6:	33 82       	std	Z+3, r3	; 0x03
     6a8:	22 82       	std	Z+2, r2	; 0x02
     6aa:	24 83       	std	Z+4, r18	; 0x04
     6ac:	35 83       	std	Z+5, r19	; 0x05
     6ae:	46 83       	std	Z+6, r20	; 0x06
     6b0:	57 83       	std	Z+7, r21	; 0x07
     6b2:	1d c0       	rjmp	.+58     	; 0x6ee <_fpadd_parts+0x20e>
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	81 83       	std	Z+1, r24	; 0x01
     6b8:	33 82       	std	Z+3, r3	; 0x03
     6ba:	22 82       	std	Z+2, r2	; 0x02
     6bc:	88 27       	eor	r24, r24
     6be:	99 27       	eor	r25, r25
     6c0:	dc 01       	movw	r26, r24
     6c2:	82 1b       	sub	r24, r18
     6c4:	93 0b       	sbc	r25, r19
     6c6:	a4 0b       	sbc	r26, r20
     6c8:	b5 0b       	sbc	r27, r21
     6ca:	84 83       	std	Z+4, r24	; 0x04
     6cc:	95 83       	std	Z+5, r25	; 0x05
     6ce:	a6 83       	std	Z+6, r26	; 0x06
     6d0:	b7 83       	std	Z+7, r27	; 0x07
     6d2:	0d c0       	rjmp	.+26     	; 0x6ee <_fpadd_parts+0x20e>
     6d4:	22 0f       	add	r18, r18
     6d6:	33 1f       	adc	r19, r19
     6d8:	44 1f       	adc	r20, r20
     6da:	55 1f       	adc	r21, r21
     6dc:	24 83       	std	Z+4, r18	; 0x04
     6de:	35 83       	std	Z+5, r19	; 0x05
     6e0:	46 83       	std	Z+6, r20	; 0x06
     6e2:	57 83       	std	Z+7, r21	; 0x07
     6e4:	82 81       	ldd	r24, Z+2	; 0x02
     6e6:	93 81       	ldd	r25, Z+3	; 0x03
     6e8:	01 97       	sbiw	r24, 0x01	; 1
     6ea:	93 83       	std	Z+3, r25	; 0x03
     6ec:	82 83       	std	Z+2, r24	; 0x02
     6ee:	24 81       	ldd	r18, Z+4	; 0x04
     6f0:	35 81       	ldd	r19, Z+5	; 0x05
     6f2:	46 81       	ldd	r20, Z+6	; 0x06
     6f4:	57 81       	ldd	r21, Z+7	; 0x07
     6f6:	da 01       	movw	r26, r20
     6f8:	c9 01       	movw	r24, r18
     6fa:	01 97       	sbiw	r24, 0x01	; 1
     6fc:	a1 09       	sbc	r26, r1
     6fe:	b1 09       	sbc	r27, r1
     700:	8f 5f       	subi	r24, 0xFF	; 255
     702:	9f 4f       	sbci	r25, 0xFF	; 255
     704:	af 4f       	sbci	r26, 0xFF	; 255
     706:	bf 43       	sbci	r27, 0x3F	; 63
     708:	28 f3       	brcs	.-54     	; 0x6d4 <_fpadd_parts+0x1f4>
     70a:	0b c0       	rjmp	.+22     	; 0x722 <_fpadd_parts+0x242>
     70c:	91 83       	std	Z+1, r25	; 0x01
     70e:	33 82       	std	Z+3, r3	; 0x03
     710:	22 82       	std	Z+2, r2	; 0x02
     712:	ea 0c       	add	r14, r10
     714:	fb 1c       	adc	r15, r11
     716:	0c 1d       	adc	r16, r12
     718:	1d 1d       	adc	r17, r13
     71a:	e4 82       	std	Z+4, r14	; 0x04
     71c:	f5 82       	std	Z+5, r15	; 0x05
     71e:	06 83       	std	Z+6, r16	; 0x06
     720:	17 83       	std	Z+7, r17	; 0x07
     722:	83 e0       	ldi	r24, 0x03	; 3
     724:	80 83       	st	Z, r24
     726:	24 81       	ldd	r18, Z+4	; 0x04
     728:	35 81       	ldd	r19, Z+5	; 0x05
     72a:	46 81       	ldd	r20, Z+6	; 0x06
     72c:	57 81       	ldd	r21, Z+7	; 0x07
     72e:	57 ff       	sbrs	r21, 7
     730:	1a c0       	rjmp	.+52     	; 0x766 <_fpadd_parts+0x286>
     732:	c9 01       	movw	r24, r18
     734:	aa 27       	eor	r26, r26
     736:	97 fd       	sbrc	r25, 7
     738:	a0 95       	com	r26
     73a:	ba 2f       	mov	r27, r26
     73c:	81 70       	andi	r24, 0x01	; 1
     73e:	90 70       	andi	r25, 0x00	; 0
     740:	a0 70       	andi	r26, 0x00	; 0
     742:	b0 70       	andi	r27, 0x00	; 0
     744:	56 95       	lsr	r21
     746:	47 95       	ror	r20
     748:	37 95       	ror	r19
     74a:	27 95       	ror	r18
     74c:	82 2b       	or	r24, r18
     74e:	93 2b       	or	r25, r19
     750:	a4 2b       	or	r26, r20
     752:	b5 2b       	or	r27, r21
     754:	84 83       	std	Z+4, r24	; 0x04
     756:	95 83       	std	Z+5, r25	; 0x05
     758:	a6 83       	std	Z+6, r26	; 0x06
     75a:	b7 83       	std	Z+7, r27	; 0x07
     75c:	82 81       	ldd	r24, Z+2	; 0x02
     75e:	93 81       	ldd	r25, Z+3	; 0x03
     760:	01 96       	adiw	r24, 0x01	; 1
     762:	93 83       	std	Z+3, r25	; 0x03
     764:	82 83       	std	Z+2, r24	; 0x02
     766:	df 01       	movw	r26, r30
     768:	01 c0       	rjmp	.+2      	; 0x76c <_fpadd_parts+0x28c>
     76a:	d2 01       	movw	r26, r4
     76c:	cd 01       	movw	r24, r26
     76e:	cd b7       	in	r28, 0x3d	; 61
     770:	de b7       	in	r29, 0x3e	; 62
     772:	e2 e1       	ldi	r30, 0x12	; 18
     774:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__epilogue_restores__>

00000778 <__subsf3>:
     778:	a0 e2       	ldi	r26, 0x20	; 32
     77a:	b0 e0       	ldi	r27, 0x00	; 0
     77c:	e2 ec       	ldi	r30, 0xC2	; 194
     77e:	f3 e0       	ldi	r31, 0x03	; 3
     780:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__prologue_saves__+0x18>
     784:	69 83       	std	Y+1, r22	; 0x01
     786:	7a 83       	std	Y+2, r23	; 0x02
     788:	8b 83       	std	Y+3, r24	; 0x03
     78a:	9c 83       	std	Y+4, r25	; 0x04
     78c:	2d 83       	std	Y+5, r18	; 0x05
     78e:	3e 83       	std	Y+6, r19	; 0x06
     790:	4f 83       	std	Y+7, r20	; 0x07
     792:	58 87       	std	Y+8, r21	; 0x08
     794:	e9 e0       	ldi	r30, 0x09	; 9
     796:	ee 2e       	mov	r14, r30
     798:	f1 2c       	mov	r15, r1
     79a:	ec 0e       	add	r14, r28
     79c:	fd 1e       	adc	r15, r29
     79e:	ce 01       	movw	r24, r28
     7a0:	01 96       	adiw	r24, 0x01	; 1
     7a2:	b7 01       	movw	r22, r14
     7a4:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     7a8:	8e 01       	movw	r16, r28
     7aa:	0f 5e       	subi	r16, 0xEF	; 239
     7ac:	1f 4f       	sbci	r17, 0xFF	; 255
     7ae:	ce 01       	movw	r24, r28
     7b0:	05 96       	adiw	r24, 0x05	; 5
     7b2:	b8 01       	movw	r22, r16
     7b4:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     7b8:	8a 89       	ldd	r24, Y+18	; 0x12
     7ba:	91 e0       	ldi	r25, 0x01	; 1
     7bc:	89 27       	eor	r24, r25
     7be:	8a 8b       	std	Y+18, r24	; 0x12
     7c0:	c7 01       	movw	r24, r14
     7c2:	b8 01       	movw	r22, r16
     7c4:	ae 01       	movw	r20, r28
     7c6:	47 5e       	subi	r20, 0xE7	; 231
     7c8:	5f 4f       	sbci	r21, 0xFF	; 255
     7ca:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_fpadd_parts>
     7ce:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__pack_f>
     7d2:	a0 96       	adiw	r28, 0x20	; 32
     7d4:	e6 e0       	ldi	r30, 0x06	; 6
     7d6:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__epilogue_restores__+0x18>

000007da <__addsf3>:
     7da:	a0 e2       	ldi	r26, 0x20	; 32
     7dc:	b0 e0       	ldi	r27, 0x00	; 0
     7de:	e3 ef       	ldi	r30, 0xF3	; 243
     7e0:	f3 e0       	ldi	r31, 0x03	; 3
     7e2:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__prologue_saves__+0x18>
     7e6:	69 83       	std	Y+1, r22	; 0x01
     7e8:	7a 83       	std	Y+2, r23	; 0x02
     7ea:	8b 83       	std	Y+3, r24	; 0x03
     7ec:	9c 83       	std	Y+4, r25	; 0x04
     7ee:	2d 83       	std	Y+5, r18	; 0x05
     7f0:	3e 83       	std	Y+6, r19	; 0x06
     7f2:	4f 83       	std	Y+7, r20	; 0x07
     7f4:	58 87       	std	Y+8, r21	; 0x08
     7f6:	f9 e0       	ldi	r31, 0x09	; 9
     7f8:	ef 2e       	mov	r14, r31
     7fa:	f1 2c       	mov	r15, r1
     7fc:	ec 0e       	add	r14, r28
     7fe:	fd 1e       	adc	r15, r29
     800:	ce 01       	movw	r24, r28
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	b7 01       	movw	r22, r14
     806:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     80a:	8e 01       	movw	r16, r28
     80c:	0f 5e       	subi	r16, 0xEF	; 239
     80e:	1f 4f       	sbci	r17, 0xFF	; 255
     810:	ce 01       	movw	r24, r28
     812:	05 96       	adiw	r24, 0x05	; 5
     814:	b8 01       	movw	r22, r16
     816:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     81a:	c7 01       	movw	r24, r14
     81c:	b8 01       	movw	r22, r16
     81e:	ae 01       	movw	r20, r28
     820:	47 5e       	subi	r20, 0xE7	; 231
     822:	5f 4f       	sbci	r21, 0xFF	; 255
     824:	0e 94 70 02 	call	0x4e0	; 0x4e0 <_fpadd_parts>
     828:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__pack_f>
     82c:	a0 96       	adiw	r28, 0x20	; 32
     82e:	e6 e0       	ldi	r30, 0x06	; 6
     830:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__epilogue_restores__+0x18>

00000834 <__mulsf3>:
     834:	a0 e2       	ldi	r26, 0x20	; 32
     836:	b0 e0       	ldi	r27, 0x00	; 0
     838:	e0 e2       	ldi	r30, 0x20	; 32
     83a:	f4 e0       	ldi	r31, 0x04	; 4
     83c:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__prologue_saves__>
     840:	69 83       	std	Y+1, r22	; 0x01
     842:	7a 83       	std	Y+2, r23	; 0x02
     844:	8b 83       	std	Y+3, r24	; 0x03
     846:	9c 83       	std	Y+4, r25	; 0x04
     848:	2d 83       	std	Y+5, r18	; 0x05
     84a:	3e 83       	std	Y+6, r19	; 0x06
     84c:	4f 83       	std	Y+7, r20	; 0x07
     84e:	58 87       	std	Y+8, r21	; 0x08
     850:	ce 01       	movw	r24, r28
     852:	01 96       	adiw	r24, 0x01	; 1
     854:	be 01       	movw	r22, r28
     856:	67 5f       	subi	r22, 0xF7	; 247
     858:	7f 4f       	sbci	r23, 0xFF	; 255
     85a:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     85e:	ce 01       	movw	r24, r28
     860:	05 96       	adiw	r24, 0x05	; 5
     862:	be 01       	movw	r22, r28
     864:	6f 5e       	subi	r22, 0xEF	; 239
     866:	7f 4f       	sbci	r23, 0xFF	; 255
     868:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     86c:	99 85       	ldd	r25, Y+9	; 0x09
     86e:	92 30       	cpi	r25, 0x02	; 2
     870:	88 f0       	brcs	.+34     	; 0x894 <__stack+0x35>
     872:	89 89       	ldd	r24, Y+17	; 0x11
     874:	82 30       	cpi	r24, 0x02	; 2
     876:	c8 f0       	brcs	.+50     	; 0x8aa <__stack+0x4b>
     878:	94 30       	cpi	r25, 0x04	; 4
     87a:	19 f4       	brne	.+6      	; 0x882 <__stack+0x23>
     87c:	82 30       	cpi	r24, 0x02	; 2
     87e:	51 f4       	brne	.+20     	; 0x894 <__stack+0x35>
     880:	04 c0       	rjmp	.+8      	; 0x88a <__stack+0x2b>
     882:	84 30       	cpi	r24, 0x04	; 4
     884:	29 f4       	brne	.+10     	; 0x890 <__stack+0x31>
     886:	92 30       	cpi	r25, 0x02	; 2
     888:	81 f4       	brne	.+32     	; 0x8aa <__stack+0x4b>
     88a:	88 e6       	ldi	r24, 0x68	; 104
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	c6 c0       	rjmp	.+396    	; 0xa1c <__stack+0x1bd>
     890:	92 30       	cpi	r25, 0x02	; 2
     892:	49 f4       	brne	.+18     	; 0x8a6 <__stack+0x47>
     894:	20 e0       	ldi	r18, 0x00	; 0
     896:	9a 85       	ldd	r25, Y+10	; 0x0a
     898:	8a 89       	ldd	r24, Y+18	; 0x12
     89a:	98 13       	cpse	r25, r24
     89c:	21 e0       	ldi	r18, 0x01	; 1
     89e:	2a 87       	std	Y+10, r18	; 0x0a
     8a0:	ce 01       	movw	r24, r28
     8a2:	09 96       	adiw	r24, 0x09	; 9
     8a4:	bb c0       	rjmp	.+374    	; 0xa1c <__stack+0x1bd>
     8a6:	82 30       	cpi	r24, 0x02	; 2
     8a8:	49 f4       	brne	.+18     	; 0x8bc <__stack+0x5d>
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	9a 85       	ldd	r25, Y+10	; 0x0a
     8ae:	8a 89       	ldd	r24, Y+18	; 0x12
     8b0:	98 13       	cpse	r25, r24
     8b2:	21 e0       	ldi	r18, 0x01	; 1
     8b4:	2a 8b       	std	Y+18, r18	; 0x12
     8b6:	ce 01       	movw	r24, r28
     8b8:	41 96       	adiw	r24, 0x11	; 17
     8ba:	b0 c0       	rjmp	.+352    	; 0xa1c <__stack+0x1bd>
     8bc:	2d 84       	ldd	r2, Y+13	; 0x0d
     8be:	3e 84       	ldd	r3, Y+14	; 0x0e
     8c0:	4f 84       	ldd	r4, Y+15	; 0x0f
     8c2:	58 88       	ldd	r5, Y+16	; 0x10
     8c4:	6d 88       	ldd	r6, Y+21	; 0x15
     8c6:	7e 88       	ldd	r7, Y+22	; 0x16
     8c8:	8f 88       	ldd	r8, Y+23	; 0x17
     8ca:	98 8c       	ldd	r9, Y+24	; 0x18
     8cc:	ee 24       	eor	r14, r14
     8ce:	ff 24       	eor	r15, r15
     8d0:	87 01       	movw	r16, r14
     8d2:	aa 24       	eor	r10, r10
     8d4:	bb 24       	eor	r11, r11
     8d6:	65 01       	movw	r12, r10
     8d8:	40 e0       	ldi	r20, 0x00	; 0
     8da:	50 e0       	ldi	r21, 0x00	; 0
     8dc:	60 e0       	ldi	r22, 0x00	; 0
     8de:	70 e0       	ldi	r23, 0x00	; 0
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	c1 01       	movw	r24, r2
     8e6:	81 70       	andi	r24, 0x01	; 1
     8e8:	90 70       	andi	r25, 0x00	; 0
     8ea:	89 2b       	or	r24, r25
     8ec:	e9 f0       	breq	.+58     	; 0x928 <__stack+0xc9>
     8ee:	e6 0c       	add	r14, r6
     8f0:	f7 1c       	adc	r15, r7
     8f2:	08 1d       	adc	r16, r8
     8f4:	19 1d       	adc	r17, r9
     8f6:	9a 01       	movw	r18, r20
     8f8:	ab 01       	movw	r20, r22
     8fa:	2a 0d       	add	r18, r10
     8fc:	3b 1d       	adc	r19, r11
     8fe:	4c 1d       	adc	r20, r12
     900:	5d 1d       	adc	r21, r13
     902:	80 e0       	ldi	r24, 0x00	; 0
     904:	90 e0       	ldi	r25, 0x00	; 0
     906:	a0 e0       	ldi	r26, 0x00	; 0
     908:	b0 e0       	ldi	r27, 0x00	; 0
     90a:	e6 14       	cp	r14, r6
     90c:	f7 04       	cpc	r15, r7
     90e:	08 05       	cpc	r16, r8
     910:	19 05       	cpc	r17, r9
     912:	20 f4       	brcc	.+8      	; 0x91c <__stack+0xbd>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	a0 e0       	ldi	r26, 0x00	; 0
     91a:	b0 e0       	ldi	r27, 0x00	; 0
     91c:	ba 01       	movw	r22, r20
     91e:	a9 01       	movw	r20, r18
     920:	48 0f       	add	r20, r24
     922:	59 1f       	adc	r21, r25
     924:	6a 1f       	adc	r22, r26
     926:	7b 1f       	adc	r23, r27
     928:	aa 0c       	add	r10, r10
     92a:	bb 1c       	adc	r11, r11
     92c:	cc 1c       	adc	r12, r12
     92e:	dd 1c       	adc	r13, r13
     930:	97 fe       	sbrs	r9, 7
     932:	08 c0       	rjmp	.+16     	; 0x944 <__stack+0xe5>
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	a8 2a       	or	r10, r24
     93e:	b9 2a       	or	r11, r25
     940:	ca 2a       	or	r12, r26
     942:	db 2a       	or	r13, r27
     944:	31 96       	adiw	r30, 0x01	; 1
     946:	e0 32       	cpi	r30, 0x20	; 32
     948:	f1 05       	cpc	r31, r1
     94a:	49 f0       	breq	.+18     	; 0x95e <__stack+0xff>
     94c:	66 0c       	add	r6, r6
     94e:	77 1c       	adc	r7, r7
     950:	88 1c       	adc	r8, r8
     952:	99 1c       	adc	r9, r9
     954:	56 94       	lsr	r5
     956:	47 94       	ror	r4
     958:	37 94       	ror	r3
     95a:	27 94       	ror	r2
     95c:	c3 cf       	rjmp	.-122    	; 0x8e4 <__stack+0x85>
     95e:	fa 85       	ldd	r31, Y+10	; 0x0a
     960:	ea 89       	ldd	r30, Y+18	; 0x12
     962:	2b 89       	ldd	r18, Y+19	; 0x13
     964:	3c 89       	ldd	r19, Y+20	; 0x14
     966:	8b 85       	ldd	r24, Y+11	; 0x0b
     968:	9c 85       	ldd	r25, Y+12	; 0x0c
     96a:	28 0f       	add	r18, r24
     96c:	39 1f       	adc	r19, r25
     96e:	2e 5f       	subi	r18, 0xFE	; 254
     970:	3f 4f       	sbci	r19, 0xFF	; 255
     972:	17 c0       	rjmp	.+46     	; 0x9a2 <__stack+0x143>
     974:	ca 01       	movw	r24, r20
     976:	81 70       	andi	r24, 0x01	; 1
     978:	90 70       	andi	r25, 0x00	; 0
     97a:	89 2b       	or	r24, r25
     97c:	61 f0       	breq	.+24     	; 0x996 <__stack+0x137>
     97e:	16 95       	lsr	r17
     980:	07 95       	ror	r16
     982:	f7 94       	ror	r15
     984:	e7 94       	ror	r14
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	a0 e0       	ldi	r26, 0x00	; 0
     98c:	b0 e8       	ldi	r27, 0x80	; 128
     98e:	e8 2a       	or	r14, r24
     990:	f9 2a       	or	r15, r25
     992:	0a 2b       	or	r16, r26
     994:	1b 2b       	or	r17, r27
     996:	76 95       	lsr	r23
     998:	67 95       	ror	r22
     99a:	57 95       	ror	r21
     99c:	47 95       	ror	r20
     99e:	2f 5f       	subi	r18, 0xFF	; 255
     9a0:	3f 4f       	sbci	r19, 0xFF	; 255
     9a2:	77 fd       	sbrc	r23, 7
     9a4:	e7 cf       	rjmp	.-50     	; 0x974 <__stack+0x115>
     9a6:	0c c0       	rjmp	.+24     	; 0x9c0 <__stack+0x161>
     9a8:	44 0f       	add	r20, r20
     9aa:	55 1f       	adc	r21, r21
     9ac:	66 1f       	adc	r22, r22
     9ae:	77 1f       	adc	r23, r23
     9b0:	17 fd       	sbrc	r17, 7
     9b2:	41 60       	ori	r20, 0x01	; 1
     9b4:	ee 0c       	add	r14, r14
     9b6:	ff 1c       	adc	r15, r15
     9b8:	00 1f       	adc	r16, r16
     9ba:	11 1f       	adc	r17, r17
     9bc:	21 50       	subi	r18, 0x01	; 1
     9be:	30 40       	sbci	r19, 0x00	; 0
     9c0:	40 30       	cpi	r20, 0x00	; 0
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	59 07       	cpc	r21, r25
     9c6:	90 e0       	ldi	r25, 0x00	; 0
     9c8:	69 07       	cpc	r22, r25
     9ca:	90 e4       	ldi	r25, 0x40	; 64
     9cc:	79 07       	cpc	r23, r25
     9ce:	60 f3       	brcs	.-40     	; 0x9a8 <__stack+0x149>
     9d0:	2b 8f       	std	Y+27, r18	; 0x1b
     9d2:	3c 8f       	std	Y+28, r19	; 0x1c
     9d4:	db 01       	movw	r26, r22
     9d6:	ca 01       	movw	r24, r20
     9d8:	8f 77       	andi	r24, 0x7F	; 127
     9da:	90 70       	andi	r25, 0x00	; 0
     9dc:	a0 70       	andi	r26, 0x00	; 0
     9de:	b0 70       	andi	r27, 0x00	; 0
     9e0:	80 34       	cpi	r24, 0x40	; 64
     9e2:	91 05       	cpc	r25, r1
     9e4:	a1 05       	cpc	r26, r1
     9e6:	b1 05       	cpc	r27, r1
     9e8:	61 f4       	brne	.+24     	; 0xa02 <__stack+0x1a3>
     9ea:	47 fd       	sbrc	r20, 7
     9ec:	0a c0       	rjmp	.+20     	; 0xa02 <__stack+0x1a3>
     9ee:	e1 14       	cp	r14, r1
     9f0:	f1 04       	cpc	r15, r1
     9f2:	01 05       	cpc	r16, r1
     9f4:	11 05       	cpc	r17, r1
     9f6:	29 f0       	breq	.+10     	; 0xa02 <__stack+0x1a3>
     9f8:	40 5c       	subi	r20, 0xC0	; 192
     9fa:	5f 4f       	sbci	r21, 0xFF	; 255
     9fc:	6f 4f       	sbci	r22, 0xFF	; 255
     9fe:	7f 4f       	sbci	r23, 0xFF	; 255
     a00:	40 78       	andi	r20, 0x80	; 128
     a02:	1a 8e       	std	Y+26, r1	; 0x1a
     a04:	fe 17       	cp	r31, r30
     a06:	11 f0       	breq	.+4      	; 0xa0c <__stack+0x1ad>
     a08:	81 e0       	ldi	r24, 0x01	; 1
     a0a:	8a 8f       	std	Y+26, r24	; 0x1a
     a0c:	4d 8f       	std	Y+29, r20	; 0x1d
     a0e:	5e 8f       	std	Y+30, r21	; 0x1e
     a10:	6f 8f       	std	Y+31, r22	; 0x1f
     a12:	78 a3       	std	Y+32, r23	; 0x20
     a14:	83 e0       	ldi	r24, 0x03	; 3
     a16:	89 8f       	std	Y+25, r24	; 0x19
     a18:	ce 01       	movw	r24, r28
     a1a:	49 96       	adiw	r24, 0x19	; 25
     a1c:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__pack_f>
     a20:	a0 96       	adiw	r28, 0x20	; 32
     a22:	e2 e1       	ldi	r30, 0x12	; 18
     a24:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__epilogue_restores__>

00000a28 <__gtsf2>:
     a28:	a8 e1       	ldi	r26, 0x18	; 24
     a2a:	b0 e0       	ldi	r27, 0x00	; 0
     a2c:	ea e1       	ldi	r30, 0x1A	; 26
     a2e:	f5 e0       	ldi	r31, 0x05	; 5
     a30:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__prologue_saves__+0x18>
     a34:	69 83       	std	Y+1, r22	; 0x01
     a36:	7a 83       	std	Y+2, r23	; 0x02
     a38:	8b 83       	std	Y+3, r24	; 0x03
     a3a:	9c 83       	std	Y+4, r25	; 0x04
     a3c:	2d 83       	std	Y+5, r18	; 0x05
     a3e:	3e 83       	std	Y+6, r19	; 0x06
     a40:	4f 83       	std	Y+7, r20	; 0x07
     a42:	58 87       	std	Y+8, r21	; 0x08
     a44:	89 e0       	ldi	r24, 0x09	; 9
     a46:	e8 2e       	mov	r14, r24
     a48:	f1 2c       	mov	r15, r1
     a4a:	ec 0e       	add	r14, r28
     a4c:	fd 1e       	adc	r15, r29
     a4e:	ce 01       	movw	r24, r28
     a50:	01 96       	adiw	r24, 0x01	; 1
     a52:	b7 01       	movw	r22, r14
     a54:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     a58:	8e 01       	movw	r16, r28
     a5a:	0f 5e       	subi	r16, 0xEF	; 239
     a5c:	1f 4f       	sbci	r17, 0xFF	; 255
     a5e:	ce 01       	movw	r24, r28
     a60:	05 96       	adiw	r24, 0x05	; 5
     a62:	b8 01       	movw	r22, r16
     a64:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     a68:	89 85       	ldd	r24, Y+9	; 0x09
     a6a:	82 30       	cpi	r24, 0x02	; 2
     a6c:	40 f0       	brcs	.+16     	; 0xa7e <__gtsf2+0x56>
     a6e:	89 89       	ldd	r24, Y+17	; 0x11
     a70:	82 30       	cpi	r24, 0x02	; 2
     a72:	28 f0       	brcs	.+10     	; 0xa7e <__gtsf2+0x56>
     a74:	c7 01       	movw	r24, r14
     a76:	b8 01       	movw	r22, r16
     a78:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fpcmp_parts_f>
     a7c:	01 c0       	rjmp	.+2      	; 0xa80 <__gtsf2+0x58>
     a7e:	8f ef       	ldi	r24, 0xFF	; 255
     a80:	68 96       	adiw	r28, 0x18	; 24
     a82:	e6 e0       	ldi	r30, 0x06	; 6
     a84:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__epilogue_restores__+0x18>

00000a88 <__gesf2>:
     a88:	a8 e1       	ldi	r26, 0x18	; 24
     a8a:	b0 e0       	ldi	r27, 0x00	; 0
     a8c:	ea e4       	ldi	r30, 0x4A	; 74
     a8e:	f5 e0       	ldi	r31, 0x05	; 5
     a90:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__prologue_saves__+0x18>
     a94:	69 83       	std	Y+1, r22	; 0x01
     a96:	7a 83       	std	Y+2, r23	; 0x02
     a98:	8b 83       	std	Y+3, r24	; 0x03
     a9a:	9c 83       	std	Y+4, r25	; 0x04
     a9c:	2d 83       	std	Y+5, r18	; 0x05
     a9e:	3e 83       	std	Y+6, r19	; 0x06
     aa0:	4f 83       	std	Y+7, r20	; 0x07
     aa2:	58 87       	std	Y+8, r21	; 0x08
     aa4:	89 e0       	ldi	r24, 0x09	; 9
     aa6:	e8 2e       	mov	r14, r24
     aa8:	f1 2c       	mov	r15, r1
     aaa:	ec 0e       	add	r14, r28
     aac:	fd 1e       	adc	r15, r29
     aae:	ce 01       	movw	r24, r28
     ab0:	01 96       	adiw	r24, 0x01	; 1
     ab2:	b7 01       	movw	r22, r14
     ab4:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     ab8:	8e 01       	movw	r16, r28
     aba:	0f 5e       	subi	r16, 0xEF	; 239
     abc:	1f 4f       	sbci	r17, 0xFF	; 255
     abe:	ce 01       	movw	r24, r28
     ac0:	05 96       	adiw	r24, 0x05	; 5
     ac2:	b8 01       	movw	r22, r16
     ac4:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     ac8:	89 85       	ldd	r24, Y+9	; 0x09
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	40 f0       	brcs	.+16     	; 0xade <__gesf2+0x56>
     ace:	89 89       	ldd	r24, Y+17	; 0x11
     ad0:	82 30       	cpi	r24, 0x02	; 2
     ad2:	28 f0       	brcs	.+10     	; 0xade <__gesf2+0x56>
     ad4:	c7 01       	movw	r24, r14
     ad6:	b8 01       	movw	r22, r16
     ad8:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fpcmp_parts_f>
     adc:	01 c0       	rjmp	.+2      	; 0xae0 <__gesf2+0x58>
     ade:	8f ef       	ldi	r24, 0xFF	; 255
     ae0:	68 96       	adiw	r28, 0x18	; 24
     ae2:	e6 e0       	ldi	r30, 0x06	; 6
     ae4:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__epilogue_restores__+0x18>

00000ae8 <__ltsf2>:
     ae8:	a8 e1       	ldi	r26, 0x18	; 24
     aea:	b0 e0       	ldi	r27, 0x00	; 0
     aec:	ea e7       	ldi	r30, 0x7A	; 122
     aee:	f5 e0       	ldi	r31, 0x05	; 5
     af0:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__prologue_saves__+0x18>
     af4:	69 83       	std	Y+1, r22	; 0x01
     af6:	7a 83       	std	Y+2, r23	; 0x02
     af8:	8b 83       	std	Y+3, r24	; 0x03
     afa:	9c 83       	std	Y+4, r25	; 0x04
     afc:	2d 83       	std	Y+5, r18	; 0x05
     afe:	3e 83       	std	Y+6, r19	; 0x06
     b00:	4f 83       	std	Y+7, r20	; 0x07
     b02:	58 87       	std	Y+8, r21	; 0x08
     b04:	89 e0       	ldi	r24, 0x09	; 9
     b06:	e8 2e       	mov	r14, r24
     b08:	f1 2c       	mov	r15, r1
     b0a:	ec 0e       	add	r14, r28
     b0c:	fd 1e       	adc	r15, r29
     b0e:	ce 01       	movw	r24, r28
     b10:	01 96       	adiw	r24, 0x01	; 1
     b12:	b7 01       	movw	r22, r14
     b14:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     b18:	8e 01       	movw	r16, r28
     b1a:	0f 5e       	subi	r16, 0xEF	; 239
     b1c:	1f 4f       	sbci	r17, 0xFF	; 255
     b1e:	ce 01       	movw	r24, r28
     b20:	05 96       	adiw	r24, 0x05	; 5
     b22:	b8 01       	movw	r22, r16
     b24:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     b28:	89 85       	ldd	r24, Y+9	; 0x09
     b2a:	82 30       	cpi	r24, 0x02	; 2
     b2c:	40 f0       	brcs	.+16     	; 0xb3e <__ltsf2+0x56>
     b2e:	89 89       	ldd	r24, Y+17	; 0x11
     b30:	82 30       	cpi	r24, 0x02	; 2
     b32:	28 f0       	brcs	.+10     	; 0xb3e <__ltsf2+0x56>
     b34:	c7 01       	movw	r24, r14
     b36:	b8 01       	movw	r22, r16
     b38:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fpcmp_parts_f>
     b3c:	01 c0       	rjmp	.+2      	; 0xb40 <__ltsf2+0x58>
     b3e:	81 e0       	ldi	r24, 0x01	; 1
     b40:	68 96       	adiw	r28, 0x18	; 24
     b42:	e6 e0       	ldi	r30, 0x06	; 6
     b44:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__epilogue_restores__+0x18>

00000b48 <__floatsisf>:
     b48:	a8 e0       	ldi	r26, 0x08	; 8
     b4a:	b0 e0       	ldi	r27, 0x00	; 0
     b4c:	ea ea       	ldi	r30, 0xAA	; 170
     b4e:	f5 e0       	ldi	r31, 0x05	; 5
     b50:	0c 94 cd 08 	jmp	0x119a	; 0x119a <__prologue_saves__+0x12>
     b54:	9b 01       	movw	r18, r22
     b56:	ac 01       	movw	r20, r24
     b58:	83 e0       	ldi	r24, 0x03	; 3
     b5a:	89 83       	std	Y+1, r24	; 0x01
     b5c:	da 01       	movw	r26, r20
     b5e:	c9 01       	movw	r24, r18
     b60:	88 27       	eor	r24, r24
     b62:	b7 fd       	sbrc	r27, 7
     b64:	83 95       	inc	r24
     b66:	99 27       	eor	r25, r25
     b68:	aa 27       	eor	r26, r26
     b6a:	bb 27       	eor	r27, r27
     b6c:	b8 2e       	mov	r11, r24
     b6e:	21 15       	cp	r18, r1
     b70:	31 05       	cpc	r19, r1
     b72:	41 05       	cpc	r20, r1
     b74:	51 05       	cpc	r21, r1
     b76:	19 f4       	brne	.+6      	; 0xb7e <__floatsisf+0x36>
     b78:	82 e0       	ldi	r24, 0x02	; 2
     b7a:	89 83       	std	Y+1, r24	; 0x01
     b7c:	3a c0       	rjmp	.+116    	; 0xbf2 <__floatsisf+0xaa>
     b7e:	88 23       	and	r24, r24
     b80:	a9 f0       	breq	.+42     	; 0xbac <__floatsisf+0x64>
     b82:	20 30       	cpi	r18, 0x00	; 0
     b84:	80 e0       	ldi	r24, 0x00	; 0
     b86:	38 07       	cpc	r19, r24
     b88:	80 e0       	ldi	r24, 0x00	; 0
     b8a:	48 07       	cpc	r20, r24
     b8c:	80 e8       	ldi	r24, 0x80	; 128
     b8e:	58 07       	cpc	r21, r24
     b90:	29 f4       	brne	.+10     	; 0xb9c <__floatsisf+0x54>
     b92:	60 e0       	ldi	r22, 0x00	; 0
     b94:	70 e0       	ldi	r23, 0x00	; 0
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	9f ec       	ldi	r25, 0xCF	; 207
     b9a:	30 c0       	rjmp	.+96     	; 0xbfc <__floatsisf+0xb4>
     b9c:	ee 24       	eor	r14, r14
     b9e:	ff 24       	eor	r15, r15
     ba0:	87 01       	movw	r16, r14
     ba2:	e2 1a       	sub	r14, r18
     ba4:	f3 0a       	sbc	r15, r19
     ba6:	04 0b       	sbc	r16, r20
     ba8:	15 0b       	sbc	r17, r21
     baa:	02 c0       	rjmp	.+4      	; 0xbb0 <__floatsisf+0x68>
     bac:	79 01       	movw	r14, r18
     bae:	8a 01       	movw	r16, r20
     bb0:	8e e1       	ldi	r24, 0x1E	; 30
     bb2:	c8 2e       	mov	r12, r24
     bb4:	d1 2c       	mov	r13, r1
     bb6:	dc 82       	std	Y+4, r13	; 0x04
     bb8:	cb 82       	std	Y+3, r12	; 0x03
     bba:	ed 82       	std	Y+5, r14	; 0x05
     bbc:	fe 82       	std	Y+6, r15	; 0x06
     bbe:	0f 83       	std	Y+7, r16	; 0x07
     bc0:	18 87       	std	Y+8, r17	; 0x08
     bc2:	c8 01       	movw	r24, r16
     bc4:	b7 01       	movw	r22, r14
     bc6:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__clzsi2>
     bca:	01 97       	sbiw	r24, 0x01	; 1
     bcc:	18 16       	cp	r1, r24
     bce:	19 06       	cpc	r1, r25
     bd0:	84 f4       	brge	.+32     	; 0xbf2 <__floatsisf+0xaa>
     bd2:	08 2e       	mov	r0, r24
     bd4:	04 c0       	rjmp	.+8      	; 0xbde <__floatsisf+0x96>
     bd6:	ee 0c       	add	r14, r14
     bd8:	ff 1c       	adc	r15, r15
     bda:	00 1f       	adc	r16, r16
     bdc:	11 1f       	adc	r17, r17
     bde:	0a 94       	dec	r0
     be0:	d2 f7       	brpl	.-12     	; 0xbd6 <__floatsisf+0x8e>
     be2:	ed 82       	std	Y+5, r14	; 0x05
     be4:	fe 82       	std	Y+6, r15	; 0x06
     be6:	0f 83       	std	Y+7, r16	; 0x07
     be8:	18 87       	std	Y+8, r17	; 0x08
     bea:	c8 1a       	sub	r12, r24
     bec:	d9 0a       	sbc	r13, r25
     bee:	dc 82       	std	Y+4, r13	; 0x04
     bf0:	cb 82       	std	Y+3, r12	; 0x03
     bf2:	ba 82       	std	Y+2, r11	; 0x02
     bf4:	ce 01       	movw	r24, r28
     bf6:	01 96       	adiw	r24, 0x01	; 1
     bf8:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__pack_f>
     bfc:	28 96       	adiw	r28, 0x08	; 8
     bfe:	e9 e0       	ldi	r30, 0x09	; 9
     c00:	0c 94 e9 08 	jmp	0x11d2	; 0x11d2 <__epilogue_restores__+0x12>

00000c04 <__fixsfsi>:
     c04:	ac e0       	ldi	r26, 0x0C	; 12
     c06:	b0 e0       	ldi	r27, 0x00	; 0
     c08:	e8 e0       	ldi	r30, 0x08	; 8
     c0a:	f6 e0       	ldi	r31, 0x06	; 6
     c0c:	0c 94 d4 08 	jmp	0x11a8	; 0x11a8 <__prologue_saves__+0x20>
     c10:	69 83       	std	Y+1, r22	; 0x01
     c12:	7a 83       	std	Y+2, r23	; 0x02
     c14:	8b 83       	std	Y+3, r24	; 0x03
     c16:	9c 83       	std	Y+4, r25	; 0x04
     c18:	ce 01       	movw	r24, r28
     c1a:	01 96       	adiw	r24, 0x01	; 1
     c1c:	be 01       	movw	r22, r28
     c1e:	6b 5f       	subi	r22, 0xFB	; 251
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <__unpack_f>
     c26:	8d 81       	ldd	r24, Y+5	; 0x05
     c28:	82 30       	cpi	r24, 0x02	; 2
     c2a:	61 f1       	breq	.+88     	; 0xc84 <__fixsfsi+0x80>
     c2c:	82 30       	cpi	r24, 0x02	; 2
     c2e:	50 f1       	brcs	.+84     	; 0xc84 <__fixsfsi+0x80>
     c30:	84 30       	cpi	r24, 0x04	; 4
     c32:	21 f4       	brne	.+8      	; 0xc3c <__fixsfsi+0x38>
     c34:	8e 81       	ldd	r24, Y+6	; 0x06
     c36:	88 23       	and	r24, r24
     c38:	51 f1       	breq	.+84     	; 0xc8e <__fixsfsi+0x8a>
     c3a:	2e c0       	rjmp	.+92     	; 0xc98 <__fixsfsi+0x94>
     c3c:	2f 81       	ldd	r18, Y+7	; 0x07
     c3e:	38 85       	ldd	r19, Y+8	; 0x08
     c40:	37 fd       	sbrc	r19, 7
     c42:	20 c0       	rjmp	.+64     	; 0xc84 <__fixsfsi+0x80>
     c44:	6e 81       	ldd	r22, Y+6	; 0x06
     c46:	2f 31       	cpi	r18, 0x1F	; 31
     c48:	31 05       	cpc	r19, r1
     c4a:	1c f0       	brlt	.+6      	; 0xc52 <__fixsfsi+0x4e>
     c4c:	66 23       	and	r22, r22
     c4e:	f9 f0       	breq	.+62     	; 0xc8e <__fixsfsi+0x8a>
     c50:	23 c0       	rjmp	.+70     	; 0xc98 <__fixsfsi+0x94>
     c52:	8e e1       	ldi	r24, 0x1E	; 30
     c54:	90 e0       	ldi	r25, 0x00	; 0
     c56:	82 1b       	sub	r24, r18
     c58:	93 0b       	sbc	r25, r19
     c5a:	29 85       	ldd	r18, Y+9	; 0x09
     c5c:	3a 85       	ldd	r19, Y+10	; 0x0a
     c5e:	4b 85       	ldd	r20, Y+11	; 0x0b
     c60:	5c 85       	ldd	r21, Y+12	; 0x0c
     c62:	04 c0       	rjmp	.+8      	; 0xc6c <__fixsfsi+0x68>
     c64:	56 95       	lsr	r21
     c66:	47 95       	ror	r20
     c68:	37 95       	ror	r19
     c6a:	27 95       	ror	r18
     c6c:	8a 95       	dec	r24
     c6e:	d2 f7       	brpl	.-12     	; 0xc64 <__fixsfsi+0x60>
     c70:	66 23       	and	r22, r22
     c72:	b1 f0       	breq	.+44     	; 0xca0 <__fixsfsi+0x9c>
     c74:	50 95       	com	r21
     c76:	40 95       	com	r20
     c78:	30 95       	com	r19
     c7a:	21 95       	neg	r18
     c7c:	3f 4f       	sbci	r19, 0xFF	; 255
     c7e:	4f 4f       	sbci	r20, 0xFF	; 255
     c80:	5f 4f       	sbci	r21, 0xFF	; 255
     c82:	0e c0       	rjmp	.+28     	; 0xca0 <__fixsfsi+0x9c>
     c84:	20 e0       	ldi	r18, 0x00	; 0
     c86:	30 e0       	ldi	r19, 0x00	; 0
     c88:	40 e0       	ldi	r20, 0x00	; 0
     c8a:	50 e0       	ldi	r21, 0x00	; 0
     c8c:	09 c0       	rjmp	.+18     	; 0xca0 <__fixsfsi+0x9c>
     c8e:	2f ef       	ldi	r18, 0xFF	; 255
     c90:	3f ef       	ldi	r19, 0xFF	; 255
     c92:	4f ef       	ldi	r20, 0xFF	; 255
     c94:	5f e7       	ldi	r21, 0x7F	; 127
     c96:	04 c0       	rjmp	.+8      	; 0xca0 <__fixsfsi+0x9c>
     c98:	20 e0       	ldi	r18, 0x00	; 0
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	50 e8       	ldi	r21, 0x80	; 128
     ca0:	b9 01       	movw	r22, r18
     ca2:	ca 01       	movw	r24, r20
     ca4:	2c 96       	adiw	r28, 0x0c	; 12
     ca6:	e2 e0       	ldi	r30, 0x02	; 2
     ca8:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <__epilogue_restores__+0x20>

00000cac <__floatunsisf>:
     cac:	a8 e0       	ldi	r26, 0x08	; 8
     cae:	b0 e0       	ldi	r27, 0x00	; 0
     cb0:	ec e5       	ldi	r30, 0x5C	; 92
     cb2:	f6 e0       	ldi	r31, 0x06	; 6
     cb4:	0c 94 cc 08 	jmp	0x1198	; 0x1198 <__prologue_saves__+0x10>
     cb8:	7b 01       	movw	r14, r22
     cba:	8c 01       	movw	r16, r24
     cbc:	61 15       	cp	r22, r1
     cbe:	71 05       	cpc	r23, r1
     cc0:	81 05       	cpc	r24, r1
     cc2:	91 05       	cpc	r25, r1
     cc4:	19 f4       	brne	.+6      	; 0xccc <__floatunsisf+0x20>
     cc6:	82 e0       	ldi	r24, 0x02	; 2
     cc8:	89 83       	std	Y+1, r24	; 0x01
     cca:	60 c0       	rjmp	.+192    	; 0xd8c <__floatunsisf+0xe0>
     ccc:	83 e0       	ldi	r24, 0x03	; 3
     cce:	89 83       	std	Y+1, r24	; 0x01
     cd0:	8e e1       	ldi	r24, 0x1E	; 30
     cd2:	c8 2e       	mov	r12, r24
     cd4:	d1 2c       	mov	r13, r1
     cd6:	dc 82       	std	Y+4, r13	; 0x04
     cd8:	cb 82       	std	Y+3, r12	; 0x03
     cda:	ed 82       	std	Y+5, r14	; 0x05
     cdc:	fe 82       	std	Y+6, r15	; 0x06
     cde:	0f 83       	std	Y+7, r16	; 0x07
     ce0:	18 87       	std	Y+8, r17	; 0x08
     ce2:	c8 01       	movw	r24, r16
     ce4:	b7 01       	movw	r22, r14
     ce6:	0e 94 cf 06 	call	0xd9e	; 0xd9e <__clzsi2>
     cea:	fc 01       	movw	r30, r24
     cec:	31 97       	sbiw	r30, 0x01	; 1
     cee:	f7 ff       	sbrs	r31, 7
     cf0:	3b c0       	rjmp	.+118    	; 0xd68 <__floatunsisf+0xbc>
     cf2:	22 27       	eor	r18, r18
     cf4:	33 27       	eor	r19, r19
     cf6:	2e 1b       	sub	r18, r30
     cf8:	3f 0b       	sbc	r19, r31
     cfa:	57 01       	movw	r10, r14
     cfc:	68 01       	movw	r12, r16
     cfe:	02 2e       	mov	r0, r18
     d00:	04 c0       	rjmp	.+8      	; 0xd0a <__floatunsisf+0x5e>
     d02:	d6 94       	lsr	r13
     d04:	c7 94       	ror	r12
     d06:	b7 94       	ror	r11
     d08:	a7 94       	ror	r10
     d0a:	0a 94       	dec	r0
     d0c:	d2 f7       	brpl	.-12     	; 0xd02 <__floatunsisf+0x56>
     d0e:	40 e0       	ldi	r20, 0x00	; 0
     d10:	50 e0       	ldi	r21, 0x00	; 0
     d12:	60 e0       	ldi	r22, 0x00	; 0
     d14:	70 e0       	ldi	r23, 0x00	; 0
     d16:	81 e0       	ldi	r24, 0x01	; 1
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	a0 e0       	ldi	r26, 0x00	; 0
     d1c:	b0 e0       	ldi	r27, 0x00	; 0
     d1e:	04 c0       	rjmp	.+8      	; 0xd28 <__floatunsisf+0x7c>
     d20:	88 0f       	add	r24, r24
     d22:	99 1f       	adc	r25, r25
     d24:	aa 1f       	adc	r26, r26
     d26:	bb 1f       	adc	r27, r27
     d28:	2a 95       	dec	r18
     d2a:	d2 f7       	brpl	.-12     	; 0xd20 <__floatunsisf+0x74>
     d2c:	01 97       	sbiw	r24, 0x01	; 1
     d2e:	a1 09       	sbc	r26, r1
     d30:	b1 09       	sbc	r27, r1
     d32:	8e 21       	and	r24, r14
     d34:	9f 21       	and	r25, r15
     d36:	a0 23       	and	r26, r16
     d38:	b1 23       	and	r27, r17
     d3a:	00 97       	sbiw	r24, 0x00	; 0
     d3c:	a1 05       	cpc	r26, r1
     d3e:	b1 05       	cpc	r27, r1
     d40:	21 f0       	breq	.+8      	; 0xd4a <__floatunsisf+0x9e>
     d42:	41 e0       	ldi	r20, 0x01	; 1
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	60 e0       	ldi	r22, 0x00	; 0
     d48:	70 e0       	ldi	r23, 0x00	; 0
     d4a:	4a 29       	or	r20, r10
     d4c:	5b 29       	or	r21, r11
     d4e:	6c 29       	or	r22, r12
     d50:	7d 29       	or	r23, r13
     d52:	4d 83       	std	Y+5, r20	; 0x05
     d54:	5e 83       	std	Y+6, r21	; 0x06
     d56:	6f 83       	std	Y+7, r22	; 0x07
     d58:	78 87       	std	Y+8, r23	; 0x08
     d5a:	8e e1       	ldi	r24, 0x1E	; 30
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	8e 1b       	sub	r24, r30
     d60:	9f 0b       	sbc	r25, r31
     d62:	9c 83       	std	Y+4, r25	; 0x04
     d64:	8b 83       	std	Y+3, r24	; 0x03
     d66:	12 c0       	rjmp	.+36     	; 0xd8c <__floatunsisf+0xe0>
     d68:	30 97       	sbiw	r30, 0x00	; 0
     d6a:	81 f0       	breq	.+32     	; 0xd8c <__floatunsisf+0xe0>
     d6c:	0e 2e       	mov	r0, r30
     d6e:	04 c0       	rjmp	.+8      	; 0xd78 <__floatunsisf+0xcc>
     d70:	ee 0c       	add	r14, r14
     d72:	ff 1c       	adc	r15, r15
     d74:	00 1f       	adc	r16, r16
     d76:	11 1f       	adc	r17, r17
     d78:	0a 94       	dec	r0
     d7a:	d2 f7       	brpl	.-12     	; 0xd70 <__floatunsisf+0xc4>
     d7c:	ed 82       	std	Y+5, r14	; 0x05
     d7e:	fe 82       	std	Y+6, r15	; 0x06
     d80:	0f 83       	std	Y+7, r16	; 0x07
     d82:	18 87       	std	Y+8, r17	; 0x08
     d84:	ce 1a       	sub	r12, r30
     d86:	df 0a       	sbc	r13, r31
     d88:	dc 82       	std	Y+4, r13	; 0x04
     d8a:	cb 82       	std	Y+3, r12	; 0x03
     d8c:	1a 82       	std	Y+2, r1	; 0x02
     d8e:	ce 01       	movw	r24, r28
     d90:	01 96       	adiw	r24, 0x01	; 1
     d92:	0e 94 1e 07 	call	0xe3c	; 0xe3c <__pack_f>
     d96:	28 96       	adiw	r28, 0x08	; 8
     d98:	ea e0       	ldi	r30, 0x0A	; 10
     d9a:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <__epilogue_restores__+0x10>

00000d9e <__clzsi2>:
     d9e:	ef 92       	push	r14
     da0:	ff 92       	push	r15
     da2:	0f 93       	push	r16
     da4:	1f 93       	push	r17
     da6:	7b 01       	movw	r14, r22
     da8:	8c 01       	movw	r16, r24
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	e8 16       	cp	r14, r24
     dae:	80 e0       	ldi	r24, 0x00	; 0
     db0:	f8 06       	cpc	r15, r24
     db2:	81 e0       	ldi	r24, 0x01	; 1
     db4:	08 07       	cpc	r16, r24
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	18 07       	cpc	r17, r24
     dba:	88 f4       	brcc	.+34     	; 0xdde <__clzsi2+0x40>
     dbc:	8f ef       	ldi	r24, 0xFF	; 255
     dbe:	e8 16       	cp	r14, r24
     dc0:	f1 04       	cpc	r15, r1
     dc2:	01 05       	cpc	r16, r1
     dc4:	11 05       	cpc	r17, r1
     dc6:	31 f0       	breq	.+12     	; 0xdd4 <__clzsi2+0x36>
     dc8:	28 f0       	brcs	.+10     	; 0xdd4 <__clzsi2+0x36>
     dca:	88 e0       	ldi	r24, 0x08	; 8
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	a0 e0       	ldi	r26, 0x00	; 0
     dd0:	b0 e0       	ldi	r27, 0x00	; 0
     dd2:	17 c0       	rjmp	.+46     	; 0xe02 <__clzsi2+0x64>
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	a0 e0       	ldi	r26, 0x00	; 0
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	12 c0       	rjmp	.+36     	; 0xe02 <__clzsi2+0x64>
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	e8 16       	cp	r14, r24
     de2:	80 e0       	ldi	r24, 0x00	; 0
     de4:	f8 06       	cpc	r15, r24
     de6:	80 e0       	ldi	r24, 0x00	; 0
     de8:	08 07       	cpc	r16, r24
     dea:	81 e0       	ldi	r24, 0x01	; 1
     dec:	18 07       	cpc	r17, r24
     dee:	28 f0       	brcs	.+10     	; 0xdfa <__clzsi2+0x5c>
     df0:	88 e1       	ldi	r24, 0x18	; 24
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	a0 e0       	ldi	r26, 0x00	; 0
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	04 c0       	rjmp	.+8      	; 0xe02 <__clzsi2+0x64>
     dfa:	80 e1       	ldi	r24, 0x10	; 16
     dfc:	90 e0       	ldi	r25, 0x00	; 0
     dfe:	a0 e0       	ldi	r26, 0x00	; 0
     e00:	b0 e0       	ldi	r27, 0x00	; 0
     e02:	20 e2       	ldi	r18, 0x20	; 32
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	40 e0       	ldi	r20, 0x00	; 0
     e08:	50 e0       	ldi	r21, 0x00	; 0
     e0a:	28 1b       	sub	r18, r24
     e0c:	39 0b       	sbc	r19, r25
     e0e:	4a 0b       	sbc	r20, r26
     e10:	5b 0b       	sbc	r21, r27
     e12:	04 c0       	rjmp	.+8      	; 0xe1c <__clzsi2+0x7e>
     e14:	16 95       	lsr	r17
     e16:	07 95       	ror	r16
     e18:	f7 94       	ror	r15
     e1a:	e7 94       	ror	r14
     e1c:	8a 95       	dec	r24
     e1e:	d2 f7       	brpl	.-12     	; 0xe14 <__clzsi2+0x76>
     e20:	f7 01       	movw	r30, r14
     e22:	e0 59       	subi	r30, 0x90	; 144
     e24:	ff 4f       	sbci	r31, 0xFF	; 255
     e26:	80 81       	ld	r24, Z
     e28:	28 1b       	sub	r18, r24
     e2a:	31 09       	sbc	r19, r1
     e2c:	41 09       	sbc	r20, r1
     e2e:	51 09       	sbc	r21, r1
     e30:	c9 01       	movw	r24, r18
     e32:	1f 91       	pop	r17
     e34:	0f 91       	pop	r16
     e36:	ff 90       	pop	r15
     e38:	ef 90       	pop	r14
     e3a:	08 95       	ret

00000e3c <__pack_f>:
     e3c:	df 92       	push	r13
     e3e:	ef 92       	push	r14
     e40:	ff 92       	push	r15
     e42:	0f 93       	push	r16
     e44:	1f 93       	push	r17
     e46:	fc 01       	movw	r30, r24
     e48:	e4 80       	ldd	r14, Z+4	; 0x04
     e4a:	f5 80       	ldd	r15, Z+5	; 0x05
     e4c:	06 81       	ldd	r16, Z+6	; 0x06
     e4e:	17 81       	ldd	r17, Z+7	; 0x07
     e50:	d1 80       	ldd	r13, Z+1	; 0x01
     e52:	80 81       	ld	r24, Z
     e54:	82 30       	cpi	r24, 0x02	; 2
     e56:	48 f4       	brcc	.+18     	; 0xe6a <__pack_f+0x2e>
     e58:	80 e0       	ldi	r24, 0x00	; 0
     e5a:	90 e0       	ldi	r25, 0x00	; 0
     e5c:	a0 e1       	ldi	r26, 0x10	; 16
     e5e:	b0 e0       	ldi	r27, 0x00	; 0
     e60:	e8 2a       	or	r14, r24
     e62:	f9 2a       	or	r15, r25
     e64:	0a 2b       	or	r16, r26
     e66:	1b 2b       	or	r17, r27
     e68:	a5 c0       	rjmp	.+330    	; 0xfb4 <__pack_f+0x178>
     e6a:	84 30       	cpi	r24, 0x04	; 4
     e6c:	09 f4       	brne	.+2      	; 0xe70 <__pack_f+0x34>
     e6e:	9f c0       	rjmp	.+318    	; 0xfae <__pack_f+0x172>
     e70:	82 30       	cpi	r24, 0x02	; 2
     e72:	21 f4       	brne	.+8      	; 0xe7c <__pack_f+0x40>
     e74:	ee 24       	eor	r14, r14
     e76:	ff 24       	eor	r15, r15
     e78:	87 01       	movw	r16, r14
     e7a:	05 c0       	rjmp	.+10     	; 0xe86 <__pack_f+0x4a>
     e7c:	e1 14       	cp	r14, r1
     e7e:	f1 04       	cpc	r15, r1
     e80:	01 05       	cpc	r16, r1
     e82:	11 05       	cpc	r17, r1
     e84:	19 f4       	brne	.+6      	; 0xe8c <__pack_f+0x50>
     e86:	e0 e0       	ldi	r30, 0x00	; 0
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	96 c0       	rjmp	.+300    	; 0xfb8 <__pack_f+0x17c>
     e8c:	62 81       	ldd	r22, Z+2	; 0x02
     e8e:	73 81       	ldd	r23, Z+3	; 0x03
     e90:	9f ef       	ldi	r25, 0xFF	; 255
     e92:	62 38       	cpi	r22, 0x82	; 130
     e94:	79 07       	cpc	r23, r25
     e96:	0c f0       	brlt	.+2      	; 0xe9a <__pack_f+0x5e>
     e98:	5b c0       	rjmp	.+182    	; 0xf50 <__pack_f+0x114>
     e9a:	22 e8       	ldi	r18, 0x82	; 130
     e9c:	3f ef       	ldi	r19, 0xFF	; 255
     e9e:	26 1b       	sub	r18, r22
     ea0:	37 0b       	sbc	r19, r23
     ea2:	2a 31       	cpi	r18, 0x1A	; 26
     ea4:	31 05       	cpc	r19, r1
     ea6:	2c f0       	brlt	.+10     	; 0xeb2 <__pack_f+0x76>
     ea8:	20 e0       	ldi	r18, 0x00	; 0
     eaa:	30 e0       	ldi	r19, 0x00	; 0
     eac:	40 e0       	ldi	r20, 0x00	; 0
     eae:	50 e0       	ldi	r21, 0x00	; 0
     eb0:	2a c0       	rjmp	.+84     	; 0xf06 <__pack_f+0xca>
     eb2:	b8 01       	movw	r22, r16
     eb4:	a7 01       	movw	r20, r14
     eb6:	02 2e       	mov	r0, r18
     eb8:	04 c0       	rjmp	.+8      	; 0xec2 <__pack_f+0x86>
     eba:	76 95       	lsr	r23
     ebc:	67 95       	ror	r22
     ebe:	57 95       	ror	r21
     ec0:	47 95       	ror	r20
     ec2:	0a 94       	dec	r0
     ec4:	d2 f7       	brpl	.-12     	; 0xeba <__pack_f+0x7e>
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	a0 e0       	ldi	r26, 0x00	; 0
     ecc:	b0 e0       	ldi	r27, 0x00	; 0
     ece:	04 c0       	rjmp	.+8      	; 0xed8 <__pack_f+0x9c>
     ed0:	88 0f       	add	r24, r24
     ed2:	99 1f       	adc	r25, r25
     ed4:	aa 1f       	adc	r26, r26
     ed6:	bb 1f       	adc	r27, r27
     ed8:	2a 95       	dec	r18
     eda:	d2 f7       	brpl	.-12     	; 0xed0 <__pack_f+0x94>
     edc:	01 97       	sbiw	r24, 0x01	; 1
     ede:	a1 09       	sbc	r26, r1
     ee0:	b1 09       	sbc	r27, r1
     ee2:	8e 21       	and	r24, r14
     ee4:	9f 21       	and	r25, r15
     ee6:	a0 23       	and	r26, r16
     ee8:	b1 23       	and	r27, r17
     eea:	00 97       	sbiw	r24, 0x00	; 0
     eec:	a1 05       	cpc	r26, r1
     eee:	b1 05       	cpc	r27, r1
     ef0:	21 f0       	breq	.+8      	; 0xefa <__pack_f+0xbe>
     ef2:	81 e0       	ldi	r24, 0x01	; 1
     ef4:	90 e0       	ldi	r25, 0x00	; 0
     ef6:	a0 e0       	ldi	r26, 0x00	; 0
     ef8:	b0 e0       	ldi	r27, 0x00	; 0
     efa:	9a 01       	movw	r18, r20
     efc:	ab 01       	movw	r20, r22
     efe:	28 2b       	or	r18, r24
     f00:	39 2b       	or	r19, r25
     f02:	4a 2b       	or	r20, r26
     f04:	5b 2b       	or	r21, r27
     f06:	da 01       	movw	r26, r20
     f08:	c9 01       	movw	r24, r18
     f0a:	8f 77       	andi	r24, 0x7F	; 127
     f0c:	90 70       	andi	r25, 0x00	; 0
     f0e:	a0 70       	andi	r26, 0x00	; 0
     f10:	b0 70       	andi	r27, 0x00	; 0
     f12:	80 34       	cpi	r24, 0x40	; 64
     f14:	91 05       	cpc	r25, r1
     f16:	a1 05       	cpc	r26, r1
     f18:	b1 05       	cpc	r27, r1
     f1a:	39 f4       	brne	.+14     	; 0xf2a <__pack_f+0xee>
     f1c:	27 ff       	sbrs	r18, 7
     f1e:	09 c0       	rjmp	.+18     	; 0xf32 <__pack_f+0xf6>
     f20:	20 5c       	subi	r18, 0xC0	; 192
     f22:	3f 4f       	sbci	r19, 0xFF	; 255
     f24:	4f 4f       	sbci	r20, 0xFF	; 255
     f26:	5f 4f       	sbci	r21, 0xFF	; 255
     f28:	04 c0       	rjmp	.+8      	; 0xf32 <__pack_f+0xf6>
     f2a:	21 5c       	subi	r18, 0xC1	; 193
     f2c:	3f 4f       	sbci	r19, 0xFF	; 255
     f2e:	4f 4f       	sbci	r20, 0xFF	; 255
     f30:	5f 4f       	sbci	r21, 0xFF	; 255
     f32:	e0 e0       	ldi	r30, 0x00	; 0
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	20 30       	cpi	r18, 0x00	; 0
     f38:	a0 e0       	ldi	r26, 0x00	; 0
     f3a:	3a 07       	cpc	r19, r26
     f3c:	a0 e0       	ldi	r26, 0x00	; 0
     f3e:	4a 07       	cpc	r20, r26
     f40:	a0 e4       	ldi	r26, 0x40	; 64
     f42:	5a 07       	cpc	r21, r26
     f44:	10 f0       	brcs	.+4      	; 0xf4a <__pack_f+0x10e>
     f46:	e1 e0       	ldi	r30, 0x01	; 1
     f48:	f0 e0       	ldi	r31, 0x00	; 0
     f4a:	79 01       	movw	r14, r18
     f4c:	8a 01       	movw	r16, r20
     f4e:	27 c0       	rjmp	.+78     	; 0xf9e <__pack_f+0x162>
     f50:	60 38       	cpi	r22, 0x80	; 128
     f52:	71 05       	cpc	r23, r1
     f54:	64 f5       	brge	.+88     	; 0xfae <__pack_f+0x172>
     f56:	fb 01       	movw	r30, r22
     f58:	e1 58       	subi	r30, 0x81	; 129
     f5a:	ff 4f       	sbci	r31, 0xFF	; 255
     f5c:	d8 01       	movw	r26, r16
     f5e:	c7 01       	movw	r24, r14
     f60:	8f 77       	andi	r24, 0x7F	; 127
     f62:	90 70       	andi	r25, 0x00	; 0
     f64:	a0 70       	andi	r26, 0x00	; 0
     f66:	b0 70       	andi	r27, 0x00	; 0
     f68:	80 34       	cpi	r24, 0x40	; 64
     f6a:	91 05       	cpc	r25, r1
     f6c:	a1 05       	cpc	r26, r1
     f6e:	b1 05       	cpc	r27, r1
     f70:	39 f4       	brne	.+14     	; 0xf80 <__pack_f+0x144>
     f72:	e7 fe       	sbrs	r14, 7
     f74:	0d c0       	rjmp	.+26     	; 0xf90 <__pack_f+0x154>
     f76:	80 e4       	ldi	r24, 0x40	; 64
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	a0 e0       	ldi	r26, 0x00	; 0
     f7c:	b0 e0       	ldi	r27, 0x00	; 0
     f7e:	04 c0       	rjmp	.+8      	; 0xf88 <__pack_f+0x14c>
     f80:	8f e3       	ldi	r24, 0x3F	; 63
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	a0 e0       	ldi	r26, 0x00	; 0
     f86:	b0 e0       	ldi	r27, 0x00	; 0
     f88:	e8 0e       	add	r14, r24
     f8a:	f9 1e       	adc	r15, r25
     f8c:	0a 1f       	adc	r16, r26
     f8e:	1b 1f       	adc	r17, r27
     f90:	17 ff       	sbrs	r17, 7
     f92:	05 c0       	rjmp	.+10     	; 0xf9e <__pack_f+0x162>
     f94:	16 95       	lsr	r17
     f96:	07 95       	ror	r16
     f98:	f7 94       	ror	r15
     f9a:	e7 94       	ror	r14
     f9c:	31 96       	adiw	r30, 0x01	; 1
     f9e:	87 e0       	ldi	r24, 0x07	; 7
     fa0:	16 95       	lsr	r17
     fa2:	07 95       	ror	r16
     fa4:	f7 94       	ror	r15
     fa6:	e7 94       	ror	r14
     fa8:	8a 95       	dec	r24
     faa:	d1 f7       	brne	.-12     	; 0xfa0 <__pack_f+0x164>
     fac:	05 c0       	rjmp	.+10     	; 0xfb8 <__pack_f+0x17c>
     fae:	ee 24       	eor	r14, r14
     fb0:	ff 24       	eor	r15, r15
     fb2:	87 01       	movw	r16, r14
     fb4:	ef ef       	ldi	r30, 0xFF	; 255
     fb6:	f0 e0       	ldi	r31, 0x00	; 0
     fb8:	6e 2f       	mov	r22, r30
     fba:	67 95       	ror	r22
     fbc:	66 27       	eor	r22, r22
     fbe:	67 95       	ror	r22
     fc0:	90 2f       	mov	r25, r16
     fc2:	9f 77       	andi	r25, 0x7F	; 127
     fc4:	d7 94       	ror	r13
     fc6:	dd 24       	eor	r13, r13
     fc8:	d7 94       	ror	r13
     fca:	8e 2f       	mov	r24, r30
     fcc:	86 95       	lsr	r24
     fce:	49 2f       	mov	r20, r25
     fd0:	46 2b       	or	r20, r22
     fd2:	58 2f       	mov	r21, r24
     fd4:	5d 29       	or	r21, r13
     fd6:	b7 01       	movw	r22, r14
     fd8:	ca 01       	movw	r24, r20
     fda:	1f 91       	pop	r17
     fdc:	0f 91       	pop	r16
     fde:	ff 90       	pop	r15
     fe0:	ef 90       	pop	r14
     fe2:	df 90       	pop	r13
     fe4:	08 95       	ret

00000fe6 <__unpack_f>:
     fe6:	fc 01       	movw	r30, r24
     fe8:	db 01       	movw	r26, r22
     fea:	40 81       	ld	r20, Z
     fec:	51 81       	ldd	r21, Z+1	; 0x01
     fee:	22 81       	ldd	r18, Z+2	; 0x02
     ff0:	62 2f       	mov	r22, r18
     ff2:	6f 77       	andi	r22, 0x7F	; 127
     ff4:	70 e0       	ldi	r23, 0x00	; 0
     ff6:	22 1f       	adc	r18, r18
     ff8:	22 27       	eor	r18, r18
     ffa:	22 1f       	adc	r18, r18
     ffc:	93 81       	ldd	r25, Z+3	; 0x03
     ffe:	89 2f       	mov	r24, r25
    1000:	88 0f       	add	r24, r24
    1002:	82 2b       	or	r24, r18
    1004:	28 2f       	mov	r18, r24
    1006:	30 e0       	ldi	r19, 0x00	; 0
    1008:	99 1f       	adc	r25, r25
    100a:	99 27       	eor	r25, r25
    100c:	99 1f       	adc	r25, r25
    100e:	11 96       	adiw	r26, 0x01	; 1
    1010:	9c 93       	st	X, r25
    1012:	11 97       	sbiw	r26, 0x01	; 1
    1014:	21 15       	cp	r18, r1
    1016:	31 05       	cpc	r19, r1
    1018:	a9 f5       	brne	.+106    	; 0x1084 <__unpack_f+0x9e>
    101a:	41 15       	cp	r20, r1
    101c:	51 05       	cpc	r21, r1
    101e:	61 05       	cpc	r22, r1
    1020:	71 05       	cpc	r23, r1
    1022:	11 f4       	brne	.+4      	; 0x1028 <__unpack_f+0x42>
    1024:	82 e0       	ldi	r24, 0x02	; 2
    1026:	37 c0       	rjmp	.+110    	; 0x1096 <__unpack_f+0xb0>
    1028:	82 e8       	ldi	r24, 0x82	; 130
    102a:	9f ef       	ldi	r25, 0xFF	; 255
    102c:	13 96       	adiw	r26, 0x03	; 3
    102e:	9c 93       	st	X, r25
    1030:	8e 93       	st	-X, r24
    1032:	12 97       	sbiw	r26, 0x02	; 2
    1034:	9a 01       	movw	r18, r20
    1036:	ab 01       	movw	r20, r22
    1038:	67 e0       	ldi	r22, 0x07	; 7
    103a:	22 0f       	add	r18, r18
    103c:	33 1f       	adc	r19, r19
    103e:	44 1f       	adc	r20, r20
    1040:	55 1f       	adc	r21, r21
    1042:	6a 95       	dec	r22
    1044:	d1 f7       	brne	.-12     	; 0x103a <__unpack_f+0x54>
    1046:	83 e0       	ldi	r24, 0x03	; 3
    1048:	8c 93       	st	X, r24
    104a:	0d c0       	rjmp	.+26     	; 0x1066 <__unpack_f+0x80>
    104c:	22 0f       	add	r18, r18
    104e:	33 1f       	adc	r19, r19
    1050:	44 1f       	adc	r20, r20
    1052:	55 1f       	adc	r21, r21
    1054:	12 96       	adiw	r26, 0x02	; 2
    1056:	8d 91       	ld	r24, X+
    1058:	9c 91       	ld	r25, X
    105a:	13 97       	sbiw	r26, 0x03	; 3
    105c:	01 97       	sbiw	r24, 0x01	; 1
    105e:	13 96       	adiw	r26, 0x03	; 3
    1060:	9c 93       	st	X, r25
    1062:	8e 93       	st	-X, r24
    1064:	12 97       	sbiw	r26, 0x02	; 2
    1066:	20 30       	cpi	r18, 0x00	; 0
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	38 07       	cpc	r19, r24
    106c:	80 e0       	ldi	r24, 0x00	; 0
    106e:	48 07       	cpc	r20, r24
    1070:	80 e4       	ldi	r24, 0x40	; 64
    1072:	58 07       	cpc	r21, r24
    1074:	58 f3       	brcs	.-42     	; 0x104c <__unpack_f+0x66>
    1076:	14 96       	adiw	r26, 0x04	; 4
    1078:	2d 93       	st	X+, r18
    107a:	3d 93       	st	X+, r19
    107c:	4d 93       	st	X+, r20
    107e:	5c 93       	st	X, r21
    1080:	17 97       	sbiw	r26, 0x07	; 7
    1082:	08 95       	ret
    1084:	2f 3f       	cpi	r18, 0xFF	; 255
    1086:	31 05       	cpc	r19, r1
    1088:	79 f4       	brne	.+30     	; 0x10a8 <__unpack_f+0xc2>
    108a:	41 15       	cp	r20, r1
    108c:	51 05       	cpc	r21, r1
    108e:	61 05       	cpc	r22, r1
    1090:	71 05       	cpc	r23, r1
    1092:	19 f4       	brne	.+6      	; 0x109a <__unpack_f+0xb4>
    1094:	84 e0       	ldi	r24, 0x04	; 4
    1096:	8c 93       	st	X, r24
    1098:	08 95       	ret
    109a:	64 ff       	sbrs	r22, 4
    109c:	03 c0       	rjmp	.+6      	; 0x10a4 <__unpack_f+0xbe>
    109e:	81 e0       	ldi	r24, 0x01	; 1
    10a0:	8c 93       	st	X, r24
    10a2:	12 c0       	rjmp	.+36     	; 0x10c8 <__unpack_f+0xe2>
    10a4:	1c 92       	st	X, r1
    10a6:	10 c0       	rjmp	.+32     	; 0x10c8 <__unpack_f+0xe2>
    10a8:	2f 57       	subi	r18, 0x7F	; 127
    10aa:	30 40       	sbci	r19, 0x00	; 0
    10ac:	13 96       	adiw	r26, 0x03	; 3
    10ae:	3c 93       	st	X, r19
    10b0:	2e 93       	st	-X, r18
    10b2:	12 97       	sbiw	r26, 0x02	; 2
    10b4:	83 e0       	ldi	r24, 0x03	; 3
    10b6:	8c 93       	st	X, r24
    10b8:	87 e0       	ldi	r24, 0x07	; 7
    10ba:	44 0f       	add	r20, r20
    10bc:	55 1f       	adc	r21, r21
    10be:	66 1f       	adc	r22, r22
    10c0:	77 1f       	adc	r23, r23
    10c2:	8a 95       	dec	r24
    10c4:	d1 f7       	brne	.-12     	; 0x10ba <__unpack_f+0xd4>
    10c6:	70 64       	ori	r23, 0x40	; 64
    10c8:	14 96       	adiw	r26, 0x04	; 4
    10ca:	4d 93       	st	X+, r20
    10cc:	5d 93       	st	X+, r21
    10ce:	6d 93       	st	X+, r22
    10d0:	7c 93       	st	X, r23
    10d2:	17 97       	sbiw	r26, 0x07	; 7
    10d4:	08 95       	ret

000010d6 <__fpcmp_parts_f>:
    10d6:	1f 93       	push	r17
    10d8:	dc 01       	movw	r26, r24
    10da:	fb 01       	movw	r30, r22
    10dc:	9c 91       	ld	r25, X
    10de:	92 30       	cpi	r25, 0x02	; 2
    10e0:	08 f4       	brcc	.+2      	; 0x10e4 <__fpcmp_parts_f+0xe>
    10e2:	47 c0       	rjmp	.+142    	; 0x1172 <__fpcmp_parts_f+0x9c>
    10e4:	80 81       	ld	r24, Z
    10e6:	82 30       	cpi	r24, 0x02	; 2
    10e8:	08 f4       	brcc	.+2      	; 0x10ec <__fpcmp_parts_f+0x16>
    10ea:	43 c0       	rjmp	.+134    	; 0x1172 <__fpcmp_parts_f+0x9c>
    10ec:	94 30       	cpi	r25, 0x04	; 4
    10ee:	51 f4       	brne	.+20     	; 0x1104 <__fpcmp_parts_f+0x2e>
    10f0:	11 96       	adiw	r26, 0x01	; 1
    10f2:	1c 91       	ld	r17, X
    10f4:	84 30       	cpi	r24, 0x04	; 4
    10f6:	99 f5       	brne	.+102    	; 0x115e <__fpcmp_parts_f+0x88>
    10f8:	81 81       	ldd	r24, Z+1	; 0x01
    10fa:	68 2f       	mov	r22, r24
    10fc:	70 e0       	ldi	r23, 0x00	; 0
    10fe:	61 1b       	sub	r22, r17
    1100:	71 09       	sbc	r23, r1
    1102:	3f c0       	rjmp	.+126    	; 0x1182 <__fpcmp_parts_f+0xac>
    1104:	84 30       	cpi	r24, 0x04	; 4
    1106:	21 f0       	breq	.+8      	; 0x1110 <__fpcmp_parts_f+0x3a>
    1108:	92 30       	cpi	r25, 0x02	; 2
    110a:	31 f4       	brne	.+12     	; 0x1118 <__fpcmp_parts_f+0x42>
    110c:	82 30       	cpi	r24, 0x02	; 2
    110e:	b9 f1       	breq	.+110    	; 0x117e <__fpcmp_parts_f+0xa8>
    1110:	81 81       	ldd	r24, Z+1	; 0x01
    1112:	88 23       	and	r24, r24
    1114:	89 f1       	breq	.+98     	; 0x1178 <__fpcmp_parts_f+0xa2>
    1116:	2d c0       	rjmp	.+90     	; 0x1172 <__fpcmp_parts_f+0x9c>
    1118:	11 96       	adiw	r26, 0x01	; 1
    111a:	1c 91       	ld	r17, X
    111c:	11 97       	sbiw	r26, 0x01	; 1
    111e:	82 30       	cpi	r24, 0x02	; 2
    1120:	f1 f0       	breq	.+60     	; 0x115e <__fpcmp_parts_f+0x88>
    1122:	81 81       	ldd	r24, Z+1	; 0x01
    1124:	18 17       	cp	r17, r24
    1126:	d9 f4       	brne	.+54     	; 0x115e <__fpcmp_parts_f+0x88>
    1128:	12 96       	adiw	r26, 0x02	; 2
    112a:	2d 91       	ld	r18, X+
    112c:	3c 91       	ld	r19, X
    112e:	13 97       	sbiw	r26, 0x03	; 3
    1130:	82 81       	ldd	r24, Z+2	; 0x02
    1132:	93 81       	ldd	r25, Z+3	; 0x03
    1134:	82 17       	cp	r24, r18
    1136:	93 07       	cpc	r25, r19
    1138:	94 f0       	brlt	.+36     	; 0x115e <__fpcmp_parts_f+0x88>
    113a:	28 17       	cp	r18, r24
    113c:	39 07       	cpc	r19, r25
    113e:	bc f0       	brlt	.+46     	; 0x116e <__fpcmp_parts_f+0x98>
    1140:	14 96       	adiw	r26, 0x04	; 4
    1142:	8d 91       	ld	r24, X+
    1144:	9d 91       	ld	r25, X+
    1146:	0d 90       	ld	r0, X+
    1148:	bc 91       	ld	r27, X
    114a:	a0 2d       	mov	r26, r0
    114c:	24 81       	ldd	r18, Z+4	; 0x04
    114e:	35 81       	ldd	r19, Z+5	; 0x05
    1150:	46 81       	ldd	r20, Z+6	; 0x06
    1152:	57 81       	ldd	r21, Z+7	; 0x07
    1154:	28 17       	cp	r18, r24
    1156:	39 07       	cpc	r19, r25
    1158:	4a 07       	cpc	r20, r26
    115a:	5b 07       	cpc	r21, r27
    115c:	18 f4       	brcc	.+6      	; 0x1164 <__fpcmp_parts_f+0x8e>
    115e:	11 23       	and	r17, r17
    1160:	41 f0       	breq	.+16     	; 0x1172 <__fpcmp_parts_f+0x9c>
    1162:	0a c0       	rjmp	.+20     	; 0x1178 <__fpcmp_parts_f+0xa2>
    1164:	82 17       	cp	r24, r18
    1166:	93 07       	cpc	r25, r19
    1168:	a4 07       	cpc	r26, r20
    116a:	b5 07       	cpc	r27, r21
    116c:	40 f4       	brcc	.+16     	; 0x117e <__fpcmp_parts_f+0xa8>
    116e:	11 23       	and	r17, r17
    1170:	19 f0       	breq	.+6      	; 0x1178 <__fpcmp_parts_f+0xa2>
    1172:	61 e0       	ldi	r22, 0x01	; 1
    1174:	70 e0       	ldi	r23, 0x00	; 0
    1176:	05 c0       	rjmp	.+10     	; 0x1182 <__fpcmp_parts_f+0xac>
    1178:	6f ef       	ldi	r22, 0xFF	; 255
    117a:	7f ef       	ldi	r23, 0xFF	; 255
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <__fpcmp_parts_f+0xac>
    117e:	60 e0       	ldi	r22, 0x00	; 0
    1180:	70 e0       	ldi	r23, 0x00	; 0
    1182:	cb 01       	movw	r24, r22
    1184:	1f 91       	pop	r17
    1186:	08 95       	ret

00001188 <__prologue_saves__>:
    1188:	2f 92       	push	r2
    118a:	3f 92       	push	r3
    118c:	4f 92       	push	r4
    118e:	5f 92       	push	r5
    1190:	6f 92       	push	r6
    1192:	7f 92       	push	r7
    1194:	8f 92       	push	r8
    1196:	9f 92       	push	r9
    1198:	af 92       	push	r10
    119a:	bf 92       	push	r11
    119c:	cf 92       	push	r12
    119e:	df 92       	push	r13
    11a0:	ef 92       	push	r14
    11a2:	ff 92       	push	r15
    11a4:	0f 93       	push	r16
    11a6:	1f 93       	push	r17
    11a8:	cf 93       	push	r28
    11aa:	df 93       	push	r29
    11ac:	cd b7       	in	r28, 0x3d	; 61
    11ae:	de b7       	in	r29, 0x3e	; 62
    11b0:	ca 1b       	sub	r28, r26
    11b2:	db 0b       	sbc	r29, r27
    11b4:	0f b6       	in	r0, 0x3f	; 63
    11b6:	f8 94       	cli
    11b8:	de bf       	out	0x3e, r29	; 62
    11ba:	0f be       	out	0x3f, r0	; 63
    11bc:	cd bf       	out	0x3d, r28	; 61
    11be:	09 94       	ijmp

000011c0 <__epilogue_restores__>:
    11c0:	2a 88       	ldd	r2, Y+18	; 0x12
    11c2:	39 88       	ldd	r3, Y+17	; 0x11
    11c4:	48 88       	ldd	r4, Y+16	; 0x10
    11c6:	5f 84       	ldd	r5, Y+15	; 0x0f
    11c8:	6e 84       	ldd	r6, Y+14	; 0x0e
    11ca:	7d 84       	ldd	r7, Y+13	; 0x0d
    11cc:	8c 84       	ldd	r8, Y+12	; 0x0c
    11ce:	9b 84       	ldd	r9, Y+11	; 0x0b
    11d0:	aa 84       	ldd	r10, Y+10	; 0x0a
    11d2:	b9 84       	ldd	r11, Y+9	; 0x09
    11d4:	c8 84       	ldd	r12, Y+8	; 0x08
    11d6:	df 80       	ldd	r13, Y+7	; 0x07
    11d8:	ee 80       	ldd	r14, Y+6	; 0x06
    11da:	fd 80       	ldd	r15, Y+5	; 0x05
    11dc:	0c 81       	ldd	r16, Y+4	; 0x04
    11de:	1b 81       	ldd	r17, Y+3	; 0x03
    11e0:	aa 81       	ldd	r26, Y+2	; 0x02
    11e2:	b9 81       	ldd	r27, Y+1	; 0x01
    11e4:	ce 0f       	add	r28, r30
    11e6:	d1 1d       	adc	r29, r1
    11e8:	0f b6       	in	r0, 0x3f	; 63
    11ea:	f8 94       	cli
    11ec:	de bf       	out	0x3e, r29	; 62
    11ee:	0f be       	out	0x3f, r0	; 63
    11f0:	cd bf       	out	0x3d, r28	; 61
    11f2:	ed 01       	movw	r28, r26
    11f4:	08 95       	ret

000011f6 <_exit>:
    11f6:	f8 94       	cli

000011f8 <__stop_program>:
    11f8:	ff cf       	rjmp	.-2      	; 0x11f8 <__stop_program>
