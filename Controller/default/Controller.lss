
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  000011dc  00001270  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  00800170  00800170  00001380  2**0
                  ALLOC
  3 .debug_aranges 000001c0  00000000  00000000  00001380  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000041a  00000000  00000000  00001540  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000028a5  00000000  00000000  0000195a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000153a  00000000  00000000  000041ff  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000184c  00000000  00000000  00005739  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000350  00000000  00000000  00006f88  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000053c  00000000  00000000  000072d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a9d  00000000  00000000  00007814  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  000082b1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ed       	ldi	r30, 0xDC	; 220
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e7       	ldi	r26, 0x70	; 112
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 38       	cpi	r26, 0x88	; 136
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 10 02 	call	0x420	; 0x420 <main>
      8a:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <setupMIDI>:
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
      92:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) baudrate;
      94:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
      96:	88 e1       	ldi	r24, 0x18	; 24
      98:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
      9a:	86 e8       	ldi	r24, 0x86	; 134
      9c:	80 bd       	out	0x20, r24	; 32
}
      9e:	08 95       	ret

000000a0 <setupPins>:
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      a0:	8f ef       	ldi	r24, 0xFF	; 255
      a2:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      a4:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      a6:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      a8:	87 e0       	ldi	r24, 0x07	; 7
      aa:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
      ac:	11 ba       	out	0x11, r1	; 17
}
      ae:	08 95       	ret

000000b0 <setupAnalog>:
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
      b0:	87 e4       	ldi	r24, 0x47	; 71
      b2:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
      b4:	87 e8       	ldi	r24, 0x87	; 135
      b6:	86 b9       	out	0x06, r24	; 6
}
      b8:	08 95       	ret

000000ba <setupTimer>:
void setupTimer(){
	TCCR1A = 0x00; // enable normal mode interrupts
      ba:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
      bc:	85 e0       	ldi	r24, 0x05	; 5
      be:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << OCIE1B);
      c0:	88 e0       	ldi	r24, 0x08	; 8
      c2:	89 bf       	out	0x39, r24	; 57
	sei();
      c4:	78 94       	sei
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
      c6:	81 ea       	ldi	r24, 0xA1	; 161
      c8:	97 e0       	ldi	r25, 0x07	; 7
      ca:	9b bd       	out	0x2b, r25	; 43
      cc:	8a bd       	out	0x2a, r24	; 42
	OCR1B = 3906; // 1000ms Delay
      ce:	82 e4       	ldi	r24, 0x42	; 66
      d0:	9f e0       	ldi	r25, 0x0F	; 15
      d2:	99 bd       	out	0x29, r25	; 41
      d4:	88 bd       	out	0x28, r24	; 40
	TCNT1 = 0;
      d6:	1d bc       	out	0x2d, r1	; 45
      d8:	1c bc       	out	0x2c, r1	; 44

}
      da:	08 95       	ret

000000dc <playBack>:
	 writeSong2();
}

void playBack(){
	//playTimer();
}
      dc:	08 95       	ret

000000de <modify>:


void modify(){
	//analogLEDTest();
}
      de:	08 95       	ret

000000e0 <playTimer>:
	}
	
}

void playTimer(){
	while((TIFR & (1<<OCF1A)) == 0);// wait till the timer overflow flag is SET
      e0:	08 b6       	in	r0, 0x38	; 56
      e2:	04 fe       	sbrs	r0, 4
      e4:	fd cf       	rjmp	.-6      	; 0xe0 <playTimer>
		PORTB ^= 0xFF;
      e6:	88 b3       	in	r24, 0x18	; 24
      e8:	80 95       	com	r24
      ea:	88 bb       	out	0x18, r24	; 24
		TCNT1 = 0; 
      ec:	1d bc       	out	0x2d, r1	; 45
      ee:	1c bc       	out	0x2c, r1	; 44
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
      f0:	88 b7       	in	r24, 0x38	; 56
      f2:	80 61       	ori	r24, 0x10	; 16
      f4:	88 bf       	out	0x38, r24	; 56
}
      f6:	08 95       	ret

000000f8 <wait>:
	midi_Transmit(MIDIoff);
}


void wait(int time)
{
      f8:	af 92       	push	r10
      fa:	bf 92       	push	r11
      fc:	cf 92       	push	r12
      fe:	df 92       	push	r13
     100:	ef 92       	push	r14
     102:	ff 92       	push	r15
     104:	0f 93       	push	r16
     106:	1f 93       	push	r17
   _delay_ms(time);
     108:	aa 27       	eor	r26, r26
     10a:	97 fd       	sbrc	r25, 7
     10c:	a0 95       	com	r26
     10e:	ba 2f       	mov	r27, r26
     110:	bc 01       	movw	r22, r24
     112:	cd 01       	movw	r24, r26
     114:	0e 94 95 05 	call	0xb2a	; 0xb2a <__floatsisf>
     118:	5b 01       	movw	r10, r22
     11a:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     11c:	20 e0       	ldi	r18, 0x00	; 0
     11e:	30 e0       	ldi	r19, 0x00	; 0
     120:	4a e7       	ldi	r20, 0x7A	; 122
     122:	53 e4       	ldi	r21, 0x43	; 67
     124:	0e 94 0b 04 	call	0x816	; 0x816 <__mulsf3>
     128:	7b 01       	movw	r14, r22
     12a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     12c:	20 e0       	ldi	r18, 0x00	; 0
     12e:	30 e0       	ldi	r19, 0x00	; 0
     130:	40 e8       	ldi	r20, 0x80	; 128
     132:	5f e3       	ldi	r21, 0x3F	; 63
     134:	0e 94 65 05 	call	0xaca	; 0xaca <__ltsf2>
     138:	88 23       	and	r24, r24
     13a:	1c f4       	brge	.+6      	; 0x142 <wait+0x4a>
     13c:	61 e0       	ldi	r22, 0x01	; 1
     13e:	70 e0       	ldi	r23, 0x00	; 0
     140:	24 c0       	rjmp	.+72     	; 0x18a <wait+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
     142:	c8 01       	movw	r24, r16
     144:	b7 01       	movw	r22, r14
     146:	20 e0       	ldi	r18, 0x00	; 0
     148:	3f ef       	ldi	r19, 0xFF	; 255
     14a:	4f e7       	ldi	r20, 0x7F	; 127
     14c:	57 e4       	ldi	r21, 0x47	; 71
     14e:	0e 94 05 05 	call	0xa0a	; 0xa0a <__gtsf2>
     152:	18 16       	cp	r1, r24
     154:	b4 f4       	brge	.+44     	; 0x182 <wait+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     156:	c6 01       	movw	r24, r12
     158:	b5 01       	movw	r22, r10
     15a:	20 e0       	ldi	r18, 0x00	; 0
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	40 e2       	ldi	r20, 0x20	; 32
     160:	51 e4       	ldi	r21, 0x41	; 65
     162:	0e 94 0b 04 	call	0x816	; 0x816 <__mulsf3>
     166:	0e 94 35 02 	call	0x46a	; 0x46a <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     16a:	89 e1       	ldi	r24, 0x19	; 25
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	05 c0       	rjmp	.+10     	; 0x17a <wait+0x82>
     170:	fc 01       	movw	r30, r24
     172:	31 97       	sbiw	r30, 0x01	; 1
     174:	f1 f7       	brne	.-4      	; 0x172 <wait+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     176:	61 50       	subi	r22, 0x01	; 1
     178:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     17a:	61 15       	cp	r22, r1
     17c:	71 05       	cpc	r23, r1
     17e:	c1 f7       	brne	.-16     	; 0x170 <wait+0x78>
     180:	07 c0       	rjmp	.+14     	; 0x190 <wait+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     182:	c8 01       	movw	r24, r16
     184:	b7 01       	movw	r22, r14
     186:	0e 94 35 02 	call	0x46a	; 0x46a <__fixunssfsi>
     18a:	cb 01       	movw	r24, r22
     18c:	01 97       	sbiw	r24, 0x01	; 1
     18e:	f1 f7       	brne	.-4      	; 0x18c <wait+0x94>
}
     190:	1f 91       	pop	r17
     192:	0f 91       	pop	r16
     194:	ff 90       	pop	r15
     196:	ef 90       	pop	r14
     198:	df 90       	pop	r13
     19a:	cf 90       	pop	r12
     19c:	bf 90       	pop	r11
     19e:	af 90       	pop	r10
     1a0:	08 95       	ret

000001a2 <ledOFF>:

void ledOFF(){
	PORTB = 0x00;
     1a2:	18 ba       	out	0x18, r1	; 24
}
     1a4:	08 95       	ret

000001a6 <ReadADC>:

uint16_t ReadADC(){
	//Start a single conversion
	ADCSRA |= (1 << ADSC);
     1a6:	36 9a       	sbi	0x06, 6	; 6
	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
     1a8:	34 9b       	sbis	0x06, 4	; 6
     1aa:	fe cf       	rjmp	.-4      	; 0x1a8 <ReadADC+0x2>
	//clear data (conversion is complete)
	ADCSRA |= (1 << ADIF);
     1ac:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
     1ae:	24 b1       	in	r18, 0x04	; 4
     1b0:	35 b1       	in	r19, 0x05	; 5
}
     1b2:	c9 01       	movw	r24, r18
     1b4:	08 95       	ret

000001b6 <analogLEDTest>:

void analogLEDTest(){
		adc_value = ReadADC();
     1b6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <ReadADC>
     1ba:	9c 01       	movw	r18, r24
     1bc:	90 93 7f 01 	sts	0x017F, r25
     1c0:	80 93 7e 01 	sts	0x017E, r24
		if (adc_value > 30){
     1c4:	8f 31       	cpi	r24, 0x1F	; 31
     1c6:	91 05       	cpc	r25, r1
     1c8:	28 f1       	brcs	.+74     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB0);
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 60){
     1ce:	2d 33       	cpi	r18, 0x3D	; 61
     1d0:	31 05       	cpc	r19, r1
     1d2:	00 f1       	brcs	.+64     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB1);
     1d4:	82 e0       	ldi	r24, 0x02	; 2
     1d6:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 90){
     1d8:	2b 35       	cpi	r18, 0x5B	; 91
     1da:	31 05       	cpc	r19, r1
     1dc:	d8 f0       	brcs	.+54     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB2);
     1de:	84 e0       	ldi	r24, 0x04	; 4
     1e0:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 120){
     1e2:	29 37       	cpi	r18, 0x79	; 121
     1e4:	31 05       	cpc	r19, r1
     1e6:	b0 f0       	brcs	.+44     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB3);
     1e8:	88 e0       	ldi	r24, 0x08	; 8
     1ea:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 150){
     1ec:	27 39       	cpi	r18, 0x97	; 151
     1ee:	31 05       	cpc	r19, r1
     1f0:	88 f0       	brcs	.+34     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB4);
     1f2:	80 e1       	ldi	r24, 0x10	; 16
     1f4:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 180){
     1f6:	25 3b       	cpi	r18, 0xB5	; 181
     1f8:	31 05       	cpc	r19, r1
     1fa:	60 f0       	brcs	.+24     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB5);
     1fc:	80 e2       	ldi	r24, 0x20	; 32
     1fe:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 210){
     200:	23 3d       	cpi	r18, 0xD3	; 211
     202:	31 05       	cpc	r19, r1
     204:	38 f0       	brcs	.+14     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB6);
     206:	80 e4       	ldi	r24, 0x40	; 64
     208:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 240){
     20a:	21 3f       	cpi	r18, 0xF1	; 241
     20c:	31 05       	cpc	r19, r1
     20e:	10 f0       	brcs	.+4      	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB7);
     210:	80 e8       	ldi	r24, 0x80	; 128
     212:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value >= 240){
     214:	20 3f       	cpi	r18, 0xF0	; 240
     216:	31 05       	cpc	r19, r1
     218:	10 f0       	brcs	.+4      	; 0x21e <analogLEDTest+0x68>
			PORTB = 0xFF;
     21a:	8f ef       	ldi	r24, 0xFF	; 255
     21c:	88 bb       	out	0x18, r24	; 24
     21e:	08 95       	ret

00000220 <midi_Transmit>:
		}
	}

void midi_Transmit( unsigned char data){
	/* Wait for empty transmit buffer */
	while(! UCSRA & (1 << UDRE) );
     220:	9b b1       	in	r25, 0x0b	; 11

	/* Put data into buffer, sends the data */
	UDR = data;
     222:	8c b9       	out	0x0c, r24	; 12
}
     224:	08 95       	ret

00000226 <midiTransitTest>:
	}	

}

void midiTransitTest(){
	while ((UCSRA & (1 << UDRE)) == 0) {};
     226:	5d 9b       	sbis	0x0b, 5	; 11
     228:	fe cf       	rjmp	.-4      	; 0x226 <midiTransitTest>

	midi_Transmit(MIDIon);
     22a:	80 91 60 00 	lds	r24, 0x0060
     22e:	90 91 61 00 	lds	r25, 0x0061
     232:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	midi_Transmit(MIDIb1);
     236:	80 91 62 00 	lds	r24, 0x0062
     23a:	90 91 63 00 	lds	r25, 0x0063
     23e:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	midi_Transmit(MIDIb2);
     242:	80 91 64 00 	lds	r24, 0x0064
     246:	90 91 65 00 	lds	r25, 0x0065
     24a:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	midi_Transmit(MIDIoff);
     24e:	80 91 66 00 	lds	r24, 0x0066
     252:	90 91 67 00 	lds	r25, 0x0067
     256:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
}
     25a:	08 95       	ret

0000025c <playSong>:
void modify(){
	//analogLEDTest();
}


void playSong(){
     25c:	8f 92       	push	r8
     25e:	9f 92       	push	r9
     260:	af 92       	push	r10
     262:	bf 92       	push	r11
     264:	cf 92       	push	r12
     266:	df 92       	push	r13
     268:	ef 92       	push	r14
     26a:	ff 92       	push	r15
     26c:	0f 93       	push	r16
     26e:	1f 93       	push	r17
     270:	cf 93       	push	r28
     272:	df 93       	push	r29
	eeprom_address= 0x00;
     274:	10 92 7b 01 	sts	0x017B, r1
     278:	10 92 7a 01 	sts	0x017A, r1
     27c:	89 e1       	ldi	r24, 0x19	; 25
     27e:	88 2e       	mov	r8, r24
     280:	91 2c       	mov	r9, r1
     282:	63 c0       	rjmp	.+198    	; 0x34a <playSong+0xee>
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     284:	e1 99       	sbic	0x1c, 1	; 28
     286:	fe cf       	rjmp	.-4      	; 0x284 <playSong+0x28>
	/* Set up address register */
	EEAR = uiAddress;
     288:	3f bb       	out	0x1f, r19	; 31
     28a:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     28c:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     28e:	8d b3       	in	r24, 0x1d	; 29


void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
     290:	88 bb       	out	0x18, r24	; 24
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     292:	e1 99       	sbic	0x1c, 1	; 28
     294:	fe cf       	rjmp	.-4      	; 0x292 <playSong+0x36>
	/* Set up address register */
	EEAR = uiAddress;
     296:	3f bb       	out	0x1f, r19	; 31
     298:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     29a:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     29c:	8d b3       	in	r24, 0x1d	; 29

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
		eeprom_address++;
     2a4:	c0 91 7a 01 	lds	r28, 0x017A
     2a8:	d0 91 7b 01 	lds	r29, 0x017B
     2ac:	21 96       	adiw	r28, 0x01	; 1
     2ae:	d0 93 7b 01 	sts	0x017B, r29
     2b2:	c0 93 7a 01 	sts	0x017A, r28
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2b6:	e1 99       	sbic	0x1c, 1	; 28
     2b8:	fe cf       	rjmp	.-4      	; 0x2b6 <playSong+0x5a>
	/* Set up address register */
	EEAR = uiAddress;
     2ba:	df bb       	out	0x1f, r29	; 31
     2bc:	ce bb       	out	0x1e, r28	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2be:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2c0:	6d b3       	in	r22, 0x1d	; 29
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
     2c2:	70 e0       	ldi	r23, 0x00	; 0
     2c4:	80 e0       	ldi	r24, 0x00	; 0
     2c6:	90 e0       	ldi	r25, 0x00	; 0
     2c8:	0e 94 47 06 	call	0xc8e	; 0xc8e <__floatunsisf>
     2cc:	5b 01       	movw	r10, r22
     2ce:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     2d0:	20 e0       	ldi	r18, 0x00	; 0
     2d2:	30 e0       	ldi	r19, 0x00	; 0
     2d4:	4a e7       	ldi	r20, 0x7A	; 122
     2d6:	53 e4       	ldi	r21, 0x43	; 67
     2d8:	0e 94 0b 04 	call	0x816	; 0x816 <__mulsf3>
     2dc:	7b 01       	movw	r14, r22
     2de:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     2e0:	20 e0       	ldi	r18, 0x00	; 0
     2e2:	30 e0       	ldi	r19, 0x00	; 0
     2e4:	40 e8       	ldi	r20, 0x80	; 128
     2e6:	5f e3       	ldi	r21, 0x3F	; 63
     2e8:	0e 94 65 05 	call	0xaca	; 0xaca <__ltsf2>
     2ec:	88 23       	and	r24, r24
     2ee:	1c f4       	brge	.+6      	; 0x2f6 <playSong+0x9a>
     2f0:	61 e0       	ldi	r22, 0x01	; 1
     2f2:	70 e0       	ldi	r23, 0x00	; 0
     2f4:	22 c0       	rjmp	.+68     	; 0x33a <playSong+0xde>
		__ticks = 1;
	else if (__tmp > 65535)
     2f6:	c8 01       	movw	r24, r16
     2f8:	b7 01       	movw	r22, r14
     2fa:	20 e0       	ldi	r18, 0x00	; 0
     2fc:	3f ef       	ldi	r19, 0xFF	; 255
     2fe:	4f e7       	ldi	r20, 0x7F	; 127
     300:	57 e4       	ldi	r21, 0x47	; 71
     302:	0e 94 05 05 	call	0xa0a	; 0xa0a <__gtsf2>
     306:	18 16       	cp	r1, r24
     308:	a4 f4       	brge	.+40     	; 0x332 <playSong+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     30a:	c6 01       	movw	r24, r12
     30c:	b5 01       	movw	r22, r10
     30e:	20 e0       	ldi	r18, 0x00	; 0
     310:	30 e0       	ldi	r19, 0x00	; 0
     312:	40 e2       	ldi	r20, 0x20	; 32
     314:	51 e4       	ldi	r21, 0x41	; 65
     316:	0e 94 0b 04 	call	0x816	; 0x816 <__mulsf3>
     31a:	0e 94 35 02 	call	0x46a	; 0x46a <__fixunssfsi>
     31e:	05 c0       	rjmp	.+10     	; 0x32a <playSong+0xce>
     320:	c4 01       	movw	r24, r8
     322:	01 97       	sbiw	r24, 0x01	; 1
     324:	f1 f7       	brne	.-4      	; 0x322 <playSong+0xc6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     326:	61 50       	subi	r22, 0x01	; 1
     328:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     32a:	61 15       	cp	r22, r1
     32c:	71 05       	cpc	r23, r1
     32e:	c1 f7       	brne	.-16     	; 0x320 <playSong+0xc4>
     330:	07 c0       	rjmp	.+14     	; 0x340 <playSong+0xe4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     332:	c8 01       	movw	r24, r16
     334:	b7 01       	movw	r22, r14
     336:	0e 94 35 02 	call	0x46a	; 0x46a <__fixunssfsi>
     33a:	cb 01       	movw	r24, r22
     33c:	01 97       	sbiw	r24, 0x01	; 1
     33e:	f1 f7       	brne	.-4      	; 0x33c <playSong+0xe0>
		eeprom_address++;
     340:	21 96       	adiw	r28, 0x01	; 1
     342:	d0 93 7b 01 	sts	0x017B, r29
     346:	c0 93 7a 01 	sts	0x017A, r28
}


void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
     34a:	20 91 7a 01 	lds	r18, 0x017A
     34e:	30 91 7b 01 	lds	r19, 0x017B
     352:	80 91 7c 01 	lds	r24, 0x017C
     356:	90 91 7d 01 	lds	r25, 0x017D
     35a:	28 17       	cp	r18, r24
     35c:	39 07       	cpc	r19, r25
     35e:	08 f4       	brcc	.+2      	; 0x362 <playSong+0x106>
     360:	91 cf       	rjmp	.-222    	; 0x284 <playSong+0x28>
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
		eeprom_address++;
	}
	
}
     362:	df 91       	pop	r29
     364:	cf 91       	pop	r28
     366:	1f 91       	pop	r17
     368:	0f 91       	pop	r16
     36a:	ff 90       	pop	r15
     36c:	ef 90       	pop	r14
     36e:	df 90       	pop	r13
     370:	cf 90       	pop	r12
     372:	bf 90       	pop	r11
     374:	af 90       	pop	r10
     376:	9f 90       	pop	r9
     378:	8f 90       	pop	r8
     37a:	08 95       	ret

0000037c <midi_Receive>:
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     37c:	5f 9b       	sbis	0x0b, 7	; 11
     37e:	fe cf       	rjmp	.-4      	; 0x37c <midi_Receive>

	/* get and return data from buffer */
	return UDR;
     380:	8c b1       	in	r24, 0x0c	; 12
}
     382:	08 95       	ret

00000384 <midi_Flush>:

/* flushs the buffer of the midi */
void midi_Flush(void){ 
     384:	01 c0       	rjmp	.+2      	; 0x388 <midi_Flush+0x4>
	unsigned char dummy;
	while (UCSRA & (1 << RXC) ) dummy = UDR;
     386:	8c b1       	in	r24, 0x0c	; 12
     388:	5f 99       	sbic	0x0b, 7	; 11
     38a:	fd cf       	rjmp	.-6      	; 0x386 <midi_Flush+0x2>
}
     38c:	08 95       	ret

0000038e <midi_ReadUCSRC>:

unsigned char midi_ReadUCSRC(void){
	unsigned char ucsrc;
	/* read UCSRC */
	//note may need cli() to disable interrupts
	ucsrc = UBRRH;
     38e:	80 b5       	in	r24, 0x20	; 32
	ucsrc = UCSRC;
     390:	80 b5       	in	r24, 0x20	; 32
	return ucsrc;
}
     392:	08 95       	ret

00000394 <TIM16_ReadTCNT1>:

unsigned char TIM16_ReadTCNT1(void){
	unsigned char sreg;
	unsigned char i;
	/* save gloval interrupt flag */
	sreg = SREG;
     394:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     396:	f8 94       	cli
	/* read TCNT1 into i */
	i = TCNT1;
     398:	8c b5       	in	r24, 0x2c	; 44
     39a:	9d b5       	in	r25, 0x2d	; 45
	/* restore global interrupt flag */
	SREG = sreg;
     39c:	2f bf       	out	0x3f, r18	; 63
	return i;
}
     39e:	08 95       	ret

000003a0 <TIM16_WriteTCNT1>:

void TIM16_WriteTCNT1 (unsigned int i){
	unsigned char sreg;
	/* save global interrupt flag */
	sreg = SREG;
     3a0:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     3a2:	f8 94       	cli
	/* set tcnt1 to i */
	TCNT1 = i;
     3a4:	9d bd       	out	0x2d, r25	; 45
     3a6:	8c bd       	out	0x2c, r24	; 44
	/* restore global interrupt flag */
	SREG = sreg;
     3a8:	2f bf       	out	0x3f, r18	; 63
}
     3aa:	08 95       	ret

000003ac <EEPROM_write>:

void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
	/* wait for completion of previous write */
	while (EECR & (1 <<EEWE));
     3ac:	e1 99       	sbic	0x1c, 1	; 28
     3ae:	fe cf       	rjmp	.-4      	; 0x3ac <EEPROM_write>

	/* Set up address and data registers */
	EEAR = uiAddress;
     3b0:	9f bb       	out	0x1f, r25	; 31
     3b2:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
     3b4:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1 << EEMWE);
     3b6:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeporm write by setting EEWE */
	EECR |= (1 << EEWE);
     3b8:	e1 9a       	sbi	0x1c, 1	; 28
}
     3ba:	08 95       	ret

000003bc <writeSong2>:
		PORTB ^= 0xFF;
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
     3bc:	cf 93       	push	r28
     3be:	df 93       	push	r29
     3c0:	c0 e8       	ldi	r28, 0x80	; 128
     3c2:	d1 e0       	ldi	r29, 0x01	; 1
     3c4:	fe 01       	movw	r30, r28
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     3c6:	5f 9b       	sbis	0x0b, 7	; 11
     3c8:	fe cf       	rjmp	.-4      	; 0x3c6 <writeSong2+0xa>

	/* get and return data from buffer */
	return UDR;
     3ca:	8c b1       	in	r24, 0x0c	; 12
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
		midiData[i] = midi_Receive();
     3cc:	81 93       	st	Z+, r24
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
     3ce:	81 e0       	ldi	r24, 0x01	; 1
     3d0:	e6 38       	cpi	r30, 0x86	; 134
     3d2:	f8 07       	cpc	r31, r24
     3d4:	c1 f7       	brne	.-16     	; 0x3c6 <writeSong2+0xa>
		midiData[i] = midi_Receive();
	}

	PORTB = midiData[1];
     3d6:	80 91 81 01 	lds	r24, 0x0181
     3da:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 0;
     3dc:	1d bc       	out	0x2d, r1	; 45
     3de:	1c bc       	out	0x2c, r1	; 44

	midiData[6] = (TCNT1 >> 8);
     3e0:	8c b5       	in	r24, 0x2c	; 44
     3e2:	9d b5       	in	r25, 0x2d	; 45
     3e4:	90 83       	st	Z, r25
	midiData[7] = (TCNT1 & 0xFF);
     3e6:	8c b5       	in	r24, 0x2c	; 44
     3e8:	9d b5       	in	r25, 0x2d	; 45
     3ea:	81 83       	std	Z+1, r24	; 0x01

	for(int j= 0; j <6; j++){
		EEPROM_write(eeprom_address, midiData[j]);
     3ec:	80 91 7a 01 	lds	r24, 0x017A
     3f0:	90 91 7b 01 	lds	r25, 0x017B
     3f4:	69 91       	ld	r22, Y+
     3f6:	0e 94 d6 01 	call	0x3ac	; 0x3ac <EEPROM_write>
		eeprom_address++;		
     3fa:	80 91 7a 01 	lds	r24, 0x017A
     3fe:	90 91 7b 01 	lds	r25, 0x017B
     402:	01 96       	adiw	r24, 0x01	; 1
     404:	90 93 7b 01 	sts	0x017B, r25
     408:	80 93 7a 01 	sts	0x017A, r24
	TCNT1 = 0;

	midiData[6] = (TCNT1 >> 8);
	midiData[7] = (TCNT1 & 0xFF);

	for(int j= 0; j <6; j++){
     40c:	81 e0       	ldi	r24, 0x01	; 1
     40e:	c6 38       	cpi	r28, 0x86	; 134
     410:	d8 07       	cpc	r29, r24
     412:	61 f7       	brne	.-40     	; 0x3ec <writeSong2+0x30>
		EEPROM_write(eeprom_address, midiData[j]);
		eeprom_address++;		
	}	

}
     414:	df 91       	pop	r29
     416:	cf 91       	pop	r28
     418:	08 95       	ret

0000041a <record>:
}

/***** Create Methods *****/

void record(){
	 writeSong2();
     41a:	0e 94 de 01 	call	0x3bc	; 0x3bc <writeSong2>
}
     41e:	08 95       	ret

00000420 <main>:
void playSong();
void playSong2();


/***** Main Loop *****/
int main(void){
     420:	1f 93       	push	r17
	UBRRL = (unsigned char) baudrate;
	UCSRB = (1 << TXEN) | (1 << RXEN);
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
}
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
     422:	8f ef       	ldi	r24, 0xFF	; 255
     424:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
     426:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
     428:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
     42a:	17 e0       	ldi	r17, 0x07	; 7
     42c:	1b bb       	out	0x1b, r17	; 27
	DDRD = 0x00;
     42e:	11 ba       	out	0x11, r1	; 17


/***** Main Loop *****/
int main(void){
   setupPins();
   setupTimer();
     430:	0e 94 5d 00 	call	0xba	; 0xba <setupTimer>
	PORTB = 0x00; //Turns all leds off
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
	DDRD = 0x00;
}
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
     434:	87 e4       	ldi	r24, 0x47	; 71
     436:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
     438:	87 e8       	ldi	r24, 0x87	; 135
     43a:	86 b9       	out	0x06, r24	; 6
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
     43c:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) baudrate;
     43e:	19 b9       	out	0x09, r17	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
     440:	88 e1       	ldi	r24, 0x18	; 24
     442:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
     444:	86 e8       	ldi	r24, 0x86	; 134
     446:	80 bd       	out	0x20, r24	; 32
   setupTimer();
   setupAnalog();
   setupMIDI(BUAD_PRESCALE);

    while(1){
		uint8_t rec = PINA & 0x04;
     448:	89 b3       	in	r24, 0x19	; 25
		uint8_t play = PINA & 0x02;
     44a:	99 b3       	in	r25, 0x19	; 25
		uint8_t mod = PINA & 0x01;
     44c:	29 b3       	in	r18, 0x19	; 25
	
		if(rec && !play){
     44e:	82 ff       	sbrs	r24, 2
     450:	fb cf       	rjmp	.-10     	; 0x448 <main+0x28>
     452:	91 fd       	sbrc	r25, 1
     454:	f9 cf       	rjmp	.-14     	; 0x448 <main+0x28>
}

/***** Create Methods *****/

void record(){
	 writeSong2();
     456:	0e 94 de 01 	call	0x3bc	; 0x3bc <writeSong2>
     45a:	f6 cf       	rjmp	.-20     	; 0x448 <main+0x28>

0000045c <EEPROM_read>:
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     45c:	e1 99       	sbic	0x1c, 1	; 28
     45e:	fe cf       	rjmp	.-4      	; 0x45c <EEPROM_read>
	/* Set up address register */
	EEAR = uiAddress;
     460:	9f bb       	out	0x1f, r25	; 31
     462:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     464:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     466:	8d b3       	in	r24, 0x1d	; 29
}
     468:	08 95       	ret

0000046a <__fixunssfsi>:
     46a:	ef 92       	push	r14
     46c:	ff 92       	push	r15
     46e:	0f 93       	push	r16
     470:	1f 93       	push	r17
     472:	7b 01       	movw	r14, r22
     474:	8c 01       	movw	r16, r24
     476:	20 e0       	ldi	r18, 0x00	; 0
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	40 e0       	ldi	r20, 0x00	; 0
     47c:	5f e4       	ldi	r21, 0x4F	; 79
     47e:	0e 94 35 05 	call	0xa6a	; 0xa6a <__gesf2>
     482:	88 23       	and	r24, r24
     484:	8c f0       	brlt	.+34     	; 0x4a8 <__fixunssfsi+0x3e>
     486:	c8 01       	movw	r24, r16
     488:	b7 01       	movw	r22, r14
     48a:	20 e0       	ldi	r18, 0x00	; 0
     48c:	30 e0       	ldi	r19, 0x00	; 0
     48e:	40 e0       	ldi	r20, 0x00	; 0
     490:	5f e4       	ldi	r21, 0x4F	; 79
     492:	0e 94 ad 03 	call	0x75a	; 0x75a <__subsf3>
     496:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <__fixsfsi>
     49a:	9b 01       	movw	r18, r22
     49c:	ac 01       	movw	r20, r24
     49e:	20 50       	subi	r18, 0x00	; 0
     4a0:	30 40       	sbci	r19, 0x00	; 0
     4a2:	40 40       	sbci	r20, 0x00	; 0
     4a4:	50 48       	sbci	r21, 0x80	; 128
     4a6:	06 c0       	rjmp	.+12     	; 0x4b4 <__fixunssfsi+0x4a>
     4a8:	c8 01       	movw	r24, r16
     4aa:	b7 01       	movw	r22, r14
     4ac:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <__fixsfsi>
     4b0:	9b 01       	movw	r18, r22
     4b2:	ac 01       	movw	r20, r24
     4b4:	b9 01       	movw	r22, r18
     4b6:	ca 01       	movw	r24, r20
     4b8:	1f 91       	pop	r17
     4ba:	0f 91       	pop	r16
     4bc:	ff 90       	pop	r15
     4be:	ef 90       	pop	r14
     4c0:	08 95       	ret

000004c2 <_fpadd_parts>:
     4c2:	a0 e0       	ldi	r26, 0x00	; 0
     4c4:	b0 e0       	ldi	r27, 0x00	; 0
     4c6:	e7 e6       	ldi	r30, 0x67	; 103
     4c8:	f2 e0       	ldi	r31, 0x02	; 2
     4ca:	0c 94 b5 08 	jmp	0x116a	; 0x116a <__prologue_saves__>
     4ce:	dc 01       	movw	r26, r24
     4d0:	2b 01       	movw	r4, r22
     4d2:	fa 01       	movw	r30, r20
     4d4:	9c 91       	ld	r25, X
     4d6:	92 30       	cpi	r25, 0x02	; 2
     4d8:	08 f4       	brcc	.+2      	; 0x4dc <_fpadd_parts+0x1a>
     4da:	39 c1       	rjmp	.+626    	; 0x74e <_fpadd_parts+0x28c>
     4dc:	eb 01       	movw	r28, r22
     4de:	88 81       	ld	r24, Y
     4e0:	82 30       	cpi	r24, 0x02	; 2
     4e2:	08 f4       	brcc	.+2      	; 0x4e6 <_fpadd_parts+0x24>
     4e4:	33 c1       	rjmp	.+614    	; 0x74c <_fpadd_parts+0x28a>
     4e6:	94 30       	cpi	r25, 0x04	; 4
     4e8:	69 f4       	brne	.+26     	; 0x504 <_fpadd_parts+0x42>
     4ea:	84 30       	cpi	r24, 0x04	; 4
     4ec:	09 f0       	breq	.+2      	; 0x4f0 <_fpadd_parts+0x2e>
     4ee:	2f c1       	rjmp	.+606    	; 0x74e <_fpadd_parts+0x28c>
     4f0:	11 96       	adiw	r26, 0x01	; 1
     4f2:	9c 91       	ld	r25, X
     4f4:	11 97       	sbiw	r26, 0x01	; 1
     4f6:	89 81       	ldd	r24, Y+1	; 0x01
     4f8:	98 17       	cp	r25, r24
     4fa:	09 f4       	brne	.+2      	; 0x4fe <_fpadd_parts+0x3c>
     4fc:	28 c1       	rjmp	.+592    	; 0x74e <_fpadd_parts+0x28c>
     4fe:	a8 e6       	ldi	r26, 0x68	; 104
     500:	b0 e0       	ldi	r27, 0x00	; 0
     502:	25 c1       	rjmp	.+586    	; 0x74e <_fpadd_parts+0x28c>
     504:	84 30       	cpi	r24, 0x04	; 4
     506:	09 f4       	brne	.+2      	; 0x50a <_fpadd_parts+0x48>
     508:	21 c1       	rjmp	.+578    	; 0x74c <_fpadd_parts+0x28a>
     50a:	82 30       	cpi	r24, 0x02	; 2
     50c:	a9 f4       	brne	.+42     	; 0x538 <_fpadd_parts+0x76>
     50e:	92 30       	cpi	r25, 0x02	; 2
     510:	09 f0       	breq	.+2      	; 0x514 <_fpadd_parts+0x52>
     512:	1d c1       	rjmp	.+570    	; 0x74e <_fpadd_parts+0x28c>
     514:	9a 01       	movw	r18, r20
     516:	ad 01       	movw	r20, r26
     518:	88 e0       	ldi	r24, 0x08	; 8
     51a:	ea 01       	movw	r28, r20
     51c:	09 90       	ld	r0, Y+
     51e:	ae 01       	movw	r20, r28
     520:	e9 01       	movw	r28, r18
     522:	09 92       	st	Y+, r0
     524:	9e 01       	movw	r18, r28
     526:	81 50       	subi	r24, 0x01	; 1
     528:	c1 f7       	brne	.-16     	; 0x51a <_fpadd_parts+0x58>
     52a:	e2 01       	movw	r28, r4
     52c:	89 81       	ldd	r24, Y+1	; 0x01
     52e:	11 96       	adiw	r26, 0x01	; 1
     530:	9c 91       	ld	r25, X
     532:	89 23       	and	r24, r25
     534:	81 83       	std	Z+1, r24	; 0x01
     536:	08 c1       	rjmp	.+528    	; 0x748 <_fpadd_parts+0x286>
     538:	92 30       	cpi	r25, 0x02	; 2
     53a:	09 f4       	brne	.+2      	; 0x53e <_fpadd_parts+0x7c>
     53c:	07 c1       	rjmp	.+526    	; 0x74c <_fpadd_parts+0x28a>
     53e:	12 96       	adiw	r26, 0x02	; 2
     540:	2d 90       	ld	r2, X+
     542:	3c 90       	ld	r3, X
     544:	13 97       	sbiw	r26, 0x03	; 3
     546:	eb 01       	movw	r28, r22
     548:	8a 81       	ldd	r24, Y+2	; 0x02
     54a:	9b 81       	ldd	r25, Y+3	; 0x03
     54c:	14 96       	adiw	r26, 0x04	; 4
     54e:	ad 90       	ld	r10, X+
     550:	bd 90       	ld	r11, X+
     552:	cd 90       	ld	r12, X+
     554:	dc 90       	ld	r13, X
     556:	17 97       	sbiw	r26, 0x07	; 7
     558:	ec 80       	ldd	r14, Y+4	; 0x04
     55a:	fd 80       	ldd	r15, Y+5	; 0x05
     55c:	0e 81       	ldd	r16, Y+6	; 0x06
     55e:	1f 81       	ldd	r17, Y+7	; 0x07
     560:	91 01       	movw	r18, r2
     562:	28 1b       	sub	r18, r24
     564:	39 0b       	sbc	r19, r25
     566:	b9 01       	movw	r22, r18
     568:	37 ff       	sbrs	r19, 7
     56a:	04 c0       	rjmp	.+8      	; 0x574 <_fpadd_parts+0xb2>
     56c:	66 27       	eor	r22, r22
     56e:	77 27       	eor	r23, r23
     570:	62 1b       	sub	r22, r18
     572:	73 0b       	sbc	r23, r19
     574:	60 32       	cpi	r22, 0x20	; 32
     576:	71 05       	cpc	r23, r1
     578:	0c f0       	brlt	.+2      	; 0x57c <_fpadd_parts+0xba>
     57a:	61 c0       	rjmp	.+194    	; 0x63e <_fpadd_parts+0x17c>
     57c:	12 16       	cp	r1, r18
     57e:	13 06       	cpc	r1, r19
     580:	6c f5       	brge	.+90     	; 0x5dc <_fpadd_parts+0x11a>
     582:	37 01       	movw	r6, r14
     584:	48 01       	movw	r8, r16
     586:	06 2e       	mov	r0, r22
     588:	04 c0       	rjmp	.+8      	; 0x592 <_fpadd_parts+0xd0>
     58a:	96 94       	lsr	r9
     58c:	87 94       	ror	r8
     58e:	77 94       	ror	r7
     590:	67 94       	ror	r6
     592:	0a 94       	dec	r0
     594:	d2 f7       	brpl	.-12     	; 0x58a <_fpadd_parts+0xc8>
     596:	21 e0       	ldi	r18, 0x01	; 1
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	40 e0       	ldi	r20, 0x00	; 0
     59c:	50 e0       	ldi	r21, 0x00	; 0
     59e:	04 c0       	rjmp	.+8      	; 0x5a8 <_fpadd_parts+0xe6>
     5a0:	22 0f       	add	r18, r18
     5a2:	33 1f       	adc	r19, r19
     5a4:	44 1f       	adc	r20, r20
     5a6:	55 1f       	adc	r21, r21
     5a8:	6a 95       	dec	r22
     5aa:	d2 f7       	brpl	.-12     	; 0x5a0 <_fpadd_parts+0xde>
     5ac:	21 50       	subi	r18, 0x01	; 1
     5ae:	30 40       	sbci	r19, 0x00	; 0
     5b0:	40 40       	sbci	r20, 0x00	; 0
     5b2:	50 40       	sbci	r21, 0x00	; 0
     5b4:	2e 21       	and	r18, r14
     5b6:	3f 21       	and	r19, r15
     5b8:	40 23       	and	r20, r16
     5ba:	51 23       	and	r21, r17
     5bc:	21 15       	cp	r18, r1
     5be:	31 05       	cpc	r19, r1
     5c0:	41 05       	cpc	r20, r1
     5c2:	51 05       	cpc	r21, r1
     5c4:	21 f0       	breq	.+8      	; 0x5ce <_fpadd_parts+0x10c>
     5c6:	21 e0       	ldi	r18, 0x01	; 1
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e0       	ldi	r20, 0x00	; 0
     5cc:	50 e0       	ldi	r21, 0x00	; 0
     5ce:	79 01       	movw	r14, r18
     5d0:	8a 01       	movw	r16, r20
     5d2:	e6 28       	or	r14, r6
     5d4:	f7 28       	or	r15, r7
     5d6:	08 29       	or	r16, r8
     5d8:	19 29       	or	r17, r9
     5da:	3c c0       	rjmp	.+120    	; 0x654 <_fpadd_parts+0x192>
     5dc:	23 2b       	or	r18, r19
     5de:	d1 f1       	breq	.+116    	; 0x654 <_fpadd_parts+0x192>
     5e0:	26 0e       	add	r2, r22
     5e2:	37 1e       	adc	r3, r23
     5e4:	35 01       	movw	r6, r10
     5e6:	46 01       	movw	r8, r12
     5e8:	06 2e       	mov	r0, r22
     5ea:	04 c0       	rjmp	.+8      	; 0x5f4 <_fpadd_parts+0x132>
     5ec:	96 94       	lsr	r9
     5ee:	87 94       	ror	r8
     5f0:	77 94       	ror	r7
     5f2:	67 94       	ror	r6
     5f4:	0a 94       	dec	r0
     5f6:	d2 f7       	brpl	.-12     	; 0x5ec <_fpadd_parts+0x12a>
     5f8:	21 e0       	ldi	r18, 0x01	; 1
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	40 e0       	ldi	r20, 0x00	; 0
     5fe:	50 e0       	ldi	r21, 0x00	; 0
     600:	04 c0       	rjmp	.+8      	; 0x60a <_fpadd_parts+0x148>
     602:	22 0f       	add	r18, r18
     604:	33 1f       	adc	r19, r19
     606:	44 1f       	adc	r20, r20
     608:	55 1f       	adc	r21, r21
     60a:	6a 95       	dec	r22
     60c:	d2 f7       	brpl	.-12     	; 0x602 <_fpadd_parts+0x140>
     60e:	21 50       	subi	r18, 0x01	; 1
     610:	30 40       	sbci	r19, 0x00	; 0
     612:	40 40       	sbci	r20, 0x00	; 0
     614:	50 40       	sbci	r21, 0x00	; 0
     616:	2a 21       	and	r18, r10
     618:	3b 21       	and	r19, r11
     61a:	4c 21       	and	r20, r12
     61c:	5d 21       	and	r21, r13
     61e:	21 15       	cp	r18, r1
     620:	31 05       	cpc	r19, r1
     622:	41 05       	cpc	r20, r1
     624:	51 05       	cpc	r21, r1
     626:	21 f0       	breq	.+8      	; 0x630 <_fpadd_parts+0x16e>
     628:	21 e0       	ldi	r18, 0x01	; 1
     62a:	30 e0       	ldi	r19, 0x00	; 0
     62c:	40 e0       	ldi	r20, 0x00	; 0
     62e:	50 e0       	ldi	r21, 0x00	; 0
     630:	59 01       	movw	r10, r18
     632:	6a 01       	movw	r12, r20
     634:	a6 28       	or	r10, r6
     636:	b7 28       	or	r11, r7
     638:	c8 28       	or	r12, r8
     63a:	d9 28       	or	r13, r9
     63c:	0b c0       	rjmp	.+22     	; 0x654 <_fpadd_parts+0x192>
     63e:	82 15       	cp	r24, r2
     640:	93 05       	cpc	r25, r3
     642:	2c f0       	brlt	.+10     	; 0x64e <_fpadd_parts+0x18c>
     644:	1c 01       	movw	r2, r24
     646:	aa 24       	eor	r10, r10
     648:	bb 24       	eor	r11, r11
     64a:	65 01       	movw	r12, r10
     64c:	03 c0       	rjmp	.+6      	; 0x654 <_fpadd_parts+0x192>
     64e:	ee 24       	eor	r14, r14
     650:	ff 24       	eor	r15, r15
     652:	87 01       	movw	r16, r14
     654:	11 96       	adiw	r26, 0x01	; 1
     656:	9c 91       	ld	r25, X
     658:	d2 01       	movw	r26, r4
     65a:	11 96       	adiw	r26, 0x01	; 1
     65c:	8c 91       	ld	r24, X
     65e:	98 17       	cp	r25, r24
     660:	09 f4       	brne	.+2      	; 0x664 <_fpadd_parts+0x1a2>
     662:	45 c0       	rjmp	.+138    	; 0x6ee <_fpadd_parts+0x22c>
     664:	99 23       	and	r25, r25
     666:	39 f0       	breq	.+14     	; 0x676 <_fpadd_parts+0x1b4>
     668:	a8 01       	movw	r20, r16
     66a:	97 01       	movw	r18, r14
     66c:	2a 19       	sub	r18, r10
     66e:	3b 09       	sbc	r19, r11
     670:	4c 09       	sbc	r20, r12
     672:	5d 09       	sbc	r21, r13
     674:	06 c0       	rjmp	.+12     	; 0x682 <_fpadd_parts+0x1c0>
     676:	a6 01       	movw	r20, r12
     678:	95 01       	movw	r18, r10
     67a:	2e 19       	sub	r18, r14
     67c:	3f 09       	sbc	r19, r15
     67e:	40 0b       	sbc	r20, r16
     680:	51 0b       	sbc	r21, r17
     682:	57 fd       	sbrc	r21, 7
     684:	08 c0       	rjmp	.+16     	; 0x696 <_fpadd_parts+0x1d4>
     686:	11 82       	std	Z+1, r1	; 0x01
     688:	33 82       	std	Z+3, r3	; 0x03
     68a:	22 82       	std	Z+2, r2	; 0x02
     68c:	24 83       	std	Z+4, r18	; 0x04
     68e:	35 83       	std	Z+5, r19	; 0x05
     690:	46 83       	std	Z+6, r20	; 0x06
     692:	57 83       	std	Z+7, r21	; 0x07
     694:	1d c0       	rjmp	.+58     	; 0x6d0 <_fpadd_parts+0x20e>
     696:	81 e0       	ldi	r24, 0x01	; 1
     698:	81 83       	std	Z+1, r24	; 0x01
     69a:	33 82       	std	Z+3, r3	; 0x03
     69c:	22 82       	std	Z+2, r2	; 0x02
     69e:	88 27       	eor	r24, r24
     6a0:	99 27       	eor	r25, r25
     6a2:	dc 01       	movw	r26, r24
     6a4:	82 1b       	sub	r24, r18
     6a6:	93 0b       	sbc	r25, r19
     6a8:	a4 0b       	sbc	r26, r20
     6aa:	b5 0b       	sbc	r27, r21
     6ac:	84 83       	std	Z+4, r24	; 0x04
     6ae:	95 83       	std	Z+5, r25	; 0x05
     6b0:	a6 83       	std	Z+6, r26	; 0x06
     6b2:	b7 83       	std	Z+7, r27	; 0x07
     6b4:	0d c0       	rjmp	.+26     	; 0x6d0 <_fpadd_parts+0x20e>
     6b6:	22 0f       	add	r18, r18
     6b8:	33 1f       	adc	r19, r19
     6ba:	44 1f       	adc	r20, r20
     6bc:	55 1f       	adc	r21, r21
     6be:	24 83       	std	Z+4, r18	; 0x04
     6c0:	35 83       	std	Z+5, r19	; 0x05
     6c2:	46 83       	std	Z+6, r20	; 0x06
     6c4:	57 83       	std	Z+7, r21	; 0x07
     6c6:	82 81       	ldd	r24, Z+2	; 0x02
     6c8:	93 81       	ldd	r25, Z+3	; 0x03
     6ca:	01 97       	sbiw	r24, 0x01	; 1
     6cc:	93 83       	std	Z+3, r25	; 0x03
     6ce:	82 83       	std	Z+2, r24	; 0x02
     6d0:	24 81       	ldd	r18, Z+4	; 0x04
     6d2:	35 81       	ldd	r19, Z+5	; 0x05
     6d4:	46 81       	ldd	r20, Z+6	; 0x06
     6d6:	57 81       	ldd	r21, Z+7	; 0x07
     6d8:	da 01       	movw	r26, r20
     6da:	c9 01       	movw	r24, r18
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	a1 09       	sbc	r26, r1
     6e0:	b1 09       	sbc	r27, r1
     6e2:	8f 5f       	subi	r24, 0xFF	; 255
     6e4:	9f 4f       	sbci	r25, 0xFF	; 255
     6e6:	af 4f       	sbci	r26, 0xFF	; 255
     6e8:	bf 43       	sbci	r27, 0x3F	; 63
     6ea:	28 f3       	brcs	.-54     	; 0x6b6 <_fpadd_parts+0x1f4>
     6ec:	0b c0       	rjmp	.+22     	; 0x704 <_fpadd_parts+0x242>
     6ee:	91 83       	std	Z+1, r25	; 0x01
     6f0:	33 82       	std	Z+3, r3	; 0x03
     6f2:	22 82       	std	Z+2, r2	; 0x02
     6f4:	ea 0c       	add	r14, r10
     6f6:	fb 1c       	adc	r15, r11
     6f8:	0c 1d       	adc	r16, r12
     6fa:	1d 1d       	adc	r17, r13
     6fc:	e4 82       	std	Z+4, r14	; 0x04
     6fe:	f5 82       	std	Z+5, r15	; 0x05
     700:	06 83       	std	Z+6, r16	; 0x06
     702:	17 83       	std	Z+7, r17	; 0x07
     704:	83 e0       	ldi	r24, 0x03	; 3
     706:	80 83       	st	Z, r24
     708:	24 81       	ldd	r18, Z+4	; 0x04
     70a:	35 81       	ldd	r19, Z+5	; 0x05
     70c:	46 81       	ldd	r20, Z+6	; 0x06
     70e:	57 81       	ldd	r21, Z+7	; 0x07
     710:	57 ff       	sbrs	r21, 7
     712:	1a c0       	rjmp	.+52     	; 0x748 <_fpadd_parts+0x286>
     714:	c9 01       	movw	r24, r18
     716:	aa 27       	eor	r26, r26
     718:	97 fd       	sbrc	r25, 7
     71a:	a0 95       	com	r26
     71c:	ba 2f       	mov	r27, r26
     71e:	81 70       	andi	r24, 0x01	; 1
     720:	90 70       	andi	r25, 0x00	; 0
     722:	a0 70       	andi	r26, 0x00	; 0
     724:	b0 70       	andi	r27, 0x00	; 0
     726:	56 95       	lsr	r21
     728:	47 95       	ror	r20
     72a:	37 95       	ror	r19
     72c:	27 95       	ror	r18
     72e:	82 2b       	or	r24, r18
     730:	93 2b       	or	r25, r19
     732:	a4 2b       	or	r26, r20
     734:	b5 2b       	or	r27, r21
     736:	84 83       	std	Z+4, r24	; 0x04
     738:	95 83       	std	Z+5, r25	; 0x05
     73a:	a6 83       	std	Z+6, r26	; 0x06
     73c:	b7 83       	std	Z+7, r27	; 0x07
     73e:	82 81       	ldd	r24, Z+2	; 0x02
     740:	93 81       	ldd	r25, Z+3	; 0x03
     742:	01 96       	adiw	r24, 0x01	; 1
     744:	93 83       	std	Z+3, r25	; 0x03
     746:	82 83       	std	Z+2, r24	; 0x02
     748:	df 01       	movw	r26, r30
     74a:	01 c0       	rjmp	.+2      	; 0x74e <_fpadd_parts+0x28c>
     74c:	d2 01       	movw	r26, r4
     74e:	cd 01       	movw	r24, r26
     750:	cd b7       	in	r28, 0x3d	; 61
     752:	de b7       	in	r29, 0x3e	; 62
     754:	e2 e1       	ldi	r30, 0x12	; 18
     756:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__epilogue_restores__>

0000075a <__subsf3>:
     75a:	a0 e2       	ldi	r26, 0x20	; 32
     75c:	b0 e0       	ldi	r27, 0x00	; 0
     75e:	e3 eb       	ldi	r30, 0xB3	; 179
     760:	f3 e0       	ldi	r31, 0x03	; 3
     762:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <__prologue_saves__+0x18>
     766:	69 83       	std	Y+1, r22	; 0x01
     768:	7a 83       	std	Y+2, r23	; 0x02
     76a:	8b 83       	std	Y+3, r24	; 0x03
     76c:	9c 83       	std	Y+4, r25	; 0x04
     76e:	2d 83       	std	Y+5, r18	; 0x05
     770:	3e 83       	std	Y+6, r19	; 0x06
     772:	4f 83       	std	Y+7, r20	; 0x07
     774:	58 87       	std	Y+8, r21	; 0x08
     776:	e9 e0       	ldi	r30, 0x09	; 9
     778:	ee 2e       	mov	r14, r30
     77a:	f1 2c       	mov	r15, r1
     77c:	ec 0e       	add	r14, r28
     77e:	fd 1e       	adc	r15, r29
     780:	ce 01       	movw	r24, r28
     782:	01 96       	adiw	r24, 0x01	; 1
     784:	b7 01       	movw	r22, r14
     786:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     78a:	8e 01       	movw	r16, r28
     78c:	0f 5e       	subi	r16, 0xEF	; 239
     78e:	1f 4f       	sbci	r17, 0xFF	; 255
     790:	ce 01       	movw	r24, r28
     792:	05 96       	adiw	r24, 0x05	; 5
     794:	b8 01       	movw	r22, r16
     796:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     79a:	8a 89       	ldd	r24, Y+18	; 0x12
     79c:	91 e0       	ldi	r25, 0x01	; 1
     79e:	89 27       	eor	r24, r25
     7a0:	8a 8b       	std	Y+18, r24	; 0x12
     7a2:	c7 01       	movw	r24, r14
     7a4:	b8 01       	movw	r22, r16
     7a6:	ae 01       	movw	r20, r28
     7a8:	47 5e       	subi	r20, 0xE7	; 231
     7aa:	5f 4f       	sbci	r21, 0xFF	; 255
     7ac:	0e 94 61 02 	call	0x4c2	; 0x4c2 <_fpadd_parts>
     7b0:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__pack_f>
     7b4:	a0 96       	adiw	r28, 0x20	; 32
     7b6:	e6 e0       	ldi	r30, 0x06	; 6
     7b8:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__epilogue_restores__+0x18>

000007bc <__addsf3>:
     7bc:	a0 e2       	ldi	r26, 0x20	; 32
     7be:	b0 e0       	ldi	r27, 0x00	; 0
     7c0:	e4 ee       	ldi	r30, 0xE4	; 228
     7c2:	f3 e0       	ldi	r31, 0x03	; 3
     7c4:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <__prologue_saves__+0x18>
     7c8:	69 83       	std	Y+1, r22	; 0x01
     7ca:	7a 83       	std	Y+2, r23	; 0x02
     7cc:	8b 83       	std	Y+3, r24	; 0x03
     7ce:	9c 83       	std	Y+4, r25	; 0x04
     7d0:	2d 83       	std	Y+5, r18	; 0x05
     7d2:	3e 83       	std	Y+6, r19	; 0x06
     7d4:	4f 83       	std	Y+7, r20	; 0x07
     7d6:	58 87       	std	Y+8, r21	; 0x08
     7d8:	f9 e0       	ldi	r31, 0x09	; 9
     7da:	ef 2e       	mov	r14, r31
     7dc:	f1 2c       	mov	r15, r1
     7de:	ec 0e       	add	r14, r28
     7e0:	fd 1e       	adc	r15, r29
     7e2:	ce 01       	movw	r24, r28
     7e4:	01 96       	adiw	r24, 0x01	; 1
     7e6:	b7 01       	movw	r22, r14
     7e8:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     7ec:	8e 01       	movw	r16, r28
     7ee:	0f 5e       	subi	r16, 0xEF	; 239
     7f0:	1f 4f       	sbci	r17, 0xFF	; 255
     7f2:	ce 01       	movw	r24, r28
     7f4:	05 96       	adiw	r24, 0x05	; 5
     7f6:	b8 01       	movw	r22, r16
     7f8:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     7fc:	c7 01       	movw	r24, r14
     7fe:	b8 01       	movw	r22, r16
     800:	ae 01       	movw	r20, r28
     802:	47 5e       	subi	r20, 0xE7	; 231
     804:	5f 4f       	sbci	r21, 0xFF	; 255
     806:	0e 94 61 02 	call	0x4c2	; 0x4c2 <_fpadd_parts>
     80a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__pack_f>
     80e:	a0 96       	adiw	r28, 0x20	; 32
     810:	e6 e0       	ldi	r30, 0x06	; 6
     812:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__epilogue_restores__+0x18>

00000816 <__mulsf3>:
     816:	a0 e2       	ldi	r26, 0x20	; 32
     818:	b0 e0       	ldi	r27, 0x00	; 0
     81a:	e1 e1       	ldi	r30, 0x11	; 17
     81c:	f4 e0       	ldi	r31, 0x04	; 4
     81e:	0c 94 b5 08 	jmp	0x116a	; 0x116a <__prologue_saves__>
     822:	69 83       	std	Y+1, r22	; 0x01
     824:	7a 83       	std	Y+2, r23	; 0x02
     826:	8b 83       	std	Y+3, r24	; 0x03
     828:	9c 83       	std	Y+4, r25	; 0x04
     82a:	2d 83       	std	Y+5, r18	; 0x05
     82c:	3e 83       	std	Y+6, r19	; 0x06
     82e:	4f 83       	std	Y+7, r20	; 0x07
     830:	58 87       	std	Y+8, r21	; 0x08
     832:	ce 01       	movw	r24, r28
     834:	01 96       	adiw	r24, 0x01	; 1
     836:	be 01       	movw	r22, r28
     838:	67 5f       	subi	r22, 0xF7	; 247
     83a:	7f 4f       	sbci	r23, 0xFF	; 255
     83c:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     840:	ce 01       	movw	r24, r28
     842:	05 96       	adiw	r24, 0x05	; 5
     844:	be 01       	movw	r22, r28
     846:	6f 5e       	subi	r22, 0xEF	; 239
     848:	7f 4f       	sbci	r23, 0xFF	; 255
     84a:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     84e:	99 85       	ldd	r25, Y+9	; 0x09
     850:	92 30       	cpi	r25, 0x02	; 2
     852:	88 f0       	brcs	.+34     	; 0x876 <__stack+0x17>
     854:	89 89       	ldd	r24, Y+17	; 0x11
     856:	82 30       	cpi	r24, 0x02	; 2
     858:	c8 f0       	brcs	.+50     	; 0x88c <__stack+0x2d>
     85a:	94 30       	cpi	r25, 0x04	; 4
     85c:	19 f4       	brne	.+6      	; 0x864 <__stack+0x5>
     85e:	82 30       	cpi	r24, 0x02	; 2
     860:	51 f4       	brne	.+20     	; 0x876 <__stack+0x17>
     862:	04 c0       	rjmp	.+8      	; 0x86c <__stack+0xd>
     864:	84 30       	cpi	r24, 0x04	; 4
     866:	29 f4       	brne	.+10     	; 0x872 <__stack+0x13>
     868:	92 30       	cpi	r25, 0x02	; 2
     86a:	81 f4       	brne	.+32     	; 0x88c <__stack+0x2d>
     86c:	88 e6       	ldi	r24, 0x68	; 104
     86e:	90 e0       	ldi	r25, 0x00	; 0
     870:	c6 c0       	rjmp	.+396    	; 0x9fe <__stack+0x19f>
     872:	92 30       	cpi	r25, 0x02	; 2
     874:	49 f4       	brne	.+18     	; 0x888 <__stack+0x29>
     876:	20 e0       	ldi	r18, 0x00	; 0
     878:	9a 85       	ldd	r25, Y+10	; 0x0a
     87a:	8a 89       	ldd	r24, Y+18	; 0x12
     87c:	98 13       	cpse	r25, r24
     87e:	21 e0       	ldi	r18, 0x01	; 1
     880:	2a 87       	std	Y+10, r18	; 0x0a
     882:	ce 01       	movw	r24, r28
     884:	09 96       	adiw	r24, 0x09	; 9
     886:	bb c0       	rjmp	.+374    	; 0x9fe <__stack+0x19f>
     888:	82 30       	cpi	r24, 0x02	; 2
     88a:	49 f4       	brne	.+18     	; 0x89e <__stack+0x3f>
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	9a 85       	ldd	r25, Y+10	; 0x0a
     890:	8a 89       	ldd	r24, Y+18	; 0x12
     892:	98 13       	cpse	r25, r24
     894:	21 e0       	ldi	r18, 0x01	; 1
     896:	2a 8b       	std	Y+18, r18	; 0x12
     898:	ce 01       	movw	r24, r28
     89a:	41 96       	adiw	r24, 0x11	; 17
     89c:	b0 c0       	rjmp	.+352    	; 0x9fe <__stack+0x19f>
     89e:	2d 84       	ldd	r2, Y+13	; 0x0d
     8a0:	3e 84       	ldd	r3, Y+14	; 0x0e
     8a2:	4f 84       	ldd	r4, Y+15	; 0x0f
     8a4:	58 88       	ldd	r5, Y+16	; 0x10
     8a6:	6d 88       	ldd	r6, Y+21	; 0x15
     8a8:	7e 88       	ldd	r7, Y+22	; 0x16
     8aa:	8f 88       	ldd	r8, Y+23	; 0x17
     8ac:	98 8c       	ldd	r9, Y+24	; 0x18
     8ae:	ee 24       	eor	r14, r14
     8b0:	ff 24       	eor	r15, r15
     8b2:	87 01       	movw	r16, r14
     8b4:	aa 24       	eor	r10, r10
     8b6:	bb 24       	eor	r11, r11
     8b8:	65 01       	movw	r12, r10
     8ba:	40 e0       	ldi	r20, 0x00	; 0
     8bc:	50 e0       	ldi	r21, 0x00	; 0
     8be:	60 e0       	ldi	r22, 0x00	; 0
     8c0:	70 e0       	ldi	r23, 0x00	; 0
     8c2:	e0 e0       	ldi	r30, 0x00	; 0
     8c4:	f0 e0       	ldi	r31, 0x00	; 0
     8c6:	c1 01       	movw	r24, r2
     8c8:	81 70       	andi	r24, 0x01	; 1
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	89 2b       	or	r24, r25
     8ce:	e9 f0       	breq	.+58     	; 0x90a <__stack+0xab>
     8d0:	e6 0c       	add	r14, r6
     8d2:	f7 1c       	adc	r15, r7
     8d4:	08 1d       	adc	r16, r8
     8d6:	19 1d       	adc	r17, r9
     8d8:	9a 01       	movw	r18, r20
     8da:	ab 01       	movw	r20, r22
     8dc:	2a 0d       	add	r18, r10
     8de:	3b 1d       	adc	r19, r11
     8e0:	4c 1d       	adc	r20, r12
     8e2:	5d 1d       	adc	r21, r13
     8e4:	80 e0       	ldi	r24, 0x00	; 0
     8e6:	90 e0       	ldi	r25, 0x00	; 0
     8e8:	a0 e0       	ldi	r26, 0x00	; 0
     8ea:	b0 e0       	ldi	r27, 0x00	; 0
     8ec:	e6 14       	cp	r14, r6
     8ee:	f7 04       	cpc	r15, r7
     8f0:	08 05       	cpc	r16, r8
     8f2:	19 05       	cpc	r17, r9
     8f4:	20 f4       	brcc	.+8      	; 0x8fe <__stack+0x9f>
     8f6:	81 e0       	ldi	r24, 0x01	; 1
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	b0 e0       	ldi	r27, 0x00	; 0
     8fe:	ba 01       	movw	r22, r20
     900:	a9 01       	movw	r20, r18
     902:	48 0f       	add	r20, r24
     904:	59 1f       	adc	r21, r25
     906:	6a 1f       	adc	r22, r26
     908:	7b 1f       	adc	r23, r27
     90a:	aa 0c       	add	r10, r10
     90c:	bb 1c       	adc	r11, r11
     90e:	cc 1c       	adc	r12, r12
     910:	dd 1c       	adc	r13, r13
     912:	97 fe       	sbrs	r9, 7
     914:	08 c0       	rjmp	.+16     	; 0x926 <__stack+0xc7>
     916:	81 e0       	ldi	r24, 0x01	; 1
     918:	90 e0       	ldi	r25, 0x00	; 0
     91a:	a0 e0       	ldi	r26, 0x00	; 0
     91c:	b0 e0       	ldi	r27, 0x00	; 0
     91e:	a8 2a       	or	r10, r24
     920:	b9 2a       	or	r11, r25
     922:	ca 2a       	or	r12, r26
     924:	db 2a       	or	r13, r27
     926:	31 96       	adiw	r30, 0x01	; 1
     928:	e0 32       	cpi	r30, 0x20	; 32
     92a:	f1 05       	cpc	r31, r1
     92c:	49 f0       	breq	.+18     	; 0x940 <__stack+0xe1>
     92e:	66 0c       	add	r6, r6
     930:	77 1c       	adc	r7, r7
     932:	88 1c       	adc	r8, r8
     934:	99 1c       	adc	r9, r9
     936:	56 94       	lsr	r5
     938:	47 94       	ror	r4
     93a:	37 94       	ror	r3
     93c:	27 94       	ror	r2
     93e:	c3 cf       	rjmp	.-122    	; 0x8c6 <__stack+0x67>
     940:	fa 85       	ldd	r31, Y+10	; 0x0a
     942:	ea 89       	ldd	r30, Y+18	; 0x12
     944:	2b 89       	ldd	r18, Y+19	; 0x13
     946:	3c 89       	ldd	r19, Y+20	; 0x14
     948:	8b 85       	ldd	r24, Y+11	; 0x0b
     94a:	9c 85       	ldd	r25, Y+12	; 0x0c
     94c:	28 0f       	add	r18, r24
     94e:	39 1f       	adc	r19, r25
     950:	2e 5f       	subi	r18, 0xFE	; 254
     952:	3f 4f       	sbci	r19, 0xFF	; 255
     954:	17 c0       	rjmp	.+46     	; 0x984 <__stack+0x125>
     956:	ca 01       	movw	r24, r20
     958:	81 70       	andi	r24, 0x01	; 1
     95a:	90 70       	andi	r25, 0x00	; 0
     95c:	89 2b       	or	r24, r25
     95e:	61 f0       	breq	.+24     	; 0x978 <__stack+0x119>
     960:	16 95       	lsr	r17
     962:	07 95       	ror	r16
     964:	f7 94       	ror	r15
     966:	e7 94       	ror	r14
     968:	80 e0       	ldi	r24, 0x00	; 0
     96a:	90 e0       	ldi	r25, 0x00	; 0
     96c:	a0 e0       	ldi	r26, 0x00	; 0
     96e:	b0 e8       	ldi	r27, 0x80	; 128
     970:	e8 2a       	or	r14, r24
     972:	f9 2a       	or	r15, r25
     974:	0a 2b       	or	r16, r26
     976:	1b 2b       	or	r17, r27
     978:	76 95       	lsr	r23
     97a:	67 95       	ror	r22
     97c:	57 95       	ror	r21
     97e:	47 95       	ror	r20
     980:	2f 5f       	subi	r18, 0xFF	; 255
     982:	3f 4f       	sbci	r19, 0xFF	; 255
     984:	77 fd       	sbrc	r23, 7
     986:	e7 cf       	rjmp	.-50     	; 0x956 <__stack+0xf7>
     988:	0c c0       	rjmp	.+24     	; 0x9a2 <__stack+0x143>
     98a:	44 0f       	add	r20, r20
     98c:	55 1f       	adc	r21, r21
     98e:	66 1f       	adc	r22, r22
     990:	77 1f       	adc	r23, r23
     992:	17 fd       	sbrc	r17, 7
     994:	41 60       	ori	r20, 0x01	; 1
     996:	ee 0c       	add	r14, r14
     998:	ff 1c       	adc	r15, r15
     99a:	00 1f       	adc	r16, r16
     99c:	11 1f       	adc	r17, r17
     99e:	21 50       	subi	r18, 0x01	; 1
     9a0:	30 40       	sbci	r19, 0x00	; 0
     9a2:	40 30       	cpi	r20, 0x00	; 0
     9a4:	90 e0       	ldi	r25, 0x00	; 0
     9a6:	59 07       	cpc	r21, r25
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	69 07       	cpc	r22, r25
     9ac:	90 e4       	ldi	r25, 0x40	; 64
     9ae:	79 07       	cpc	r23, r25
     9b0:	60 f3       	brcs	.-40     	; 0x98a <__stack+0x12b>
     9b2:	2b 8f       	std	Y+27, r18	; 0x1b
     9b4:	3c 8f       	std	Y+28, r19	; 0x1c
     9b6:	db 01       	movw	r26, r22
     9b8:	ca 01       	movw	r24, r20
     9ba:	8f 77       	andi	r24, 0x7F	; 127
     9bc:	90 70       	andi	r25, 0x00	; 0
     9be:	a0 70       	andi	r26, 0x00	; 0
     9c0:	b0 70       	andi	r27, 0x00	; 0
     9c2:	80 34       	cpi	r24, 0x40	; 64
     9c4:	91 05       	cpc	r25, r1
     9c6:	a1 05       	cpc	r26, r1
     9c8:	b1 05       	cpc	r27, r1
     9ca:	61 f4       	brne	.+24     	; 0x9e4 <__stack+0x185>
     9cc:	47 fd       	sbrc	r20, 7
     9ce:	0a c0       	rjmp	.+20     	; 0x9e4 <__stack+0x185>
     9d0:	e1 14       	cp	r14, r1
     9d2:	f1 04       	cpc	r15, r1
     9d4:	01 05       	cpc	r16, r1
     9d6:	11 05       	cpc	r17, r1
     9d8:	29 f0       	breq	.+10     	; 0x9e4 <__stack+0x185>
     9da:	40 5c       	subi	r20, 0xC0	; 192
     9dc:	5f 4f       	sbci	r21, 0xFF	; 255
     9de:	6f 4f       	sbci	r22, 0xFF	; 255
     9e0:	7f 4f       	sbci	r23, 0xFF	; 255
     9e2:	40 78       	andi	r20, 0x80	; 128
     9e4:	1a 8e       	std	Y+26, r1	; 0x1a
     9e6:	fe 17       	cp	r31, r30
     9e8:	11 f0       	breq	.+4      	; 0x9ee <__stack+0x18f>
     9ea:	81 e0       	ldi	r24, 0x01	; 1
     9ec:	8a 8f       	std	Y+26, r24	; 0x1a
     9ee:	4d 8f       	std	Y+29, r20	; 0x1d
     9f0:	5e 8f       	std	Y+30, r21	; 0x1e
     9f2:	6f 8f       	std	Y+31, r22	; 0x1f
     9f4:	78 a3       	std	Y+32, r23	; 0x20
     9f6:	83 e0       	ldi	r24, 0x03	; 3
     9f8:	89 8f       	std	Y+25, r24	; 0x19
     9fa:	ce 01       	movw	r24, r28
     9fc:	49 96       	adiw	r24, 0x19	; 25
     9fe:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__pack_f>
     a02:	a0 96       	adiw	r28, 0x20	; 32
     a04:	e2 e1       	ldi	r30, 0x12	; 18
     a06:	0c 94 d1 08 	jmp	0x11a2	; 0x11a2 <__epilogue_restores__>

00000a0a <__gtsf2>:
     a0a:	a8 e1       	ldi	r26, 0x18	; 24
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	eb e0       	ldi	r30, 0x0B	; 11
     a10:	f5 e0       	ldi	r31, 0x05	; 5
     a12:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <__prologue_saves__+0x18>
     a16:	69 83       	std	Y+1, r22	; 0x01
     a18:	7a 83       	std	Y+2, r23	; 0x02
     a1a:	8b 83       	std	Y+3, r24	; 0x03
     a1c:	9c 83       	std	Y+4, r25	; 0x04
     a1e:	2d 83       	std	Y+5, r18	; 0x05
     a20:	3e 83       	std	Y+6, r19	; 0x06
     a22:	4f 83       	std	Y+7, r20	; 0x07
     a24:	58 87       	std	Y+8, r21	; 0x08
     a26:	89 e0       	ldi	r24, 0x09	; 9
     a28:	e8 2e       	mov	r14, r24
     a2a:	f1 2c       	mov	r15, r1
     a2c:	ec 0e       	add	r14, r28
     a2e:	fd 1e       	adc	r15, r29
     a30:	ce 01       	movw	r24, r28
     a32:	01 96       	adiw	r24, 0x01	; 1
     a34:	b7 01       	movw	r22, r14
     a36:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     a3a:	8e 01       	movw	r16, r28
     a3c:	0f 5e       	subi	r16, 0xEF	; 239
     a3e:	1f 4f       	sbci	r17, 0xFF	; 255
     a40:	ce 01       	movw	r24, r28
     a42:	05 96       	adiw	r24, 0x05	; 5
     a44:	b8 01       	movw	r22, r16
     a46:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     a4a:	89 85       	ldd	r24, Y+9	; 0x09
     a4c:	82 30       	cpi	r24, 0x02	; 2
     a4e:	40 f0       	brcs	.+16     	; 0xa60 <__gtsf2+0x56>
     a50:	89 89       	ldd	r24, Y+17	; 0x11
     a52:	82 30       	cpi	r24, 0x02	; 2
     a54:	28 f0       	brcs	.+10     	; 0xa60 <__gtsf2+0x56>
     a56:	c7 01       	movw	r24, r14
     a58:	b8 01       	movw	r22, r16
     a5a:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__fpcmp_parts_f>
     a5e:	01 c0       	rjmp	.+2      	; 0xa62 <__gtsf2+0x58>
     a60:	8f ef       	ldi	r24, 0xFF	; 255
     a62:	68 96       	adiw	r28, 0x18	; 24
     a64:	e6 e0       	ldi	r30, 0x06	; 6
     a66:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__epilogue_restores__+0x18>

00000a6a <__gesf2>:
     a6a:	a8 e1       	ldi	r26, 0x18	; 24
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	eb e3       	ldi	r30, 0x3B	; 59
     a70:	f5 e0       	ldi	r31, 0x05	; 5
     a72:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <__prologue_saves__+0x18>
     a76:	69 83       	std	Y+1, r22	; 0x01
     a78:	7a 83       	std	Y+2, r23	; 0x02
     a7a:	8b 83       	std	Y+3, r24	; 0x03
     a7c:	9c 83       	std	Y+4, r25	; 0x04
     a7e:	2d 83       	std	Y+5, r18	; 0x05
     a80:	3e 83       	std	Y+6, r19	; 0x06
     a82:	4f 83       	std	Y+7, r20	; 0x07
     a84:	58 87       	std	Y+8, r21	; 0x08
     a86:	89 e0       	ldi	r24, 0x09	; 9
     a88:	e8 2e       	mov	r14, r24
     a8a:	f1 2c       	mov	r15, r1
     a8c:	ec 0e       	add	r14, r28
     a8e:	fd 1e       	adc	r15, r29
     a90:	ce 01       	movw	r24, r28
     a92:	01 96       	adiw	r24, 0x01	; 1
     a94:	b7 01       	movw	r22, r14
     a96:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     a9a:	8e 01       	movw	r16, r28
     a9c:	0f 5e       	subi	r16, 0xEF	; 239
     a9e:	1f 4f       	sbci	r17, 0xFF	; 255
     aa0:	ce 01       	movw	r24, r28
     aa2:	05 96       	adiw	r24, 0x05	; 5
     aa4:	b8 01       	movw	r22, r16
     aa6:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     aaa:	89 85       	ldd	r24, Y+9	; 0x09
     aac:	82 30       	cpi	r24, 0x02	; 2
     aae:	40 f0       	brcs	.+16     	; 0xac0 <__gesf2+0x56>
     ab0:	89 89       	ldd	r24, Y+17	; 0x11
     ab2:	82 30       	cpi	r24, 0x02	; 2
     ab4:	28 f0       	brcs	.+10     	; 0xac0 <__gesf2+0x56>
     ab6:	c7 01       	movw	r24, r14
     ab8:	b8 01       	movw	r22, r16
     aba:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__fpcmp_parts_f>
     abe:	01 c0       	rjmp	.+2      	; 0xac2 <__gesf2+0x58>
     ac0:	8f ef       	ldi	r24, 0xFF	; 255
     ac2:	68 96       	adiw	r28, 0x18	; 24
     ac4:	e6 e0       	ldi	r30, 0x06	; 6
     ac6:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__epilogue_restores__+0x18>

00000aca <__ltsf2>:
     aca:	a8 e1       	ldi	r26, 0x18	; 24
     acc:	b0 e0       	ldi	r27, 0x00	; 0
     ace:	eb e6       	ldi	r30, 0x6B	; 107
     ad0:	f5 e0       	ldi	r31, 0x05	; 5
     ad2:	0c 94 c1 08 	jmp	0x1182	; 0x1182 <__prologue_saves__+0x18>
     ad6:	69 83       	std	Y+1, r22	; 0x01
     ad8:	7a 83       	std	Y+2, r23	; 0x02
     ada:	8b 83       	std	Y+3, r24	; 0x03
     adc:	9c 83       	std	Y+4, r25	; 0x04
     ade:	2d 83       	std	Y+5, r18	; 0x05
     ae0:	3e 83       	std	Y+6, r19	; 0x06
     ae2:	4f 83       	std	Y+7, r20	; 0x07
     ae4:	58 87       	std	Y+8, r21	; 0x08
     ae6:	89 e0       	ldi	r24, 0x09	; 9
     ae8:	e8 2e       	mov	r14, r24
     aea:	f1 2c       	mov	r15, r1
     aec:	ec 0e       	add	r14, r28
     aee:	fd 1e       	adc	r15, r29
     af0:	ce 01       	movw	r24, r28
     af2:	01 96       	adiw	r24, 0x01	; 1
     af4:	b7 01       	movw	r22, r14
     af6:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     afa:	8e 01       	movw	r16, r28
     afc:	0f 5e       	subi	r16, 0xEF	; 239
     afe:	1f 4f       	sbci	r17, 0xFF	; 255
     b00:	ce 01       	movw	r24, r28
     b02:	05 96       	adiw	r24, 0x05	; 5
     b04:	b8 01       	movw	r22, r16
     b06:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     b0a:	89 85       	ldd	r24, Y+9	; 0x09
     b0c:	82 30       	cpi	r24, 0x02	; 2
     b0e:	40 f0       	brcs	.+16     	; 0xb20 <__ltsf2+0x56>
     b10:	89 89       	ldd	r24, Y+17	; 0x11
     b12:	82 30       	cpi	r24, 0x02	; 2
     b14:	28 f0       	brcs	.+10     	; 0xb20 <__ltsf2+0x56>
     b16:	c7 01       	movw	r24, r14
     b18:	b8 01       	movw	r22, r16
     b1a:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__fpcmp_parts_f>
     b1e:	01 c0       	rjmp	.+2      	; 0xb22 <__ltsf2+0x58>
     b20:	81 e0       	ldi	r24, 0x01	; 1
     b22:	68 96       	adiw	r28, 0x18	; 24
     b24:	e6 e0       	ldi	r30, 0x06	; 6
     b26:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__epilogue_restores__+0x18>

00000b2a <__floatsisf>:
     b2a:	a8 e0       	ldi	r26, 0x08	; 8
     b2c:	b0 e0       	ldi	r27, 0x00	; 0
     b2e:	eb e9       	ldi	r30, 0x9B	; 155
     b30:	f5 e0       	ldi	r31, 0x05	; 5
     b32:	0c 94 be 08 	jmp	0x117c	; 0x117c <__prologue_saves__+0x12>
     b36:	9b 01       	movw	r18, r22
     b38:	ac 01       	movw	r20, r24
     b3a:	83 e0       	ldi	r24, 0x03	; 3
     b3c:	89 83       	std	Y+1, r24	; 0x01
     b3e:	da 01       	movw	r26, r20
     b40:	c9 01       	movw	r24, r18
     b42:	88 27       	eor	r24, r24
     b44:	b7 fd       	sbrc	r27, 7
     b46:	83 95       	inc	r24
     b48:	99 27       	eor	r25, r25
     b4a:	aa 27       	eor	r26, r26
     b4c:	bb 27       	eor	r27, r27
     b4e:	b8 2e       	mov	r11, r24
     b50:	21 15       	cp	r18, r1
     b52:	31 05       	cpc	r19, r1
     b54:	41 05       	cpc	r20, r1
     b56:	51 05       	cpc	r21, r1
     b58:	19 f4       	brne	.+6      	; 0xb60 <__floatsisf+0x36>
     b5a:	82 e0       	ldi	r24, 0x02	; 2
     b5c:	89 83       	std	Y+1, r24	; 0x01
     b5e:	3a c0       	rjmp	.+116    	; 0xbd4 <__floatsisf+0xaa>
     b60:	88 23       	and	r24, r24
     b62:	a9 f0       	breq	.+42     	; 0xb8e <__floatsisf+0x64>
     b64:	20 30       	cpi	r18, 0x00	; 0
     b66:	80 e0       	ldi	r24, 0x00	; 0
     b68:	38 07       	cpc	r19, r24
     b6a:	80 e0       	ldi	r24, 0x00	; 0
     b6c:	48 07       	cpc	r20, r24
     b6e:	80 e8       	ldi	r24, 0x80	; 128
     b70:	58 07       	cpc	r21, r24
     b72:	29 f4       	brne	.+10     	; 0xb7e <__floatsisf+0x54>
     b74:	60 e0       	ldi	r22, 0x00	; 0
     b76:	70 e0       	ldi	r23, 0x00	; 0
     b78:	80 e0       	ldi	r24, 0x00	; 0
     b7a:	9f ec       	ldi	r25, 0xCF	; 207
     b7c:	30 c0       	rjmp	.+96     	; 0xbde <__floatsisf+0xb4>
     b7e:	ee 24       	eor	r14, r14
     b80:	ff 24       	eor	r15, r15
     b82:	87 01       	movw	r16, r14
     b84:	e2 1a       	sub	r14, r18
     b86:	f3 0a       	sbc	r15, r19
     b88:	04 0b       	sbc	r16, r20
     b8a:	15 0b       	sbc	r17, r21
     b8c:	02 c0       	rjmp	.+4      	; 0xb92 <__floatsisf+0x68>
     b8e:	79 01       	movw	r14, r18
     b90:	8a 01       	movw	r16, r20
     b92:	8e e1       	ldi	r24, 0x1E	; 30
     b94:	c8 2e       	mov	r12, r24
     b96:	d1 2c       	mov	r13, r1
     b98:	dc 82       	std	Y+4, r13	; 0x04
     b9a:	cb 82       	std	Y+3, r12	; 0x03
     b9c:	ed 82       	std	Y+5, r14	; 0x05
     b9e:	fe 82       	std	Y+6, r15	; 0x06
     ba0:	0f 83       	std	Y+7, r16	; 0x07
     ba2:	18 87       	std	Y+8, r17	; 0x08
     ba4:	c8 01       	movw	r24, r16
     ba6:	b7 01       	movw	r22, r14
     ba8:	0e 94 c0 06 	call	0xd80	; 0xd80 <__clzsi2>
     bac:	01 97       	sbiw	r24, 0x01	; 1
     bae:	18 16       	cp	r1, r24
     bb0:	19 06       	cpc	r1, r25
     bb2:	84 f4       	brge	.+32     	; 0xbd4 <__floatsisf+0xaa>
     bb4:	08 2e       	mov	r0, r24
     bb6:	04 c0       	rjmp	.+8      	; 0xbc0 <__floatsisf+0x96>
     bb8:	ee 0c       	add	r14, r14
     bba:	ff 1c       	adc	r15, r15
     bbc:	00 1f       	adc	r16, r16
     bbe:	11 1f       	adc	r17, r17
     bc0:	0a 94       	dec	r0
     bc2:	d2 f7       	brpl	.-12     	; 0xbb8 <__floatsisf+0x8e>
     bc4:	ed 82       	std	Y+5, r14	; 0x05
     bc6:	fe 82       	std	Y+6, r15	; 0x06
     bc8:	0f 83       	std	Y+7, r16	; 0x07
     bca:	18 87       	std	Y+8, r17	; 0x08
     bcc:	c8 1a       	sub	r12, r24
     bce:	d9 0a       	sbc	r13, r25
     bd0:	dc 82       	std	Y+4, r13	; 0x04
     bd2:	cb 82       	std	Y+3, r12	; 0x03
     bd4:	ba 82       	std	Y+2, r11	; 0x02
     bd6:	ce 01       	movw	r24, r28
     bd8:	01 96       	adiw	r24, 0x01	; 1
     bda:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__pack_f>
     bde:	28 96       	adiw	r28, 0x08	; 8
     be0:	e9 e0       	ldi	r30, 0x09	; 9
     be2:	0c 94 da 08 	jmp	0x11b4	; 0x11b4 <__epilogue_restores__+0x12>

00000be6 <__fixsfsi>:
     be6:	ac e0       	ldi	r26, 0x0C	; 12
     be8:	b0 e0       	ldi	r27, 0x00	; 0
     bea:	e9 ef       	ldi	r30, 0xF9	; 249
     bec:	f5 e0       	ldi	r31, 0x05	; 5
     bee:	0c 94 c5 08 	jmp	0x118a	; 0x118a <__prologue_saves__+0x20>
     bf2:	69 83       	std	Y+1, r22	; 0x01
     bf4:	7a 83       	std	Y+2, r23	; 0x02
     bf6:	8b 83       	std	Y+3, r24	; 0x03
     bf8:	9c 83       	std	Y+4, r25	; 0x04
     bfa:	ce 01       	movw	r24, r28
     bfc:	01 96       	adiw	r24, 0x01	; 1
     bfe:	be 01       	movw	r22, r28
     c00:	6b 5f       	subi	r22, 0xFB	; 251
     c02:	7f 4f       	sbci	r23, 0xFF	; 255
     c04:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__unpack_f>
     c08:	8d 81       	ldd	r24, Y+5	; 0x05
     c0a:	82 30       	cpi	r24, 0x02	; 2
     c0c:	61 f1       	breq	.+88     	; 0xc66 <__fixsfsi+0x80>
     c0e:	82 30       	cpi	r24, 0x02	; 2
     c10:	50 f1       	brcs	.+84     	; 0xc66 <__fixsfsi+0x80>
     c12:	84 30       	cpi	r24, 0x04	; 4
     c14:	21 f4       	brne	.+8      	; 0xc1e <__fixsfsi+0x38>
     c16:	8e 81       	ldd	r24, Y+6	; 0x06
     c18:	88 23       	and	r24, r24
     c1a:	51 f1       	breq	.+84     	; 0xc70 <__fixsfsi+0x8a>
     c1c:	2e c0       	rjmp	.+92     	; 0xc7a <__fixsfsi+0x94>
     c1e:	2f 81       	ldd	r18, Y+7	; 0x07
     c20:	38 85       	ldd	r19, Y+8	; 0x08
     c22:	37 fd       	sbrc	r19, 7
     c24:	20 c0       	rjmp	.+64     	; 0xc66 <__fixsfsi+0x80>
     c26:	6e 81       	ldd	r22, Y+6	; 0x06
     c28:	2f 31       	cpi	r18, 0x1F	; 31
     c2a:	31 05       	cpc	r19, r1
     c2c:	1c f0       	brlt	.+6      	; 0xc34 <__fixsfsi+0x4e>
     c2e:	66 23       	and	r22, r22
     c30:	f9 f0       	breq	.+62     	; 0xc70 <__fixsfsi+0x8a>
     c32:	23 c0       	rjmp	.+70     	; 0xc7a <__fixsfsi+0x94>
     c34:	8e e1       	ldi	r24, 0x1E	; 30
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	82 1b       	sub	r24, r18
     c3a:	93 0b       	sbc	r25, r19
     c3c:	29 85       	ldd	r18, Y+9	; 0x09
     c3e:	3a 85       	ldd	r19, Y+10	; 0x0a
     c40:	4b 85       	ldd	r20, Y+11	; 0x0b
     c42:	5c 85       	ldd	r21, Y+12	; 0x0c
     c44:	04 c0       	rjmp	.+8      	; 0xc4e <__fixsfsi+0x68>
     c46:	56 95       	lsr	r21
     c48:	47 95       	ror	r20
     c4a:	37 95       	ror	r19
     c4c:	27 95       	ror	r18
     c4e:	8a 95       	dec	r24
     c50:	d2 f7       	brpl	.-12     	; 0xc46 <__fixsfsi+0x60>
     c52:	66 23       	and	r22, r22
     c54:	b1 f0       	breq	.+44     	; 0xc82 <__fixsfsi+0x9c>
     c56:	50 95       	com	r21
     c58:	40 95       	com	r20
     c5a:	30 95       	com	r19
     c5c:	21 95       	neg	r18
     c5e:	3f 4f       	sbci	r19, 0xFF	; 255
     c60:	4f 4f       	sbci	r20, 0xFF	; 255
     c62:	5f 4f       	sbci	r21, 0xFF	; 255
     c64:	0e c0       	rjmp	.+28     	; 0xc82 <__fixsfsi+0x9c>
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	40 e0       	ldi	r20, 0x00	; 0
     c6c:	50 e0       	ldi	r21, 0x00	; 0
     c6e:	09 c0       	rjmp	.+18     	; 0xc82 <__fixsfsi+0x9c>
     c70:	2f ef       	ldi	r18, 0xFF	; 255
     c72:	3f ef       	ldi	r19, 0xFF	; 255
     c74:	4f ef       	ldi	r20, 0xFF	; 255
     c76:	5f e7       	ldi	r21, 0x7F	; 127
     c78:	04 c0       	rjmp	.+8      	; 0xc82 <__fixsfsi+0x9c>
     c7a:	20 e0       	ldi	r18, 0x00	; 0
     c7c:	30 e0       	ldi	r19, 0x00	; 0
     c7e:	40 e0       	ldi	r20, 0x00	; 0
     c80:	50 e8       	ldi	r21, 0x80	; 128
     c82:	b9 01       	movw	r22, r18
     c84:	ca 01       	movw	r24, r20
     c86:	2c 96       	adiw	r28, 0x0c	; 12
     c88:	e2 e0       	ldi	r30, 0x02	; 2
     c8a:	0c 94 e1 08 	jmp	0x11c2	; 0x11c2 <__epilogue_restores__+0x20>

00000c8e <__floatunsisf>:
     c8e:	a8 e0       	ldi	r26, 0x08	; 8
     c90:	b0 e0       	ldi	r27, 0x00	; 0
     c92:	ed e4       	ldi	r30, 0x4D	; 77
     c94:	f6 e0       	ldi	r31, 0x06	; 6
     c96:	0c 94 bd 08 	jmp	0x117a	; 0x117a <__prologue_saves__+0x10>
     c9a:	7b 01       	movw	r14, r22
     c9c:	8c 01       	movw	r16, r24
     c9e:	61 15       	cp	r22, r1
     ca0:	71 05       	cpc	r23, r1
     ca2:	81 05       	cpc	r24, r1
     ca4:	91 05       	cpc	r25, r1
     ca6:	19 f4       	brne	.+6      	; 0xcae <__floatunsisf+0x20>
     ca8:	82 e0       	ldi	r24, 0x02	; 2
     caa:	89 83       	std	Y+1, r24	; 0x01
     cac:	60 c0       	rjmp	.+192    	; 0xd6e <__floatunsisf+0xe0>
     cae:	83 e0       	ldi	r24, 0x03	; 3
     cb0:	89 83       	std	Y+1, r24	; 0x01
     cb2:	8e e1       	ldi	r24, 0x1E	; 30
     cb4:	c8 2e       	mov	r12, r24
     cb6:	d1 2c       	mov	r13, r1
     cb8:	dc 82       	std	Y+4, r13	; 0x04
     cba:	cb 82       	std	Y+3, r12	; 0x03
     cbc:	ed 82       	std	Y+5, r14	; 0x05
     cbe:	fe 82       	std	Y+6, r15	; 0x06
     cc0:	0f 83       	std	Y+7, r16	; 0x07
     cc2:	18 87       	std	Y+8, r17	; 0x08
     cc4:	c8 01       	movw	r24, r16
     cc6:	b7 01       	movw	r22, r14
     cc8:	0e 94 c0 06 	call	0xd80	; 0xd80 <__clzsi2>
     ccc:	fc 01       	movw	r30, r24
     cce:	31 97       	sbiw	r30, 0x01	; 1
     cd0:	f7 ff       	sbrs	r31, 7
     cd2:	3b c0       	rjmp	.+118    	; 0xd4a <__floatunsisf+0xbc>
     cd4:	22 27       	eor	r18, r18
     cd6:	33 27       	eor	r19, r19
     cd8:	2e 1b       	sub	r18, r30
     cda:	3f 0b       	sbc	r19, r31
     cdc:	57 01       	movw	r10, r14
     cde:	68 01       	movw	r12, r16
     ce0:	02 2e       	mov	r0, r18
     ce2:	04 c0       	rjmp	.+8      	; 0xcec <__floatunsisf+0x5e>
     ce4:	d6 94       	lsr	r13
     ce6:	c7 94       	ror	r12
     ce8:	b7 94       	ror	r11
     cea:	a7 94       	ror	r10
     cec:	0a 94       	dec	r0
     cee:	d2 f7       	brpl	.-12     	; 0xce4 <__floatunsisf+0x56>
     cf0:	40 e0       	ldi	r20, 0x00	; 0
     cf2:	50 e0       	ldi	r21, 0x00	; 0
     cf4:	60 e0       	ldi	r22, 0x00	; 0
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	a0 e0       	ldi	r26, 0x00	; 0
     cfe:	b0 e0       	ldi	r27, 0x00	; 0
     d00:	04 c0       	rjmp	.+8      	; 0xd0a <__floatunsisf+0x7c>
     d02:	88 0f       	add	r24, r24
     d04:	99 1f       	adc	r25, r25
     d06:	aa 1f       	adc	r26, r26
     d08:	bb 1f       	adc	r27, r27
     d0a:	2a 95       	dec	r18
     d0c:	d2 f7       	brpl	.-12     	; 0xd02 <__floatunsisf+0x74>
     d0e:	01 97       	sbiw	r24, 0x01	; 1
     d10:	a1 09       	sbc	r26, r1
     d12:	b1 09       	sbc	r27, r1
     d14:	8e 21       	and	r24, r14
     d16:	9f 21       	and	r25, r15
     d18:	a0 23       	and	r26, r16
     d1a:	b1 23       	and	r27, r17
     d1c:	00 97       	sbiw	r24, 0x00	; 0
     d1e:	a1 05       	cpc	r26, r1
     d20:	b1 05       	cpc	r27, r1
     d22:	21 f0       	breq	.+8      	; 0xd2c <__floatunsisf+0x9e>
     d24:	41 e0       	ldi	r20, 0x01	; 1
     d26:	50 e0       	ldi	r21, 0x00	; 0
     d28:	60 e0       	ldi	r22, 0x00	; 0
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	4a 29       	or	r20, r10
     d2e:	5b 29       	or	r21, r11
     d30:	6c 29       	or	r22, r12
     d32:	7d 29       	or	r23, r13
     d34:	4d 83       	std	Y+5, r20	; 0x05
     d36:	5e 83       	std	Y+6, r21	; 0x06
     d38:	6f 83       	std	Y+7, r22	; 0x07
     d3a:	78 87       	std	Y+8, r23	; 0x08
     d3c:	8e e1       	ldi	r24, 0x1E	; 30
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	8e 1b       	sub	r24, r30
     d42:	9f 0b       	sbc	r25, r31
     d44:	9c 83       	std	Y+4, r25	; 0x04
     d46:	8b 83       	std	Y+3, r24	; 0x03
     d48:	12 c0       	rjmp	.+36     	; 0xd6e <__floatunsisf+0xe0>
     d4a:	30 97       	sbiw	r30, 0x00	; 0
     d4c:	81 f0       	breq	.+32     	; 0xd6e <__floatunsisf+0xe0>
     d4e:	0e 2e       	mov	r0, r30
     d50:	04 c0       	rjmp	.+8      	; 0xd5a <__floatunsisf+0xcc>
     d52:	ee 0c       	add	r14, r14
     d54:	ff 1c       	adc	r15, r15
     d56:	00 1f       	adc	r16, r16
     d58:	11 1f       	adc	r17, r17
     d5a:	0a 94       	dec	r0
     d5c:	d2 f7       	brpl	.-12     	; 0xd52 <__floatunsisf+0xc4>
     d5e:	ed 82       	std	Y+5, r14	; 0x05
     d60:	fe 82       	std	Y+6, r15	; 0x06
     d62:	0f 83       	std	Y+7, r16	; 0x07
     d64:	18 87       	std	Y+8, r17	; 0x08
     d66:	ce 1a       	sub	r12, r30
     d68:	df 0a       	sbc	r13, r31
     d6a:	dc 82       	std	Y+4, r13	; 0x04
     d6c:	cb 82       	std	Y+3, r12	; 0x03
     d6e:	1a 82       	std	Y+2, r1	; 0x02
     d70:	ce 01       	movw	r24, r28
     d72:	01 96       	adiw	r24, 0x01	; 1
     d74:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__pack_f>
     d78:	28 96       	adiw	r28, 0x08	; 8
     d7a:	ea e0       	ldi	r30, 0x0A	; 10
     d7c:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__epilogue_restores__+0x10>

00000d80 <__clzsi2>:
     d80:	ef 92       	push	r14
     d82:	ff 92       	push	r15
     d84:	0f 93       	push	r16
     d86:	1f 93       	push	r17
     d88:	7b 01       	movw	r14, r22
     d8a:	8c 01       	movw	r16, r24
     d8c:	80 e0       	ldi	r24, 0x00	; 0
     d8e:	e8 16       	cp	r14, r24
     d90:	80 e0       	ldi	r24, 0x00	; 0
     d92:	f8 06       	cpc	r15, r24
     d94:	81 e0       	ldi	r24, 0x01	; 1
     d96:	08 07       	cpc	r16, r24
     d98:	80 e0       	ldi	r24, 0x00	; 0
     d9a:	18 07       	cpc	r17, r24
     d9c:	88 f4       	brcc	.+34     	; 0xdc0 <__clzsi2+0x40>
     d9e:	8f ef       	ldi	r24, 0xFF	; 255
     da0:	e8 16       	cp	r14, r24
     da2:	f1 04       	cpc	r15, r1
     da4:	01 05       	cpc	r16, r1
     da6:	11 05       	cpc	r17, r1
     da8:	31 f0       	breq	.+12     	; 0xdb6 <__clzsi2+0x36>
     daa:	28 f0       	brcs	.+10     	; 0xdb6 <__clzsi2+0x36>
     dac:	88 e0       	ldi	r24, 0x08	; 8
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	a0 e0       	ldi	r26, 0x00	; 0
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	17 c0       	rjmp	.+46     	; 0xde4 <__clzsi2+0x64>
     db6:	80 e0       	ldi	r24, 0x00	; 0
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	a0 e0       	ldi	r26, 0x00	; 0
     dbc:	b0 e0       	ldi	r27, 0x00	; 0
     dbe:	12 c0       	rjmp	.+36     	; 0xde4 <__clzsi2+0x64>
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	e8 16       	cp	r14, r24
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	f8 06       	cpc	r15, r24
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	08 07       	cpc	r16, r24
     dcc:	81 e0       	ldi	r24, 0x01	; 1
     dce:	18 07       	cpc	r17, r24
     dd0:	28 f0       	brcs	.+10     	; 0xddc <__clzsi2+0x5c>
     dd2:	88 e1       	ldi	r24, 0x18	; 24
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	a0 e0       	ldi	r26, 0x00	; 0
     dd8:	b0 e0       	ldi	r27, 0x00	; 0
     dda:	04 c0       	rjmp	.+8      	; 0xde4 <__clzsi2+0x64>
     ddc:	80 e1       	ldi	r24, 0x10	; 16
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	a0 e0       	ldi	r26, 0x00	; 0
     de2:	b0 e0       	ldi	r27, 0x00	; 0
     de4:	20 e2       	ldi	r18, 0x20	; 32
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	40 e0       	ldi	r20, 0x00	; 0
     dea:	50 e0       	ldi	r21, 0x00	; 0
     dec:	28 1b       	sub	r18, r24
     dee:	39 0b       	sbc	r19, r25
     df0:	4a 0b       	sbc	r20, r26
     df2:	5b 0b       	sbc	r21, r27
     df4:	04 c0       	rjmp	.+8      	; 0xdfe <__clzsi2+0x7e>
     df6:	16 95       	lsr	r17
     df8:	07 95       	ror	r16
     dfa:	f7 94       	ror	r15
     dfc:	e7 94       	ror	r14
     dfe:	8a 95       	dec	r24
     e00:	d2 f7       	brpl	.-12     	; 0xdf6 <__clzsi2+0x76>
     e02:	f7 01       	movw	r30, r14
     e04:	e0 59       	subi	r30, 0x90	; 144
     e06:	ff 4f       	sbci	r31, 0xFF	; 255
     e08:	80 81       	ld	r24, Z
     e0a:	28 1b       	sub	r18, r24
     e0c:	31 09       	sbc	r19, r1
     e0e:	41 09       	sbc	r20, r1
     e10:	51 09       	sbc	r21, r1
     e12:	c9 01       	movw	r24, r18
     e14:	1f 91       	pop	r17
     e16:	0f 91       	pop	r16
     e18:	ff 90       	pop	r15
     e1a:	ef 90       	pop	r14
     e1c:	08 95       	ret

00000e1e <__pack_f>:
     e1e:	df 92       	push	r13
     e20:	ef 92       	push	r14
     e22:	ff 92       	push	r15
     e24:	0f 93       	push	r16
     e26:	1f 93       	push	r17
     e28:	fc 01       	movw	r30, r24
     e2a:	e4 80       	ldd	r14, Z+4	; 0x04
     e2c:	f5 80       	ldd	r15, Z+5	; 0x05
     e2e:	06 81       	ldd	r16, Z+6	; 0x06
     e30:	17 81       	ldd	r17, Z+7	; 0x07
     e32:	d1 80       	ldd	r13, Z+1	; 0x01
     e34:	80 81       	ld	r24, Z
     e36:	82 30       	cpi	r24, 0x02	; 2
     e38:	48 f4       	brcc	.+18     	; 0xe4c <__pack_f+0x2e>
     e3a:	80 e0       	ldi	r24, 0x00	; 0
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	a0 e1       	ldi	r26, 0x10	; 16
     e40:	b0 e0       	ldi	r27, 0x00	; 0
     e42:	e8 2a       	or	r14, r24
     e44:	f9 2a       	or	r15, r25
     e46:	0a 2b       	or	r16, r26
     e48:	1b 2b       	or	r17, r27
     e4a:	a5 c0       	rjmp	.+330    	; 0xf96 <__pack_f+0x178>
     e4c:	84 30       	cpi	r24, 0x04	; 4
     e4e:	09 f4       	brne	.+2      	; 0xe52 <__pack_f+0x34>
     e50:	9f c0       	rjmp	.+318    	; 0xf90 <__pack_f+0x172>
     e52:	82 30       	cpi	r24, 0x02	; 2
     e54:	21 f4       	brne	.+8      	; 0xe5e <__pack_f+0x40>
     e56:	ee 24       	eor	r14, r14
     e58:	ff 24       	eor	r15, r15
     e5a:	87 01       	movw	r16, r14
     e5c:	05 c0       	rjmp	.+10     	; 0xe68 <__pack_f+0x4a>
     e5e:	e1 14       	cp	r14, r1
     e60:	f1 04       	cpc	r15, r1
     e62:	01 05       	cpc	r16, r1
     e64:	11 05       	cpc	r17, r1
     e66:	19 f4       	brne	.+6      	; 0xe6e <__pack_f+0x50>
     e68:	e0 e0       	ldi	r30, 0x00	; 0
     e6a:	f0 e0       	ldi	r31, 0x00	; 0
     e6c:	96 c0       	rjmp	.+300    	; 0xf9a <__pack_f+0x17c>
     e6e:	62 81       	ldd	r22, Z+2	; 0x02
     e70:	73 81       	ldd	r23, Z+3	; 0x03
     e72:	9f ef       	ldi	r25, 0xFF	; 255
     e74:	62 38       	cpi	r22, 0x82	; 130
     e76:	79 07       	cpc	r23, r25
     e78:	0c f0       	brlt	.+2      	; 0xe7c <__pack_f+0x5e>
     e7a:	5b c0       	rjmp	.+182    	; 0xf32 <__pack_f+0x114>
     e7c:	22 e8       	ldi	r18, 0x82	; 130
     e7e:	3f ef       	ldi	r19, 0xFF	; 255
     e80:	26 1b       	sub	r18, r22
     e82:	37 0b       	sbc	r19, r23
     e84:	2a 31       	cpi	r18, 0x1A	; 26
     e86:	31 05       	cpc	r19, r1
     e88:	2c f0       	brlt	.+10     	; 0xe94 <__pack_f+0x76>
     e8a:	20 e0       	ldi	r18, 0x00	; 0
     e8c:	30 e0       	ldi	r19, 0x00	; 0
     e8e:	40 e0       	ldi	r20, 0x00	; 0
     e90:	50 e0       	ldi	r21, 0x00	; 0
     e92:	2a c0       	rjmp	.+84     	; 0xee8 <__pack_f+0xca>
     e94:	b8 01       	movw	r22, r16
     e96:	a7 01       	movw	r20, r14
     e98:	02 2e       	mov	r0, r18
     e9a:	04 c0       	rjmp	.+8      	; 0xea4 <__pack_f+0x86>
     e9c:	76 95       	lsr	r23
     e9e:	67 95       	ror	r22
     ea0:	57 95       	ror	r21
     ea2:	47 95       	ror	r20
     ea4:	0a 94       	dec	r0
     ea6:	d2 f7       	brpl	.-12     	; 0xe9c <__pack_f+0x7e>
     ea8:	81 e0       	ldi	r24, 0x01	; 1
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	a0 e0       	ldi	r26, 0x00	; 0
     eae:	b0 e0       	ldi	r27, 0x00	; 0
     eb0:	04 c0       	rjmp	.+8      	; 0xeba <__pack_f+0x9c>
     eb2:	88 0f       	add	r24, r24
     eb4:	99 1f       	adc	r25, r25
     eb6:	aa 1f       	adc	r26, r26
     eb8:	bb 1f       	adc	r27, r27
     eba:	2a 95       	dec	r18
     ebc:	d2 f7       	brpl	.-12     	; 0xeb2 <__pack_f+0x94>
     ebe:	01 97       	sbiw	r24, 0x01	; 1
     ec0:	a1 09       	sbc	r26, r1
     ec2:	b1 09       	sbc	r27, r1
     ec4:	8e 21       	and	r24, r14
     ec6:	9f 21       	and	r25, r15
     ec8:	a0 23       	and	r26, r16
     eca:	b1 23       	and	r27, r17
     ecc:	00 97       	sbiw	r24, 0x00	; 0
     ece:	a1 05       	cpc	r26, r1
     ed0:	b1 05       	cpc	r27, r1
     ed2:	21 f0       	breq	.+8      	; 0xedc <__pack_f+0xbe>
     ed4:	81 e0       	ldi	r24, 0x01	; 1
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	a0 e0       	ldi	r26, 0x00	; 0
     eda:	b0 e0       	ldi	r27, 0x00	; 0
     edc:	9a 01       	movw	r18, r20
     ede:	ab 01       	movw	r20, r22
     ee0:	28 2b       	or	r18, r24
     ee2:	39 2b       	or	r19, r25
     ee4:	4a 2b       	or	r20, r26
     ee6:	5b 2b       	or	r21, r27
     ee8:	da 01       	movw	r26, r20
     eea:	c9 01       	movw	r24, r18
     eec:	8f 77       	andi	r24, 0x7F	; 127
     eee:	90 70       	andi	r25, 0x00	; 0
     ef0:	a0 70       	andi	r26, 0x00	; 0
     ef2:	b0 70       	andi	r27, 0x00	; 0
     ef4:	80 34       	cpi	r24, 0x40	; 64
     ef6:	91 05       	cpc	r25, r1
     ef8:	a1 05       	cpc	r26, r1
     efa:	b1 05       	cpc	r27, r1
     efc:	39 f4       	brne	.+14     	; 0xf0c <__pack_f+0xee>
     efe:	27 ff       	sbrs	r18, 7
     f00:	09 c0       	rjmp	.+18     	; 0xf14 <__pack_f+0xf6>
     f02:	20 5c       	subi	r18, 0xC0	; 192
     f04:	3f 4f       	sbci	r19, 0xFF	; 255
     f06:	4f 4f       	sbci	r20, 0xFF	; 255
     f08:	5f 4f       	sbci	r21, 0xFF	; 255
     f0a:	04 c0       	rjmp	.+8      	; 0xf14 <__pack_f+0xf6>
     f0c:	21 5c       	subi	r18, 0xC1	; 193
     f0e:	3f 4f       	sbci	r19, 0xFF	; 255
     f10:	4f 4f       	sbci	r20, 0xFF	; 255
     f12:	5f 4f       	sbci	r21, 0xFF	; 255
     f14:	e0 e0       	ldi	r30, 0x00	; 0
     f16:	f0 e0       	ldi	r31, 0x00	; 0
     f18:	20 30       	cpi	r18, 0x00	; 0
     f1a:	a0 e0       	ldi	r26, 0x00	; 0
     f1c:	3a 07       	cpc	r19, r26
     f1e:	a0 e0       	ldi	r26, 0x00	; 0
     f20:	4a 07       	cpc	r20, r26
     f22:	a0 e4       	ldi	r26, 0x40	; 64
     f24:	5a 07       	cpc	r21, r26
     f26:	10 f0       	brcs	.+4      	; 0xf2c <__pack_f+0x10e>
     f28:	e1 e0       	ldi	r30, 0x01	; 1
     f2a:	f0 e0       	ldi	r31, 0x00	; 0
     f2c:	79 01       	movw	r14, r18
     f2e:	8a 01       	movw	r16, r20
     f30:	27 c0       	rjmp	.+78     	; 0xf80 <__pack_f+0x162>
     f32:	60 38       	cpi	r22, 0x80	; 128
     f34:	71 05       	cpc	r23, r1
     f36:	64 f5       	brge	.+88     	; 0xf90 <__pack_f+0x172>
     f38:	fb 01       	movw	r30, r22
     f3a:	e1 58       	subi	r30, 0x81	; 129
     f3c:	ff 4f       	sbci	r31, 0xFF	; 255
     f3e:	d8 01       	movw	r26, r16
     f40:	c7 01       	movw	r24, r14
     f42:	8f 77       	andi	r24, 0x7F	; 127
     f44:	90 70       	andi	r25, 0x00	; 0
     f46:	a0 70       	andi	r26, 0x00	; 0
     f48:	b0 70       	andi	r27, 0x00	; 0
     f4a:	80 34       	cpi	r24, 0x40	; 64
     f4c:	91 05       	cpc	r25, r1
     f4e:	a1 05       	cpc	r26, r1
     f50:	b1 05       	cpc	r27, r1
     f52:	39 f4       	brne	.+14     	; 0xf62 <__pack_f+0x144>
     f54:	e7 fe       	sbrs	r14, 7
     f56:	0d c0       	rjmp	.+26     	; 0xf72 <__pack_f+0x154>
     f58:	80 e4       	ldi	r24, 0x40	; 64
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	a0 e0       	ldi	r26, 0x00	; 0
     f5e:	b0 e0       	ldi	r27, 0x00	; 0
     f60:	04 c0       	rjmp	.+8      	; 0xf6a <__pack_f+0x14c>
     f62:	8f e3       	ldi	r24, 0x3F	; 63
     f64:	90 e0       	ldi	r25, 0x00	; 0
     f66:	a0 e0       	ldi	r26, 0x00	; 0
     f68:	b0 e0       	ldi	r27, 0x00	; 0
     f6a:	e8 0e       	add	r14, r24
     f6c:	f9 1e       	adc	r15, r25
     f6e:	0a 1f       	adc	r16, r26
     f70:	1b 1f       	adc	r17, r27
     f72:	17 ff       	sbrs	r17, 7
     f74:	05 c0       	rjmp	.+10     	; 0xf80 <__pack_f+0x162>
     f76:	16 95       	lsr	r17
     f78:	07 95       	ror	r16
     f7a:	f7 94       	ror	r15
     f7c:	e7 94       	ror	r14
     f7e:	31 96       	adiw	r30, 0x01	; 1
     f80:	87 e0       	ldi	r24, 0x07	; 7
     f82:	16 95       	lsr	r17
     f84:	07 95       	ror	r16
     f86:	f7 94       	ror	r15
     f88:	e7 94       	ror	r14
     f8a:	8a 95       	dec	r24
     f8c:	d1 f7       	brne	.-12     	; 0xf82 <__pack_f+0x164>
     f8e:	05 c0       	rjmp	.+10     	; 0xf9a <__pack_f+0x17c>
     f90:	ee 24       	eor	r14, r14
     f92:	ff 24       	eor	r15, r15
     f94:	87 01       	movw	r16, r14
     f96:	ef ef       	ldi	r30, 0xFF	; 255
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	6e 2f       	mov	r22, r30
     f9c:	67 95       	ror	r22
     f9e:	66 27       	eor	r22, r22
     fa0:	67 95       	ror	r22
     fa2:	90 2f       	mov	r25, r16
     fa4:	9f 77       	andi	r25, 0x7F	; 127
     fa6:	d7 94       	ror	r13
     fa8:	dd 24       	eor	r13, r13
     faa:	d7 94       	ror	r13
     fac:	8e 2f       	mov	r24, r30
     fae:	86 95       	lsr	r24
     fb0:	49 2f       	mov	r20, r25
     fb2:	46 2b       	or	r20, r22
     fb4:	58 2f       	mov	r21, r24
     fb6:	5d 29       	or	r21, r13
     fb8:	b7 01       	movw	r22, r14
     fba:	ca 01       	movw	r24, r20
     fbc:	1f 91       	pop	r17
     fbe:	0f 91       	pop	r16
     fc0:	ff 90       	pop	r15
     fc2:	ef 90       	pop	r14
     fc4:	df 90       	pop	r13
     fc6:	08 95       	ret

00000fc8 <__unpack_f>:
     fc8:	fc 01       	movw	r30, r24
     fca:	db 01       	movw	r26, r22
     fcc:	40 81       	ld	r20, Z
     fce:	51 81       	ldd	r21, Z+1	; 0x01
     fd0:	22 81       	ldd	r18, Z+2	; 0x02
     fd2:	62 2f       	mov	r22, r18
     fd4:	6f 77       	andi	r22, 0x7F	; 127
     fd6:	70 e0       	ldi	r23, 0x00	; 0
     fd8:	22 1f       	adc	r18, r18
     fda:	22 27       	eor	r18, r18
     fdc:	22 1f       	adc	r18, r18
     fde:	93 81       	ldd	r25, Z+3	; 0x03
     fe0:	89 2f       	mov	r24, r25
     fe2:	88 0f       	add	r24, r24
     fe4:	82 2b       	or	r24, r18
     fe6:	28 2f       	mov	r18, r24
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	99 1f       	adc	r25, r25
     fec:	99 27       	eor	r25, r25
     fee:	99 1f       	adc	r25, r25
     ff0:	11 96       	adiw	r26, 0x01	; 1
     ff2:	9c 93       	st	X, r25
     ff4:	11 97       	sbiw	r26, 0x01	; 1
     ff6:	21 15       	cp	r18, r1
     ff8:	31 05       	cpc	r19, r1
     ffa:	a9 f5       	brne	.+106    	; 0x1066 <__unpack_f+0x9e>
     ffc:	41 15       	cp	r20, r1
     ffe:	51 05       	cpc	r21, r1
    1000:	61 05       	cpc	r22, r1
    1002:	71 05       	cpc	r23, r1
    1004:	11 f4       	brne	.+4      	; 0x100a <__unpack_f+0x42>
    1006:	82 e0       	ldi	r24, 0x02	; 2
    1008:	37 c0       	rjmp	.+110    	; 0x1078 <__unpack_f+0xb0>
    100a:	82 e8       	ldi	r24, 0x82	; 130
    100c:	9f ef       	ldi	r25, 0xFF	; 255
    100e:	13 96       	adiw	r26, 0x03	; 3
    1010:	9c 93       	st	X, r25
    1012:	8e 93       	st	-X, r24
    1014:	12 97       	sbiw	r26, 0x02	; 2
    1016:	9a 01       	movw	r18, r20
    1018:	ab 01       	movw	r20, r22
    101a:	67 e0       	ldi	r22, 0x07	; 7
    101c:	22 0f       	add	r18, r18
    101e:	33 1f       	adc	r19, r19
    1020:	44 1f       	adc	r20, r20
    1022:	55 1f       	adc	r21, r21
    1024:	6a 95       	dec	r22
    1026:	d1 f7       	brne	.-12     	; 0x101c <__unpack_f+0x54>
    1028:	83 e0       	ldi	r24, 0x03	; 3
    102a:	8c 93       	st	X, r24
    102c:	0d c0       	rjmp	.+26     	; 0x1048 <__unpack_f+0x80>
    102e:	22 0f       	add	r18, r18
    1030:	33 1f       	adc	r19, r19
    1032:	44 1f       	adc	r20, r20
    1034:	55 1f       	adc	r21, r21
    1036:	12 96       	adiw	r26, 0x02	; 2
    1038:	8d 91       	ld	r24, X+
    103a:	9c 91       	ld	r25, X
    103c:	13 97       	sbiw	r26, 0x03	; 3
    103e:	01 97       	sbiw	r24, 0x01	; 1
    1040:	13 96       	adiw	r26, 0x03	; 3
    1042:	9c 93       	st	X, r25
    1044:	8e 93       	st	-X, r24
    1046:	12 97       	sbiw	r26, 0x02	; 2
    1048:	20 30       	cpi	r18, 0x00	; 0
    104a:	80 e0       	ldi	r24, 0x00	; 0
    104c:	38 07       	cpc	r19, r24
    104e:	80 e0       	ldi	r24, 0x00	; 0
    1050:	48 07       	cpc	r20, r24
    1052:	80 e4       	ldi	r24, 0x40	; 64
    1054:	58 07       	cpc	r21, r24
    1056:	58 f3       	brcs	.-42     	; 0x102e <__unpack_f+0x66>
    1058:	14 96       	adiw	r26, 0x04	; 4
    105a:	2d 93       	st	X+, r18
    105c:	3d 93       	st	X+, r19
    105e:	4d 93       	st	X+, r20
    1060:	5c 93       	st	X, r21
    1062:	17 97       	sbiw	r26, 0x07	; 7
    1064:	08 95       	ret
    1066:	2f 3f       	cpi	r18, 0xFF	; 255
    1068:	31 05       	cpc	r19, r1
    106a:	79 f4       	brne	.+30     	; 0x108a <__unpack_f+0xc2>
    106c:	41 15       	cp	r20, r1
    106e:	51 05       	cpc	r21, r1
    1070:	61 05       	cpc	r22, r1
    1072:	71 05       	cpc	r23, r1
    1074:	19 f4       	brne	.+6      	; 0x107c <__unpack_f+0xb4>
    1076:	84 e0       	ldi	r24, 0x04	; 4
    1078:	8c 93       	st	X, r24
    107a:	08 95       	ret
    107c:	64 ff       	sbrs	r22, 4
    107e:	03 c0       	rjmp	.+6      	; 0x1086 <__unpack_f+0xbe>
    1080:	81 e0       	ldi	r24, 0x01	; 1
    1082:	8c 93       	st	X, r24
    1084:	12 c0       	rjmp	.+36     	; 0x10aa <__unpack_f+0xe2>
    1086:	1c 92       	st	X, r1
    1088:	10 c0       	rjmp	.+32     	; 0x10aa <__unpack_f+0xe2>
    108a:	2f 57       	subi	r18, 0x7F	; 127
    108c:	30 40       	sbci	r19, 0x00	; 0
    108e:	13 96       	adiw	r26, 0x03	; 3
    1090:	3c 93       	st	X, r19
    1092:	2e 93       	st	-X, r18
    1094:	12 97       	sbiw	r26, 0x02	; 2
    1096:	83 e0       	ldi	r24, 0x03	; 3
    1098:	8c 93       	st	X, r24
    109a:	87 e0       	ldi	r24, 0x07	; 7
    109c:	44 0f       	add	r20, r20
    109e:	55 1f       	adc	r21, r21
    10a0:	66 1f       	adc	r22, r22
    10a2:	77 1f       	adc	r23, r23
    10a4:	8a 95       	dec	r24
    10a6:	d1 f7       	brne	.-12     	; 0x109c <__unpack_f+0xd4>
    10a8:	70 64       	ori	r23, 0x40	; 64
    10aa:	14 96       	adiw	r26, 0x04	; 4
    10ac:	4d 93       	st	X+, r20
    10ae:	5d 93       	st	X+, r21
    10b0:	6d 93       	st	X+, r22
    10b2:	7c 93       	st	X, r23
    10b4:	17 97       	sbiw	r26, 0x07	; 7
    10b6:	08 95       	ret

000010b8 <__fpcmp_parts_f>:
    10b8:	1f 93       	push	r17
    10ba:	dc 01       	movw	r26, r24
    10bc:	fb 01       	movw	r30, r22
    10be:	9c 91       	ld	r25, X
    10c0:	92 30       	cpi	r25, 0x02	; 2
    10c2:	08 f4       	brcc	.+2      	; 0x10c6 <__fpcmp_parts_f+0xe>
    10c4:	47 c0       	rjmp	.+142    	; 0x1154 <__fpcmp_parts_f+0x9c>
    10c6:	80 81       	ld	r24, Z
    10c8:	82 30       	cpi	r24, 0x02	; 2
    10ca:	08 f4       	brcc	.+2      	; 0x10ce <__fpcmp_parts_f+0x16>
    10cc:	43 c0       	rjmp	.+134    	; 0x1154 <__fpcmp_parts_f+0x9c>
    10ce:	94 30       	cpi	r25, 0x04	; 4
    10d0:	51 f4       	brne	.+20     	; 0x10e6 <__fpcmp_parts_f+0x2e>
    10d2:	11 96       	adiw	r26, 0x01	; 1
    10d4:	1c 91       	ld	r17, X
    10d6:	84 30       	cpi	r24, 0x04	; 4
    10d8:	99 f5       	brne	.+102    	; 0x1140 <__fpcmp_parts_f+0x88>
    10da:	81 81       	ldd	r24, Z+1	; 0x01
    10dc:	68 2f       	mov	r22, r24
    10de:	70 e0       	ldi	r23, 0x00	; 0
    10e0:	61 1b       	sub	r22, r17
    10e2:	71 09       	sbc	r23, r1
    10e4:	3f c0       	rjmp	.+126    	; 0x1164 <__fpcmp_parts_f+0xac>
    10e6:	84 30       	cpi	r24, 0x04	; 4
    10e8:	21 f0       	breq	.+8      	; 0x10f2 <__fpcmp_parts_f+0x3a>
    10ea:	92 30       	cpi	r25, 0x02	; 2
    10ec:	31 f4       	brne	.+12     	; 0x10fa <__fpcmp_parts_f+0x42>
    10ee:	82 30       	cpi	r24, 0x02	; 2
    10f0:	b9 f1       	breq	.+110    	; 0x1160 <__fpcmp_parts_f+0xa8>
    10f2:	81 81       	ldd	r24, Z+1	; 0x01
    10f4:	88 23       	and	r24, r24
    10f6:	89 f1       	breq	.+98     	; 0x115a <__fpcmp_parts_f+0xa2>
    10f8:	2d c0       	rjmp	.+90     	; 0x1154 <__fpcmp_parts_f+0x9c>
    10fa:	11 96       	adiw	r26, 0x01	; 1
    10fc:	1c 91       	ld	r17, X
    10fe:	11 97       	sbiw	r26, 0x01	; 1
    1100:	82 30       	cpi	r24, 0x02	; 2
    1102:	f1 f0       	breq	.+60     	; 0x1140 <__fpcmp_parts_f+0x88>
    1104:	81 81       	ldd	r24, Z+1	; 0x01
    1106:	18 17       	cp	r17, r24
    1108:	d9 f4       	brne	.+54     	; 0x1140 <__fpcmp_parts_f+0x88>
    110a:	12 96       	adiw	r26, 0x02	; 2
    110c:	2d 91       	ld	r18, X+
    110e:	3c 91       	ld	r19, X
    1110:	13 97       	sbiw	r26, 0x03	; 3
    1112:	82 81       	ldd	r24, Z+2	; 0x02
    1114:	93 81       	ldd	r25, Z+3	; 0x03
    1116:	82 17       	cp	r24, r18
    1118:	93 07       	cpc	r25, r19
    111a:	94 f0       	brlt	.+36     	; 0x1140 <__fpcmp_parts_f+0x88>
    111c:	28 17       	cp	r18, r24
    111e:	39 07       	cpc	r19, r25
    1120:	bc f0       	brlt	.+46     	; 0x1150 <__fpcmp_parts_f+0x98>
    1122:	14 96       	adiw	r26, 0x04	; 4
    1124:	8d 91       	ld	r24, X+
    1126:	9d 91       	ld	r25, X+
    1128:	0d 90       	ld	r0, X+
    112a:	bc 91       	ld	r27, X
    112c:	a0 2d       	mov	r26, r0
    112e:	24 81       	ldd	r18, Z+4	; 0x04
    1130:	35 81       	ldd	r19, Z+5	; 0x05
    1132:	46 81       	ldd	r20, Z+6	; 0x06
    1134:	57 81       	ldd	r21, Z+7	; 0x07
    1136:	28 17       	cp	r18, r24
    1138:	39 07       	cpc	r19, r25
    113a:	4a 07       	cpc	r20, r26
    113c:	5b 07       	cpc	r21, r27
    113e:	18 f4       	brcc	.+6      	; 0x1146 <__fpcmp_parts_f+0x8e>
    1140:	11 23       	and	r17, r17
    1142:	41 f0       	breq	.+16     	; 0x1154 <__fpcmp_parts_f+0x9c>
    1144:	0a c0       	rjmp	.+20     	; 0x115a <__fpcmp_parts_f+0xa2>
    1146:	82 17       	cp	r24, r18
    1148:	93 07       	cpc	r25, r19
    114a:	a4 07       	cpc	r26, r20
    114c:	b5 07       	cpc	r27, r21
    114e:	40 f4       	brcc	.+16     	; 0x1160 <__fpcmp_parts_f+0xa8>
    1150:	11 23       	and	r17, r17
    1152:	19 f0       	breq	.+6      	; 0x115a <__fpcmp_parts_f+0xa2>
    1154:	61 e0       	ldi	r22, 0x01	; 1
    1156:	70 e0       	ldi	r23, 0x00	; 0
    1158:	05 c0       	rjmp	.+10     	; 0x1164 <__fpcmp_parts_f+0xac>
    115a:	6f ef       	ldi	r22, 0xFF	; 255
    115c:	7f ef       	ldi	r23, 0xFF	; 255
    115e:	02 c0       	rjmp	.+4      	; 0x1164 <__fpcmp_parts_f+0xac>
    1160:	60 e0       	ldi	r22, 0x00	; 0
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	cb 01       	movw	r24, r22
    1166:	1f 91       	pop	r17
    1168:	08 95       	ret

0000116a <__prologue_saves__>:
    116a:	2f 92       	push	r2
    116c:	3f 92       	push	r3
    116e:	4f 92       	push	r4
    1170:	5f 92       	push	r5
    1172:	6f 92       	push	r6
    1174:	7f 92       	push	r7
    1176:	8f 92       	push	r8
    1178:	9f 92       	push	r9
    117a:	af 92       	push	r10
    117c:	bf 92       	push	r11
    117e:	cf 92       	push	r12
    1180:	df 92       	push	r13
    1182:	ef 92       	push	r14
    1184:	ff 92       	push	r15
    1186:	0f 93       	push	r16
    1188:	1f 93       	push	r17
    118a:	cf 93       	push	r28
    118c:	df 93       	push	r29
    118e:	cd b7       	in	r28, 0x3d	; 61
    1190:	de b7       	in	r29, 0x3e	; 62
    1192:	ca 1b       	sub	r28, r26
    1194:	db 0b       	sbc	r29, r27
    1196:	0f b6       	in	r0, 0x3f	; 63
    1198:	f8 94       	cli
    119a:	de bf       	out	0x3e, r29	; 62
    119c:	0f be       	out	0x3f, r0	; 63
    119e:	cd bf       	out	0x3d, r28	; 61
    11a0:	09 94       	ijmp

000011a2 <__epilogue_restores__>:
    11a2:	2a 88       	ldd	r2, Y+18	; 0x12
    11a4:	39 88       	ldd	r3, Y+17	; 0x11
    11a6:	48 88       	ldd	r4, Y+16	; 0x10
    11a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    11aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    11ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    11ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    11b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    11b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    11b4:	b9 84       	ldd	r11, Y+9	; 0x09
    11b6:	c8 84       	ldd	r12, Y+8	; 0x08
    11b8:	df 80       	ldd	r13, Y+7	; 0x07
    11ba:	ee 80       	ldd	r14, Y+6	; 0x06
    11bc:	fd 80       	ldd	r15, Y+5	; 0x05
    11be:	0c 81       	ldd	r16, Y+4	; 0x04
    11c0:	1b 81       	ldd	r17, Y+3	; 0x03
    11c2:	aa 81       	ldd	r26, Y+2	; 0x02
    11c4:	b9 81       	ldd	r27, Y+1	; 0x01
    11c6:	ce 0f       	add	r28, r30
    11c8:	d1 1d       	adc	r29, r1
    11ca:	0f b6       	in	r0, 0x3f	; 63
    11cc:	f8 94       	cli
    11ce:	de bf       	out	0x3e, r29	; 62
    11d0:	0f be       	out	0x3f, r0	; 63
    11d2:	cd bf       	out	0x3d, r28	; 61
    11d4:	ed 01       	movw	r28, r26
    11d6:	08 95       	ret

000011d8 <_exit>:
    11d8:	f8 94       	cli

000011da <__stop_program>:
    11da:	ff cf       	rjmp	.-2      	; 0x11da <__stop_program>
