
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000011da  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000110  00800060  000011da  0000126e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  00800170  00800170  0000137e  2**0
                  ALLOC
  3 .debug_aranges 000001c0  00000000  00000000  0000137e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000041a  00000000  00000000  0000153e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000028ba  00000000  00000000  00001958  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000153a  00000000  00000000  00004212  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001842  00000000  00000000  0000574c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000350  00000000  00000000  00006f90  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000053c  00000000  00000000  000072e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a9d  00000000  00000000  0000781c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  000082b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ea ed       	ldi	r30, 0xDA	; 218
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 37       	cpi	r26, 0x70	; 112
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a0 e7       	ldi	r26, 0x70	; 112
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a8 38       	cpi	r26, 0x88	; 136
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 77 00 	call	0xee	; 0xee <main>
      8a:	0c 94 eb 08 	jmp	0x11d6	; 0x11d6 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <setupMIDI>:
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
      92:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) baudrate;
      94:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
      96:	88 e1       	ldi	r24, 0x18	; 24
      98:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
      9a:	86 e8       	ldi	r24, 0x86	; 134
      9c:	80 bd       	out	0x20, r24	; 32
}
      9e:	08 95       	ret

000000a0 <setupPins>:
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      a0:	8f ef       	ldi	r24, 0xFF	; 255
      a2:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      a4:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      a6:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      a8:	87 e0       	ldi	r24, 0x07	; 7
      aa:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
      ac:	11 ba       	out	0x11, r1	; 17
}
      ae:	08 95       	ret

000000b0 <setupAnalog>:
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
      b0:	87 e4       	ldi	r24, 0x47	; 71
      b2:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
      b4:	87 e8       	ldi	r24, 0x87	; 135
      b6:	86 b9       	out	0x06, r24	; 6
}
      b8:	08 95       	ret

000000ba <setupTimer>:
void setupTimer(){
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
      ba:	85 e0       	ldi	r24, 0x05	; 5
      bc:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
      be:	81 ea       	ldi	r24, 0xA1	; 161
      c0:	97 e0       	ldi	r25, 0x07	; 7
      c2:	9b bd       	out	0x2b, r25	; 43
      c4:	8a bd       	out	0x2a, r24	; 42
	TCNT1 = 0;
      c6:	1d bc       	out	0x2d, r1	; 45
      c8:	1c bc       	out	0x2c, r1	; 44
}
      ca:	08 95       	ret

000000cc <record>:

/***** Create Methods *****/

void record(){
	 //writeSong2();
}
      cc:	08 95       	ret

000000ce <modify>:
}


void modify(){
	//analogLEDTest();
}
      ce:	08 95       	ret

000000d0 <playTimer>:
	}
	
}

void playTimer(){
	while((TIFR & (1<<OCF1A)) == 0);// wait till the timer overflow flag is SET
      d0:	08 b6       	in	r0, 0x38	; 56
      d2:	04 fe       	sbrs	r0, 4
      d4:	fd cf       	rjmp	.-6      	; 0xd0 <playTimer>
		PORTB ^= 0xFF;
      d6:	88 b3       	in	r24, 0x18	; 24
      d8:	80 95       	com	r24
      da:	88 bb       	out	0x18, r24	; 24
		TCNT1 = 0; 
      dc:	1d bc       	out	0x2d, r1	; 45
      de:	1c bc       	out	0x2c, r1	; 44
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
      e0:	88 b7       	in	r24, 0x38	; 56
      e2:	80 61       	ori	r24, 0x10	; 16
      e4:	88 bf       	out	0x38, r24	; 56
}
      e6:	08 95       	ret

000000e8 <playBack>:
void record(){
	 //writeSong2();
}

void playBack(){
	playTimer();
      e8:	0e 94 68 00 	call	0xd0	; 0xd0 <playTimer>
}
      ec:	08 95       	ret

000000ee <main>:
	UBRRL = (unsigned char) baudrate;
	UCSRB = (1 << TXEN) | (1 << RXEN);
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
}
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      ee:	8f ef       	ldi	r24, 0xFF	; 255
      f0:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      f2:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      f4:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      f6:	27 e0       	ldi	r18, 0x07	; 7
      f8:	2b bb       	out	0x1b, r18	; 27
	DDRD = 0x00;
      fa:	11 ba       	out	0x11, r1	; 17
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
}
void setupTimer(){
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
      fc:	85 e0       	ldi	r24, 0x05	; 5
      fe:	8e bd       	out	0x2e, r24	; 46
	OCR1A = 1953; // 500ms delay  equation = (500*10^-3/(1/3906.25));
     100:	81 ea       	ldi	r24, 0xA1	; 161
     102:	97 e0       	ldi	r25, 0x07	; 7
     104:	9b bd       	out	0x2b, r25	; 43
     106:	8a bd       	out	0x2a, r24	; 42
	TCNT1 = 0;
     108:	1d bc       	out	0x2d, r1	; 45
     10a:	1c bc       	out	0x2c, r1	; 44
	PORTB = 0x00; //Turns all leds off
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
	DDRD = 0x00;
}
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
     10c:	87 e4       	ldi	r24, 0x47	; 71
     10e:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
     110:	87 e8       	ldi	r24, 0x87	; 135
     112:	86 b9       	out	0x06, r24	; 6
}

/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
     114:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) baudrate;
     116:	29 b9       	out	0x09, r18	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
     118:	88 e1       	ldi	r24, 0x18	; 24
     11a:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
     11c:	86 e8       	ldi	r24, 0x86	; 134
     11e:	80 bd       	out	0x20, r24	; 32
   setupTimer();
   setupAnalog();
   setupMIDI(BUAD_PRESCALE);

    while(1){
		uint8_t rec = PINA & 0x04;
     120:	29 b3       	in	r18, 0x19	; 25
		uint8_t play = PINA & 0x02;
     122:	89 b3       	in	r24, 0x19	; 25
		uint8_t mod = PINA & 0x01;
     124:	99 b3       	in	r25, 0x19	; 25
	
		if(rec && !play){
			record();
		}
		if(play && !rec){
     126:	81 ff       	sbrs	r24, 1
     128:	fb cf       	rjmp	.-10     	; 0x120 <main+0x32>
     12a:	22 fd       	sbrc	r18, 2
     12c:	f9 cf       	rjmp	.-14     	; 0x120 <main+0x32>
			if (mod){ // Modify Mode
     12e:	90 fd       	sbrc	r25, 0
     130:	f7 cf       	rjmp	.-18     	; 0x120 <main+0x32>
void record(){
	 //writeSong2();
}

void playBack(){
	playTimer();
     132:	0e 94 68 00 	call	0xd0	; 0xd0 <playTimer>
     136:	f4 cf       	rjmp	.-24     	; 0x120 <main+0x32>

00000138 <wait>:
	midi_Transmit(MIDIoff);
}


void wait(int time)
{
     138:	af 92       	push	r10
     13a:	bf 92       	push	r11
     13c:	cf 92       	push	r12
     13e:	df 92       	push	r13
     140:	ef 92       	push	r14
     142:	ff 92       	push	r15
     144:	0f 93       	push	r16
     146:	1f 93       	push	r17
   _delay_ms(time);
     148:	aa 27       	eor	r26, r26
     14a:	97 fd       	sbrc	r25, 7
     14c:	a0 95       	com	r26
     14e:	ba 2f       	mov	r27, r26
     150:	bc 01       	movw	r22, r24
     152:	cd 01       	movw	r24, r26
     154:	0e 94 94 05 	call	0xb28	; 0xb28 <__floatsisf>
     158:	5b 01       	movw	r10, r22
     15a:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     15c:	20 e0       	ldi	r18, 0x00	; 0
     15e:	30 e0       	ldi	r19, 0x00	; 0
     160:	4a e7       	ldi	r20, 0x7A	; 122
     162:	53 e4       	ldi	r21, 0x43	; 67
     164:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
     168:	7b 01       	movw	r14, r22
     16a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     16c:	20 e0       	ldi	r18, 0x00	; 0
     16e:	30 e0       	ldi	r19, 0x00	; 0
     170:	40 e8       	ldi	r20, 0x80	; 128
     172:	5f e3       	ldi	r21, 0x3F	; 63
     174:	0e 94 64 05 	call	0xac8	; 0xac8 <__ltsf2>
     178:	88 23       	and	r24, r24
     17a:	1c f4       	brge	.+6      	; 0x182 <wait+0x4a>
     17c:	61 e0       	ldi	r22, 0x01	; 1
     17e:	70 e0       	ldi	r23, 0x00	; 0
     180:	24 c0       	rjmp	.+72     	; 0x1ca <wait+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
     182:	c8 01       	movw	r24, r16
     184:	b7 01       	movw	r22, r14
     186:	20 e0       	ldi	r18, 0x00	; 0
     188:	3f ef       	ldi	r19, 0xFF	; 255
     18a:	4f e7       	ldi	r20, 0x7F	; 127
     18c:	57 e4       	ldi	r21, 0x47	; 71
     18e:	0e 94 04 05 	call	0xa08	; 0xa08 <__gtsf2>
     192:	18 16       	cp	r1, r24
     194:	b4 f4       	brge	.+44     	; 0x1c2 <wait+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     196:	c6 01       	movw	r24, r12
     198:	b5 01       	movw	r22, r10
     19a:	20 e0       	ldi	r18, 0x00	; 0
     19c:	30 e0       	ldi	r19, 0x00	; 0
     19e:	40 e2       	ldi	r20, 0x20	; 32
     1a0:	51 e4       	ldi	r21, 0x41	; 65
     1a2:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
     1a6:	0e 94 34 02 	call	0x468	; 0x468 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1aa:	89 e1       	ldi	r24, 0x19	; 25
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	05 c0       	rjmp	.+10     	; 0x1ba <wait+0x82>
     1b0:	fc 01       	movw	r30, r24
     1b2:	31 97       	sbiw	r30, 0x01	; 1
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <wait+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1b6:	61 50       	subi	r22, 0x01	; 1
     1b8:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ba:	61 15       	cp	r22, r1
     1bc:	71 05       	cpc	r23, r1
     1be:	c1 f7       	brne	.-16     	; 0x1b0 <wait+0x78>
     1c0:	07 c0       	rjmp	.+14     	; 0x1d0 <wait+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     1c2:	c8 01       	movw	r24, r16
     1c4:	b7 01       	movw	r22, r14
     1c6:	0e 94 34 02 	call	0x468	; 0x468 <__fixunssfsi>
     1ca:	cb 01       	movw	r24, r22
     1cc:	01 97       	sbiw	r24, 0x01	; 1
     1ce:	f1 f7       	brne	.-4      	; 0x1cc <wait+0x94>
}
     1d0:	1f 91       	pop	r17
     1d2:	0f 91       	pop	r16
     1d4:	ff 90       	pop	r15
     1d6:	ef 90       	pop	r14
     1d8:	df 90       	pop	r13
     1da:	cf 90       	pop	r12
     1dc:	bf 90       	pop	r11
     1de:	af 90       	pop	r10
     1e0:	08 95       	ret

000001e2 <ledOFF>:

void ledOFF(){
	PORTB = 0x00;
     1e2:	18 ba       	out	0x18, r1	; 24
}
     1e4:	08 95       	ret

000001e6 <ReadADC>:

uint16_t ReadADC(){
	//Start a single conversion
	ADCSRA |= (1 << ADSC);
     1e6:	36 9a       	sbi	0x06, 6	; 6
	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
     1e8:	34 9b       	sbis	0x06, 4	; 6
     1ea:	fe cf       	rjmp	.-4      	; 0x1e8 <ReadADC+0x2>
	//clear data (conversion is complete)
	ADCSRA |= (1 << ADIF);
     1ec:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
     1ee:	24 b1       	in	r18, 0x04	; 4
     1f0:	35 b1       	in	r19, 0x05	; 5
}
     1f2:	c9 01       	movw	r24, r18
     1f4:	08 95       	ret

000001f6 <analogLEDTest>:

void analogLEDTest(){
		adc_value = ReadADC();
     1f6:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <ReadADC>
     1fa:	9c 01       	movw	r18, r24
     1fc:	90 93 7f 01 	sts	0x017F, r25
     200:	80 93 7e 01 	sts	0x017E, r24
		if (adc_value > 30){
     204:	8f 31       	cpi	r24, 0x1F	; 31
     206:	91 05       	cpc	r25, r1
     208:	28 f1       	brcs	.+74     	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB0);
     20a:	81 e0       	ldi	r24, 0x01	; 1
     20c:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 60){
     20e:	2d 33       	cpi	r18, 0x3D	; 61
     210:	31 05       	cpc	r19, r1
     212:	00 f1       	brcs	.+64     	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB1);
     214:	82 e0       	ldi	r24, 0x02	; 2
     216:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 90){
     218:	2b 35       	cpi	r18, 0x5B	; 91
     21a:	31 05       	cpc	r19, r1
     21c:	d8 f0       	brcs	.+54     	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB2);
     21e:	84 e0       	ldi	r24, 0x04	; 4
     220:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 120){
     222:	29 37       	cpi	r18, 0x79	; 121
     224:	31 05       	cpc	r19, r1
     226:	b0 f0       	brcs	.+44     	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB3);
     228:	88 e0       	ldi	r24, 0x08	; 8
     22a:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 150){
     22c:	27 39       	cpi	r18, 0x97	; 151
     22e:	31 05       	cpc	r19, r1
     230:	88 f0       	brcs	.+34     	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB4);
     232:	80 e1       	ldi	r24, 0x10	; 16
     234:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 180){
     236:	25 3b       	cpi	r18, 0xB5	; 181
     238:	31 05       	cpc	r19, r1
     23a:	60 f0       	brcs	.+24     	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB5);
     23c:	80 e2       	ldi	r24, 0x20	; 32
     23e:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 210){
     240:	23 3d       	cpi	r18, 0xD3	; 211
     242:	31 05       	cpc	r19, r1
     244:	38 f0       	brcs	.+14     	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB6);
     246:	80 e4       	ldi	r24, 0x40	; 64
     248:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 240){
     24a:	21 3f       	cpi	r18, 0xF1	; 241
     24c:	31 05       	cpc	r19, r1
     24e:	10 f0       	brcs	.+4      	; 0x254 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB7);
     250:	80 e8       	ldi	r24, 0x80	; 128
     252:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value >= 240){
     254:	20 3f       	cpi	r18, 0xF0	; 240
     256:	31 05       	cpc	r19, r1
     258:	10 f0       	brcs	.+4      	; 0x25e <analogLEDTest+0x68>
			PORTB = 0xFF;
     25a:	8f ef       	ldi	r24, 0xFF	; 255
     25c:	88 bb       	out	0x18, r24	; 24
     25e:	08 95       	ret

00000260 <midi_Transmit>:
		}
	}

void midi_Transmit( unsigned char data){
	/* Wait for empty transmit buffer */
	while(! UCSRA & (1 << UDRE) );
     260:	9b b1       	in	r25, 0x0b	; 11

	/* Put data into buffer, sends the data */
	UDR = data;
     262:	8c b9       	out	0x0c, r24	; 12
}
     264:	08 95       	ret

00000266 <midiTransitTest>:
	}	

}

void midiTransitTest(){
	while ((UCSRA & (1 << UDRE)) == 0) {};
     266:	5d 9b       	sbis	0x0b, 5	; 11
     268:	fe cf       	rjmp	.-4      	; 0x266 <midiTransitTest>

	midi_Transmit(MIDIon);
     26a:	80 91 60 00 	lds	r24, 0x0060
     26e:	90 91 61 00 	lds	r25, 0x0061
     272:	0e 94 30 01 	call	0x260	; 0x260 <midi_Transmit>
	midi_Transmit(MIDIb1);
     276:	80 91 62 00 	lds	r24, 0x0062
     27a:	90 91 63 00 	lds	r25, 0x0063
     27e:	0e 94 30 01 	call	0x260	; 0x260 <midi_Transmit>
	midi_Transmit(MIDIb2);
     282:	80 91 64 00 	lds	r24, 0x0064
     286:	90 91 65 00 	lds	r25, 0x0065
     28a:	0e 94 30 01 	call	0x260	; 0x260 <midi_Transmit>
	midi_Transmit(MIDIoff);
     28e:	80 91 66 00 	lds	r24, 0x0066
     292:	90 91 67 00 	lds	r25, 0x0067
     296:	0e 94 30 01 	call	0x260	; 0x260 <midi_Transmit>
}
     29a:	08 95       	ret

0000029c <playSong>:
void modify(){
	//analogLEDTest();
}


void playSong(){
     29c:	8f 92       	push	r8
     29e:	9f 92       	push	r9
     2a0:	af 92       	push	r10
     2a2:	bf 92       	push	r11
     2a4:	cf 92       	push	r12
     2a6:	df 92       	push	r13
     2a8:	ef 92       	push	r14
     2aa:	ff 92       	push	r15
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
	eeprom_address= 0x00;
     2b4:	10 92 7b 01 	sts	0x017B, r1
     2b8:	10 92 7a 01 	sts	0x017A, r1
     2bc:	89 e1       	ldi	r24, 0x19	; 25
     2be:	88 2e       	mov	r8, r24
     2c0:	91 2c       	mov	r9, r1
     2c2:	63 c0       	rjmp	.+198    	; 0x38a <playSong+0xee>
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2c4:	e1 99       	sbic	0x1c, 1	; 28
     2c6:	fe cf       	rjmp	.-4      	; 0x2c4 <playSong+0x28>
	/* Set up address register */
	EEAR = uiAddress;
     2c8:	3f bb       	out	0x1f, r19	; 31
     2ca:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2cc:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2ce:	8d b3       	in	r24, 0x1d	; 29


void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
     2d0:	88 bb       	out	0x18, r24	; 24
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2d2:	e1 99       	sbic	0x1c, 1	; 28
     2d4:	fe cf       	rjmp	.-4      	; 0x2d2 <playSong+0x36>
	/* Set up address register */
	EEAR = uiAddress;
     2d6:	3f bb       	out	0x1f, r19	; 31
     2d8:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2da:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     2dc:	8d b3       	in	r24, 0x1d	; 29

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
     2de:	90 e0       	ldi	r25, 0x00	; 0
     2e0:	0e 94 30 01 	call	0x260	; 0x260 <midi_Transmit>
		eeprom_address++;
     2e4:	c0 91 7a 01 	lds	r28, 0x017A
     2e8:	d0 91 7b 01 	lds	r29, 0x017B
     2ec:	21 96       	adiw	r28, 0x01	; 1
     2ee:	d0 93 7b 01 	sts	0x017B, r29
     2f2:	c0 93 7a 01 	sts	0x017A, r28
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     2f6:	e1 99       	sbic	0x1c, 1	; 28
     2f8:	fe cf       	rjmp	.-4      	; 0x2f6 <playSong+0x5a>
	/* Set up address register */
	EEAR = uiAddress;
     2fa:	df bb       	out	0x1f, r29	; 31
     2fc:	ce bb       	out	0x1e, r28	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     2fe:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     300:	6d b3       	in	r22, 0x1d	; 29
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
     302:	70 e0       	ldi	r23, 0x00	; 0
     304:	80 e0       	ldi	r24, 0x00	; 0
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	0e 94 46 06 	call	0xc8c	; 0xc8c <__floatunsisf>
     30c:	5b 01       	movw	r10, r22
     30e:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	4a e7       	ldi	r20, 0x7A	; 122
     316:	53 e4       	ldi	r21, 0x43	; 67
     318:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
     31c:	7b 01       	movw	r14, r22
     31e:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     320:	20 e0       	ldi	r18, 0x00	; 0
     322:	30 e0       	ldi	r19, 0x00	; 0
     324:	40 e8       	ldi	r20, 0x80	; 128
     326:	5f e3       	ldi	r21, 0x3F	; 63
     328:	0e 94 64 05 	call	0xac8	; 0xac8 <__ltsf2>
     32c:	88 23       	and	r24, r24
     32e:	1c f4       	brge	.+6      	; 0x336 <playSong+0x9a>
     330:	61 e0       	ldi	r22, 0x01	; 1
     332:	70 e0       	ldi	r23, 0x00	; 0
     334:	22 c0       	rjmp	.+68     	; 0x37a <playSong+0xde>
		__ticks = 1;
	else if (__tmp > 65535)
     336:	c8 01       	movw	r24, r16
     338:	b7 01       	movw	r22, r14
     33a:	20 e0       	ldi	r18, 0x00	; 0
     33c:	3f ef       	ldi	r19, 0xFF	; 255
     33e:	4f e7       	ldi	r20, 0x7F	; 127
     340:	57 e4       	ldi	r21, 0x47	; 71
     342:	0e 94 04 05 	call	0xa08	; 0xa08 <__gtsf2>
     346:	18 16       	cp	r1, r24
     348:	a4 f4       	brge	.+40     	; 0x372 <playSong+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     34a:	c6 01       	movw	r24, r12
     34c:	b5 01       	movw	r22, r10
     34e:	20 e0       	ldi	r18, 0x00	; 0
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	40 e2       	ldi	r20, 0x20	; 32
     354:	51 e4       	ldi	r21, 0x41	; 65
     356:	0e 94 0a 04 	call	0x814	; 0x814 <__mulsf3>
     35a:	0e 94 34 02 	call	0x468	; 0x468 <__fixunssfsi>
     35e:	05 c0       	rjmp	.+10     	; 0x36a <playSong+0xce>
     360:	c4 01       	movw	r24, r8
     362:	01 97       	sbiw	r24, 0x01	; 1
     364:	f1 f7       	brne	.-4      	; 0x362 <playSong+0xc6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     366:	61 50       	subi	r22, 0x01	; 1
     368:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     36a:	61 15       	cp	r22, r1
     36c:	71 05       	cpc	r23, r1
     36e:	c1 f7       	brne	.-16     	; 0x360 <playSong+0xc4>
     370:	07 c0       	rjmp	.+14     	; 0x380 <playSong+0xe4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     372:	c8 01       	movw	r24, r16
     374:	b7 01       	movw	r22, r14
     376:	0e 94 34 02 	call	0x468	; 0x468 <__fixunssfsi>
     37a:	cb 01       	movw	r24, r22
     37c:	01 97       	sbiw	r24, 0x01	; 1
     37e:	f1 f7       	brne	.-4      	; 0x37c <playSong+0xe0>
		eeprom_address++;
     380:	21 96       	adiw	r28, 0x01	; 1
     382:	d0 93 7b 01 	sts	0x017B, r29
     386:	c0 93 7a 01 	sts	0x017A, r28
}


void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
     38a:	20 91 7a 01 	lds	r18, 0x017A
     38e:	30 91 7b 01 	lds	r19, 0x017B
     392:	80 91 7c 01 	lds	r24, 0x017C
     396:	90 91 7d 01 	lds	r25, 0x017D
     39a:	28 17       	cp	r18, r24
     39c:	39 07       	cpc	r19, r25
     39e:	08 f4       	brcc	.+2      	; 0x3a2 <playSong+0x106>
     3a0:	91 cf       	rjmp	.-222    	; 0x2c4 <playSong+0x28>
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
		eeprom_address++;
	}
	
}
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	1f 91       	pop	r17
     3a8:	0f 91       	pop	r16
     3aa:	ff 90       	pop	r15
     3ac:	ef 90       	pop	r14
     3ae:	df 90       	pop	r13
     3b0:	cf 90       	pop	r12
     3b2:	bf 90       	pop	r11
     3b4:	af 90       	pop	r10
     3b6:	9f 90       	pop	r9
     3b8:	8f 90       	pop	r8
     3ba:	08 95       	ret

000003bc <midi_Receive>:
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     3bc:	5f 9b       	sbis	0x0b, 7	; 11
     3be:	fe cf       	rjmp	.-4      	; 0x3bc <midi_Receive>

	/* get and return data from buffer */
	return UDR;
     3c0:	8c b1       	in	r24, 0x0c	; 12
}
     3c2:	08 95       	ret

000003c4 <midi_Flush>:

/* flushs the buffer of the midi */
void midi_Flush(void){ 
     3c4:	01 c0       	rjmp	.+2      	; 0x3c8 <midi_Flush+0x4>
	unsigned char dummy;
	while (UCSRA & (1 << RXC) ) dummy = UDR;
     3c6:	8c b1       	in	r24, 0x0c	; 12
     3c8:	5f 99       	sbic	0x0b, 7	; 11
     3ca:	fd cf       	rjmp	.-6      	; 0x3c6 <midi_Flush+0x2>
}
     3cc:	08 95       	ret

000003ce <midi_ReadUCSRC>:

unsigned char midi_ReadUCSRC(void){
	unsigned char ucsrc;
	/* read UCSRC */
	//note may need cli() to disable interrupts
	ucsrc = UBRRH;
     3ce:	80 b5       	in	r24, 0x20	; 32
	ucsrc = UCSRC;
     3d0:	80 b5       	in	r24, 0x20	; 32
	return ucsrc;
}
     3d2:	08 95       	ret

000003d4 <TIM16_ReadTCNT1>:

unsigned char TIM16_ReadTCNT1(void){
	unsigned char sreg;
	unsigned char i;
	/* save gloval interrupt flag */
	sreg = SREG;
     3d4:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     3d6:	f8 94       	cli
	/* read TCNT1 into i */
	i = TCNT1;
     3d8:	8c b5       	in	r24, 0x2c	; 44
     3da:	9d b5       	in	r25, 0x2d	; 45
	/* restore global interrupt flag */
	SREG = sreg;
     3dc:	2f bf       	out	0x3f, r18	; 63
	return i;
}
     3de:	08 95       	ret

000003e0 <TIM16_WriteTCNT1>:

void TIM16_WriteTCNT1 (unsigned int i){
	unsigned char sreg;
	/* save global interrupt flag */
	sreg = SREG;
     3e0:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     3e2:	f8 94       	cli
	/* set tcnt1 to i */
	TCNT1 = i;
     3e4:	9d bd       	out	0x2d, r25	; 45
     3e6:	8c bd       	out	0x2c, r24	; 44
	/* restore global interrupt flag */
	SREG = sreg;
     3e8:	2f bf       	out	0x3f, r18	; 63
}
     3ea:	08 95       	ret

000003ec <EEPROM_write>:

void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
	/* wait for completion of previous write */
	while (EECR & (1 <<EEWE));
     3ec:	e1 99       	sbic	0x1c, 1	; 28
     3ee:	fe cf       	rjmp	.-4      	; 0x3ec <EEPROM_write>

	/* Set up address and data registers */
	EEAR = uiAddress;
     3f0:	9f bb       	out	0x1f, r25	; 31
     3f2:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
     3f4:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1 << EEMWE);
     3f6:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeporm write by setting EEWE */
	EECR |= (1 << EEWE);
     3f8:	e1 9a       	sbi	0x1c, 1	; 28
}
     3fa:	08 95       	ret

000003fc <writeSong2>:
		PORTB ^= 0xFF;
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
     3fc:	cf 93       	push	r28
     3fe:	df 93       	push	r29
     400:	c0 e8       	ldi	r28, 0x80	; 128
     402:	d1 e0       	ldi	r29, 0x01	; 1
     404:	fe 01       	movw	r30, r28
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     406:	5f 9b       	sbis	0x0b, 7	; 11
     408:	fe cf       	rjmp	.-4      	; 0x406 <writeSong2+0xa>

	/* get and return data from buffer */
	return UDR;
     40a:	8c b1       	in	r24, 0x0c	; 12
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
		midiData[i] = midi_Receive();
     40c:	81 93       	st	Z+, r24
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
     40e:	81 e0       	ldi	r24, 0x01	; 1
     410:	e6 38       	cpi	r30, 0x86	; 134
     412:	f8 07       	cpc	r31, r24
     414:	c1 f7       	brne	.-16     	; 0x406 <writeSong2+0xa>
		midiData[i] = midi_Receive();
	}

	PORTB = midiData[1];
     416:	80 91 81 01 	lds	r24, 0x0181
     41a:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 0;
     41c:	1d bc       	out	0x2d, r1	; 45
     41e:	1c bc       	out	0x2c, r1	; 44

	midiData[6] = (TCNT1 >> 8);
     420:	8c b5       	in	r24, 0x2c	; 44
     422:	9d b5       	in	r25, 0x2d	; 45
     424:	90 83       	st	Z, r25
	midiData[7] = (TCNT1 & 0xFF);
     426:	8c b5       	in	r24, 0x2c	; 44
     428:	9d b5       	in	r25, 0x2d	; 45
     42a:	81 83       	std	Z+1, r24	; 0x01

	for(int j= 0; j <6; j++){
		EEPROM_write(eeprom_address, midiData[j]);
     42c:	80 91 7a 01 	lds	r24, 0x017A
     430:	90 91 7b 01 	lds	r25, 0x017B
     434:	69 91       	ld	r22, Y+
     436:	0e 94 f6 01 	call	0x3ec	; 0x3ec <EEPROM_write>
		eeprom_address++;		
     43a:	80 91 7a 01 	lds	r24, 0x017A
     43e:	90 91 7b 01 	lds	r25, 0x017B
     442:	01 96       	adiw	r24, 0x01	; 1
     444:	90 93 7b 01 	sts	0x017B, r25
     448:	80 93 7a 01 	sts	0x017A, r24
	TCNT1 = 0;

	midiData[6] = (TCNT1 >> 8);
	midiData[7] = (TCNT1 & 0xFF);

	for(int j= 0; j <6; j++){
     44c:	81 e0       	ldi	r24, 0x01	; 1
     44e:	c6 38       	cpi	r28, 0x86	; 134
     450:	d8 07       	cpc	r29, r24
     452:	61 f7       	brne	.-40     	; 0x42c <writeSong2+0x30>
		EEPROM_write(eeprom_address, midiData[j]);
		eeprom_address++;		
	}	

}
     454:	df 91       	pop	r29
     456:	cf 91       	pop	r28
     458:	08 95       	ret

0000045a <EEPROM_read>:
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     45a:	e1 99       	sbic	0x1c, 1	; 28
     45c:	fe cf       	rjmp	.-4      	; 0x45a <EEPROM_read>
	/* Set up address register */
	EEAR = uiAddress;
     45e:	9f bb       	out	0x1f, r25	; 31
     460:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     462:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     464:	8d b3       	in	r24, 0x1d	; 29
}
     466:	08 95       	ret

00000468 <__fixunssfsi>:
     468:	ef 92       	push	r14
     46a:	ff 92       	push	r15
     46c:	0f 93       	push	r16
     46e:	1f 93       	push	r17
     470:	7b 01       	movw	r14, r22
     472:	8c 01       	movw	r16, r24
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 e0       	ldi	r19, 0x00	; 0
     478:	40 e0       	ldi	r20, 0x00	; 0
     47a:	5f e4       	ldi	r21, 0x4F	; 79
     47c:	0e 94 34 05 	call	0xa68	; 0xa68 <__gesf2>
     480:	88 23       	and	r24, r24
     482:	8c f0       	brlt	.+34     	; 0x4a6 <__fixunssfsi+0x3e>
     484:	c8 01       	movw	r24, r16
     486:	b7 01       	movw	r22, r14
     488:	20 e0       	ldi	r18, 0x00	; 0
     48a:	30 e0       	ldi	r19, 0x00	; 0
     48c:	40 e0       	ldi	r20, 0x00	; 0
     48e:	5f e4       	ldi	r21, 0x4F	; 79
     490:	0e 94 ac 03 	call	0x758	; 0x758 <__subsf3>
     494:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <__fixsfsi>
     498:	9b 01       	movw	r18, r22
     49a:	ac 01       	movw	r20, r24
     49c:	20 50       	subi	r18, 0x00	; 0
     49e:	30 40       	sbci	r19, 0x00	; 0
     4a0:	40 40       	sbci	r20, 0x00	; 0
     4a2:	50 48       	sbci	r21, 0x80	; 128
     4a4:	06 c0       	rjmp	.+12     	; 0x4b2 <__fixunssfsi+0x4a>
     4a6:	c8 01       	movw	r24, r16
     4a8:	b7 01       	movw	r22, r14
     4aa:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <__fixsfsi>
     4ae:	9b 01       	movw	r18, r22
     4b0:	ac 01       	movw	r20, r24
     4b2:	b9 01       	movw	r22, r18
     4b4:	ca 01       	movw	r24, r20
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	08 95       	ret

000004c0 <_fpadd_parts>:
     4c0:	a0 e0       	ldi	r26, 0x00	; 0
     4c2:	b0 e0       	ldi	r27, 0x00	; 0
     4c4:	e6 e6       	ldi	r30, 0x66	; 102
     4c6:	f2 e0       	ldi	r31, 0x02	; 2
     4c8:	0c 94 b4 08 	jmp	0x1168	; 0x1168 <__prologue_saves__>
     4cc:	dc 01       	movw	r26, r24
     4ce:	2b 01       	movw	r4, r22
     4d0:	fa 01       	movw	r30, r20
     4d2:	9c 91       	ld	r25, X
     4d4:	92 30       	cpi	r25, 0x02	; 2
     4d6:	08 f4       	brcc	.+2      	; 0x4da <_fpadd_parts+0x1a>
     4d8:	39 c1       	rjmp	.+626    	; 0x74c <_fpadd_parts+0x28c>
     4da:	eb 01       	movw	r28, r22
     4dc:	88 81       	ld	r24, Y
     4de:	82 30       	cpi	r24, 0x02	; 2
     4e0:	08 f4       	brcc	.+2      	; 0x4e4 <_fpadd_parts+0x24>
     4e2:	33 c1       	rjmp	.+614    	; 0x74a <_fpadd_parts+0x28a>
     4e4:	94 30       	cpi	r25, 0x04	; 4
     4e6:	69 f4       	brne	.+26     	; 0x502 <_fpadd_parts+0x42>
     4e8:	84 30       	cpi	r24, 0x04	; 4
     4ea:	09 f0       	breq	.+2      	; 0x4ee <_fpadd_parts+0x2e>
     4ec:	2f c1       	rjmp	.+606    	; 0x74c <_fpadd_parts+0x28c>
     4ee:	11 96       	adiw	r26, 0x01	; 1
     4f0:	9c 91       	ld	r25, X
     4f2:	11 97       	sbiw	r26, 0x01	; 1
     4f4:	89 81       	ldd	r24, Y+1	; 0x01
     4f6:	98 17       	cp	r25, r24
     4f8:	09 f4       	brne	.+2      	; 0x4fc <_fpadd_parts+0x3c>
     4fa:	28 c1       	rjmp	.+592    	; 0x74c <_fpadd_parts+0x28c>
     4fc:	a8 e6       	ldi	r26, 0x68	; 104
     4fe:	b0 e0       	ldi	r27, 0x00	; 0
     500:	25 c1       	rjmp	.+586    	; 0x74c <_fpadd_parts+0x28c>
     502:	84 30       	cpi	r24, 0x04	; 4
     504:	09 f4       	brne	.+2      	; 0x508 <_fpadd_parts+0x48>
     506:	21 c1       	rjmp	.+578    	; 0x74a <_fpadd_parts+0x28a>
     508:	82 30       	cpi	r24, 0x02	; 2
     50a:	a9 f4       	brne	.+42     	; 0x536 <_fpadd_parts+0x76>
     50c:	92 30       	cpi	r25, 0x02	; 2
     50e:	09 f0       	breq	.+2      	; 0x512 <_fpadd_parts+0x52>
     510:	1d c1       	rjmp	.+570    	; 0x74c <_fpadd_parts+0x28c>
     512:	9a 01       	movw	r18, r20
     514:	ad 01       	movw	r20, r26
     516:	88 e0       	ldi	r24, 0x08	; 8
     518:	ea 01       	movw	r28, r20
     51a:	09 90       	ld	r0, Y+
     51c:	ae 01       	movw	r20, r28
     51e:	e9 01       	movw	r28, r18
     520:	09 92       	st	Y+, r0
     522:	9e 01       	movw	r18, r28
     524:	81 50       	subi	r24, 0x01	; 1
     526:	c1 f7       	brne	.-16     	; 0x518 <_fpadd_parts+0x58>
     528:	e2 01       	movw	r28, r4
     52a:	89 81       	ldd	r24, Y+1	; 0x01
     52c:	11 96       	adiw	r26, 0x01	; 1
     52e:	9c 91       	ld	r25, X
     530:	89 23       	and	r24, r25
     532:	81 83       	std	Z+1, r24	; 0x01
     534:	08 c1       	rjmp	.+528    	; 0x746 <_fpadd_parts+0x286>
     536:	92 30       	cpi	r25, 0x02	; 2
     538:	09 f4       	brne	.+2      	; 0x53c <_fpadd_parts+0x7c>
     53a:	07 c1       	rjmp	.+526    	; 0x74a <_fpadd_parts+0x28a>
     53c:	12 96       	adiw	r26, 0x02	; 2
     53e:	2d 90       	ld	r2, X+
     540:	3c 90       	ld	r3, X
     542:	13 97       	sbiw	r26, 0x03	; 3
     544:	eb 01       	movw	r28, r22
     546:	8a 81       	ldd	r24, Y+2	; 0x02
     548:	9b 81       	ldd	r25, Y+3	; 0x03
     54a:	14 96       	adiw	r26, 0x04	; 4
     54c:	ad 90       	ld	r10, X+
     54e:	bd 90       	ld	r11, X+
     550:	cd 90       	ld	r12, X+
     552:	dc 90       	ld	r13, X
     554:	17 97       	sbiw	r26, 0x07	; 7
     556:	ec 80       	ldd	r14, Y+4	; 0x04
     558:	fd 80       	ldd	r15, Y+5	; 0x05
     55a:	0e 81       	ldd	r16, Y+6	; 0x06
     55c:	1f 81       	ldd	r17, Y+7	; 0x07
     55e:	91 01       	movw	r18, r2
     560:	28 1b       	sub	r18, r24
     562:	39 0b       	sbc	r19, r25
     564:	b9 01       	movw	r22, r18
     566:	37 ff       	sbrs	r19, 7
     568:	04 c0       	rjmp	.+8      	; 0x572 <_fpadd_parts+0xb2>
     56a:	66 27       	eor	r22, r22
     56c:	77 27       	eor	r23, r23
     56e:	62 1b       	sub	r22, r18
     570:	73 0b       	sbc	r23, r19
     572:	60 32       	cpi	r22, 0x20	; 32
     574:	71 05       	cpc	r23, r1
     576:	0c f0       	brlt	.+2      	; 0x57a <_fpadd_parts+0xba>
     578:	61 c0       	rjmp	.+194    	; 0x63c <_fpadd_parts+0x17c>
     57a:	12 16       	cp	r1, r18
     57c:	13 06       	cpc	r1, r19
     57e:	6c f5       	brge	.+90     	; 0x5da <_fpadd_parts+0x11a>
     580:	37 01       	movw	r6, r14
     582:	48 01       	movw	r8, r16
     584:	06 2e       	mov	r0, r22
     586:	04 c0       	rjmp	.+8      	; 0x590 <_fpadd_parts+0xd0>
     588:	96 94       	lsr	r9
     58a:	87 94       	ror	r8
     58c:	77 94       	ror	r7
     58e:	67 94       	ror	r6
     590:	0a 94       	dec	r0
     592:	d2 f7       	brpl	.-12     	; 0x588 <_fpadd_parts+0xc8>
     594:	21 e0       	ldi	r18, 0x01	; 1
     596:	30 e0       	ldi	r19, 0x00	; 0
     598:	40 e0       	ldi	r20, 0x00	; 0
     59a:	50 e0       	ldi	r21, 0x00	; 0
     59c:	04 c0       	rjmp	.+8      	; 0x5a6 <_fpadd_parts+0xe6>
     59e:	22 0f       	add	r18, r18
     5a0:	33 1f       	adc	r19, r19
     5a2:	44 1f       	adc	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	6a 95       	dec	r22
     5a8:	d2 f7       	brpl	.-12     	; 0x59e <_fpadd_parts+0xde>
     5aa:	21 50       	subi	r18, 0x01	; 1
     5ac:	30 40       	sbci	r19, 0x00	; 0
     5ae:	40 40       	sbci	r20, 0x00	; 0
     5b0:	50 40       	sbci	r21, 0x00	; 0
     5b2:	2e 21       	and	r18, r14
     5b4:	3f 21       	and	r19, r15
     5b6:	40 23       	and	r20, r16
     5b8:	51 23       	and	r21, r17
     5ba:	21 15       	cp	r18, r1
     5bc:	31 05       	cpc	r19, r1
     5be:	41 05       	cpc	r20, r1
     5c0:	51 05       	cpc	r21, r1
     5c2:	21 f0       	breq	.+8      	; 0x5cc <_fpadd_parts+0x10c>
     5c4:	21 e0       	ldi	r18, 0x01	; 1
     5c6:	30 e0       	ldi	r19, 0x00	; 0
     5c8:	40 e0       	ldi	r20, 0x00	; 0
     5ca:	50 e0       	ldi	r21, 0x00	; 0
     5cc:	79 01       	movw	r14, r18
     5ce:	8a 01       	movw	r16, r20
     5d0:	e6 28       	or	r14, r6
     5d2:	f7 28       	or	r15, r7
     5d4:	08 29       	or	r16, r8
     5d6:	19 29       	or	r17, r9
     5d8:	3c c0       	rjmp	.+120    	; 0x652 <_fpadd_parts+0x192>
     5da:	23 2b       	or	r18, r19
     5dc:	d1 f1       	breq	.+116    	; 0x652 <_fpadd_parts+0x192>
     5de:	26 0e       	add	r2, r22
     5e0:	37 1e       	adc	r3, r23
     5e2:	35 01       	movw	r6, r10
     5e4:	46 01       	movw	r8, r12
     5e6:	06 2e       	mov	r0, r22
     5e8:	04 c0       	rjmp	.+8      	; 0x5f2 <_fpadd_parts+0x132>
     5ea:	96 94       	lsr	r9
     5ec:	87 94       	ror	r8
     5ee:	77 94       	ror	r7
     5f0:	67 94       	ror	r6
     5f2:	0a 94       	dec	r0
     5f4:	d2 f7       	brpl	.-12     	; 0x5ea <_fpadd_parts+0x12a>
     5f6:	21 e0       	ldi	r18, 0x01	; 1
     5f8:	30 e0       	ldi	r19, 0x00	; 0
     5fa:	40 e0       	ldi	r20, 0x00	; 0
     5fc:	50 e0       	ldi	r21, 0x00	; 0
     5fe:	04 c0       	rjmp	.+8      	; 0x608 <_fpadd_parts+0x148>
     600:	22 0f       	add	r18, r18
     602:	33 1f       	adc	r19, r19
     604:	44 1f       	adc	r20, r20
     606:	55 1f       	adc	r21, r21
     608:	6a 95       	dec	r22
     60a:	d2 f7       	brpl	.-12     	; 0x600 <_fpadd_parts+0x140>
     60c:	21 50       	subi	r18, 0x01	; 1
     60e:	30 40       	sbci	r19, 0x00	; 0
     610:	40 40       	sbci	r20, 0x00	; 0
     612:	50 40       	sbci	r21, 0x00	; 0
     614:	2a 21       	and	r18, r10
     616:	3b 21       	and	r19, r11
     618:	4c 21       	and	r20, r12
     61a:	5d 21       	and	r21, r13
     61c:	21 15       	cp	r18, r1
     61e:	31 05       	cpc	r19, r1
     620:	41 05       	cpc	r20, r1
     622:	51 05       	cpc	r21, r1
     624:	21 f0       	breq	.+8      	; 0x62e <_fpadd_parts+0x16e>
     626:	21 e0       	ldi	r18, 0x01	; 1
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	40 e0       	ldi	r20, 0x00	; 0
     62c:	50 e0       	ldi	r21, 0x00	; 0
     62e:	59 01       	movw	r10, r18
     630:	6a 01       	movw	r12, r20
     632:	a6 28       	or	r10, r6
     634:	b7 28       	or	r11, r7
     636:	c8 28       	or	r12, r8
     638:	d9 28       	or	r13, r9
     63a:	0b c0       	rjmp	.+22     	; 0x652 <_fpadd_parts+0x192>
     63c:	82 15       	cp	r24, r2
     63e:	93 05       	cpc	r25, r3
     640:	2c f0       	brlt	.+10     	; 0x64c <_fpadd_parts+0x18c>
     642:	1c 01       	movw	r2, r24
     644:	aa 24       	eor	r10, r10
     646:	bb 24       	eor	r11, r11
     648:	65 01       	movw	r12, r10
     64a:	03 c0       	rjmp	.+6      	; 0x652 <_fpadd_parts+0x192>
     64c:	ee 24       	eor	r14, r14
     64e:	ff 24       	eor	r15, r15
     650:	87 01       	movw	r16, r14
     652:	11 96       	adiw	r26, 0x01	; 1
     654:	9c 91       	ld	r25, X
     656:	d2 01       	movw	r26, r4
     658:	11 96       	adiw	r26, 0x01	; 1
     65a:	8c 91       	ld	r24, X
     65c:	98 17       	cp	r25, r24
     65e:	09 f4       	brne	.+2      	; 0x662 <_fpadd_parts+0x1a2>
     660:	45 c0       	rjmp	.+138    	; 0x6ec <_fpadd_parts+0x22c>
     662:	99 23       	and	r25, r25
     664:	39 f0       	breq	.+14     	; 0x674 <_fpadd_parts+0x1b4>
     666:	a8 01       	movw	r20, r16
     668:	97 01       	movw	r18, r14
     66a:	2a 19       	sub	r18, r10
     66c:	3b 09       	sbc	r19, r11
     66e:	4c 09       	sbc	r20, r12
     670:	5d 09       	sbc	r21, r13
     672:	06 c0       	rjmp	.+12     	; 0x680 <_fpadd_parts+0x1c0>
     674:	a6 01       	movw	r20, r12
     676:	95 01       	movw	r18, r10
     678:	2e 19       	sub	r18, r14
     67a:	3f 09       	sbc	r19, r15
     67c:	40 0b       	sbc	r20, r16
     67e:	51 0b       	sbc	r21, r17
     680:	57 fd       	sbrc	r21, 7
     682:	08 c0       	rjmp	.+16     	; 0x694 <_fpadd_parts+0x1d4>
     684:	11 82       	std	Z+1, r1	; 0x01
     686:	33 82       	std	Z+3, r3	; 0x03
     688:	22 82       	std	Z+2, r2	; 0x02
     68a:	24 83       	std	Z+4, r18	; 0x04
     68c:	35 83       	std	Z+5, r19	; 0x05
     68e:	46 83       	std	Z+6, r20	; 0x06
     690:	57 83       	std	Z+7, r21	; 0x07
     692:	1d c0       	rjmp	.+58     	; 0x6ce <_fpadd_parts+0x20e>
     694:	81 e0       	ldi	r24, 0x01	; 1
     696:	81 83       	std	Z+1, r24	; 0x01
     698:	33 82       	std	Z+3, r3	; 0x03
     69a:	22 82       	std	Z+2, r2	; 0x02
     69c:	88 27       	eor	r24, r24
     69e:	99 27       	eor	r25, r25
     6a0:	dc 01       	movw	r26, r24
     6a2:	82 1b       	sub	r24, r18
     6a4:	93 0b       	sbc	r25, r19
     6a6:	a4 0b       	sbc	r26, r20
     6a8:	b5 0b       	sbc	r27, r21
     6aa:	84 83       	std	Z+4, r24	; 0x04
     6ac:	95 83       	std	Z+5, r25	; 0x05
     6ae:	a6 83       	std	Z+6, r26	; 0x06
     6b0:	b7 83       	std	Z+7, r27	; 0x07
     6b2:	0d c0       	rjmp	.+26     	; 0x6ce <_fpadd_parts+0x20e>
     6b4:	22 0f       	add	r18, r18
     6b6:	33 1f       	adc	r19, r19
     6b8:	44 1f       	adc	r20, r20
     6ba:	55 1f       	adc	r21, r21
     6bc:	24 83       	std	Z+4, r18	; 0x04
     6be:	35 83       	std	Z+5, r19	; 0x05
     6c0:	46 83       	std	Z+6, r20	; 0x06
     6c2:	57 83       	std	Z+7, r21	; 0x07
     6c4:	82 81       	ldd	r24, Z+2	; 0x02
     6c6:	93 81       	ldd	r25, Z+3	; 0x03
     6c8:	01 97       	sbiw	r24, 0x01	; 1
     6ca:	93 83       	std	Z+3, r25	; 0x03
     6cc:	82 83       	std	Z+2, r24	; 0x02
     6ce:	24 81       	ldd	r18, Z+4	; 0x04
     6d0:	35 81       	ldd	r19, Z+5	; 0x05
     6d2:	46 81       	ldd	r20, Z+6	; 0x06
     6d4:	57 81       	ldd	r21, Z+7	; 0x07
     6d6:	da 01       	movw	r26, r20
     6d8:	c9 01       	movw	r24, r18
     6da:	01 97       	sbiw	r24, 0x01	; 1
     6dc:	a1 09       	sbc	r26, r1
     6de:	b1 09       	sbc	r27, r1
     6e0:	8f 5f       	subi	r24, 0xFF	; 255
     6e2:	9f 4f       	sbci	r25, 0xFF	; 255
     6e4:	af 4f       	sbci	r26, 0xFF	; 255
     6e6:	bf 43       	sbci	r27, 0x3F	; 63
     6e8:	28 f3       	brcs	.-54     	; 0x6b4 <_fpadd_parts+0x1f4>
     6ea:	0b c0       	rjmp	.+22     	; 0x702 <_fpadd_parts+0x242>
     6ec:	91 83       	std	Z+1, r25	; 0x01
     6ee:	33 82       	std	Z+3, r3	; 0x03
     6f0:	22 82       	std	Z+2, r2	; 0x02
     6f2:	ea 0c       	add	r14, r10
     6f4:	fb 1c       	adc	r15, r11
     6f6:	0c 1d       	adc	r16, r12
     6f8:	1d 1d       	adc	r17, r13
     6fa:	e4 82       	std	Z+4, r14	; 0x04
     6fc:	f5 82       	std	Z+5, r15	; 0x05
     6fe:	06 83       	std	Z+6, r16	; 0x06
     700:	17 83       	std	Z+7, r17	; 0x07
     702:	83 e0       	ldi	r24, 0x03	; 3
     704:	80 83       	st	Z, r24
     706:	24 81       	ldd	r18, Z+4	; 0x04
     708:	35 81       	ldd	r19, Z+5	; 0x05
     70a:	46 81       	ldd	r20, Z+6	; 0x06
     70c:	57 81       	ldd	r21, Z+7	; 0x07
     70e:	57 ff       	sbrs	r21, 7
     710:	1a c0       	rjmp	.+52     	; 0x746 <_fpadd_parts+0x286>
     712:	c9 01       	movw	r24, r18
     714:	aa 27       	eor	r26, r26
     716:	97 fd       	sbrc	r25, 7
     718:	a0 95       	com	r26
     71a:	ba 2f       	mov	r27, r26
     71c:	81 70       	andi	r24, 0x01	; 1
     71e:	90 70       	andi	r25, 0x00	; 0
     720:	a0 70       	andi	r26, 0x00	; 0
     722:	b0 70       	andi	r27, 0x00	; 0
     724:	56 95       	lsr	r21
     726:	47 95       	ror	r20
     728:	37 95       	ror	r19
     72a:	27 95       	ror	r18
     72c:	82 2b       	or	r24, r18
     72e:	93 2b       	or	r25, r19
     730:	a4 2b       	or	r26, r20
     732:	b5 2b       	or	r27, r21
     734:	84 83       	std	Z+4, r24	; 0x04
     736:	95 83       	std	Z+5, r25	; 0x05
     738:	a6 83       	std	Z+6, r26	; 0x06
     73a:	b7 83       	std	Z+7, r27	; 0x07
     73c:	82 81       	ldd	r24, Z+2	; 0x02
     73e:	93 81       	ldd	r25, Z+3	; 0x03
     740:	01 96       	adiw	r24, 0x01	; 1
     742:	93 83       	std	Z+3, r25	; 0x03
     744:	82 83       	std	Z+2, r24	; 0x02
     746:	df 01       	movw	r26, r30
     748:	01 c0       	rjmp	.+2      	; 0x74c <_fpadd_parts+0x28c>
     74a:	d2 01       	movw	r26, r4
     74c:	cd 01       	movw	r24, r26
     74e:	cd b7       	in	r28, 0x3d	; 61
     750:	de b7       	in	r29, 0x3e	; 62
     752:	e2 e1       	ldi	r30, 0x12	; 18
     754:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__epilogue_restores__>

00000758 <__subsf3>:
     758:	a0 e2       	ldi	r26, 0x20	; 32
     75a:	b0 e0       	ldi	r27, 0x00	; 0
     75c:	e2 eb       	ldi	r30, 0xB2	; 178
     75e:	f3 e0       	ldi	r31, 0x03	; 3
     760:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__prologue_saves__+0x18>
     764:	69 83       	std	Y+1, r22	; 0x01
     766:	7a 83       	std	Y+2, r23	; 0x02
     768:	8b 83       	std	Y+3, r24	; 0x03
     76a:	9c 83       	std	Y+4, r25	; 0x04
     76c:	2d 83       	std	Y+5, r18	; 0x05
     76e:	3e 83       	std	Y+6, r19	; 0x06
     770:	4f 83       	std	Y+7, r20	; 0x07
     772:	58 87       	std	Y+8, r21	; 0x08
     774:	e9 e0       	ldi	r30, 0x09	; 9
     776:	ee 2e       	mov	r14, r30
     778:	f1 2c       	mov	r15, r1
     77a:	ec 0e       	add	r14, r28
     77c:	fd 1e       	adc	r15, r29
     77e:	ce 01       	movw	r24, r28
     780:	01 96       	adiw	r24, 0x01	; 1
     782:	b7 01       	movw	r22, r14
     784:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     788:	8e 01       	movw	r16, r28
     78a:	0f 5e       	subi	r16, 0xEF	; 239
     78c:	1f 4f       	sbci	r17, 0xFF	; 255
     78e:	ce 01       	movw	r24, r28
     790:	05 96       	adiw	r24, 0x05	; 5
     792:	b8 01       	movw	r22, r16
     794:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     798:	8a 89       	ldd	r24, Y+18	; 0x12
     79a:	91 e0       	ldi	r25, 0x01	; 1
     79c:	89 27       	eor	r24, r25
     79e:	8a 8b       	std	Y+18, r24	; 0x12
     7a0:	c7 01       	movw	r24, r14
     7a2:	b8 01       	movw	r22, r16
     7a4:	ae 01       	movw	r20, r28
     7a6:	47 5e       	subi	r20, 0xE7	; 231
     7a8:	5f 4f       	sbci	r21, 0xFF	; 255
     7aa:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_fpadd_parts>
     7ae:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__pack_f>
     7b2:	a0 96       	adiw	r28, 0x20	; 32
     7b4:	e6 e0       	ldi	r30, 0x06	; 6
     7b6:	0c 94 dc 08 	jmp	0x11b8	; 0x11b8 <__epilogue_restores__+0x18>

000007ba <__addsf3>:
     7ba:	a0 e2       	ldi	r26, 0x20	; 32
     7bc:	b0 e0       	ldi	r27, 0x00	; 0
     7be:	e3 ee       	ldi	r30, 0xE3	; 227
     7c0:	f3 e0       	ldi	r31, 0x03	; 3
     7c2:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__prologue_saves__+0x18>
     7c6:	69 83       	std	Y+1, r22	; 0x01
     7c8:	7a 83       	std	Y+2, r23	; 0x02
     7ca:	8b 83       	std	Y+3, r24	; 0x03
     7cc:	9c 83       	std	Y+4, r25	; 0x04
     7ce:	2d 83       	std	Y+5, r18	; 0x05
     7d0:	3e 83       	std	Y+6, r19	; 0x06
     7d2:	4f 83       	std	Y+7, r20	; 0x07
     7d4:	58 87       	std	Y+8, r21	; 0x08
     7d6:	f9 e0       	ldi	r31, 0x09	; 9
     7d8:	ef 2e       	mov	r14, r31
     7da:	f1 2c       	mov	r15, r1
     7dc:	ec 0e       	add	r14, r28
     7de:	fd 1e       	adc	r15, r29
     7e0:	ce 01       	movw	r24, r28
     7e2:	01 96       	adiw	r24, 0x01	; 1
     7e4:	b7 01       	movw	r22, r14
     7e6:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     7ea:	8e 01       	movw	r16, r28
     7ec:	0f 5e       	subi	r16, 0xEF	; 239
     7ee:	1f 4f       	sbci	r17, 0xFF	; 255
     7f0:	ce 01       	movw	r24, r28
     7f2:	05 96       	adiw	r24, 0x05	; 5
     7f4:	b8 01       	movw	r22, r16
     7f6:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     7fa:	c7 01       	movw	r24, r14
     7fc:	b8 01       	movw	r22, r16
     7fe:	ae 01       	movw	r20, r28
     800:	47 5e       	subi	r20, 0xE7	; 231
     802:	5f 4f       	sbci	r21, 0xFF	; 255
     804:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_fpadd_parts>
     808:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__pack_f>
     80c:	a0 96       	adiw	r28, 0x20	; 32
     80e:	e6 e0       	ldi	r30, 0x06	; 6
     810:	0c 94 dc 08 	jmp	0x11b8	; 0x11b8 <__epilogue_restores__+0x18>

00000814 <__mulsf3>:
     814:	a0 e2       	ldi	r26, 0x20	; 32
     816:	b0 e0       	ldi	r27, 0x00	; 0
     818:	e0 e1       	ldi	r30, 0x10	; 16
     81a:	f4 e0       	ldi	r31, 0x04	; 4
     81c:	0c 94 b4 08 	jmp	0x1168	; 0x1168 <__prologue_saves__>
     820:	69 83       	std	Y+1, r22	; 0x01
     822:	7a 83       	std	Y+2, r23	; 0x02
     824:	8b 83       	std	Y+3, r24	; 0x03
     826:	9c 83       	std	Y+4, r25	; 0x04
     828:	2d 83       	std	Y+5, r18	; 0x05
     82a:	3e 83       	std	Y+6, r19	; 0x06
     82c:	4f 83       	std	Y+7, r20	; 0x07
     82e:	58 87       	std	Y+8, r21	; 0x08
     830:	ce 01       	movw	r24, r28
     832:	01 96       	adiw	r24, 0x01	; 1
     834:	be 01       	movw	r22, r28
     836:	67 5f       	subi	r22, 0xF7	; 247
     838:	7f 4f       	sbci	r23, 0xFF	; 255
     83a:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     83e:	ce 01       	movw	r24, r28
     840:	05 96       	adiw	r24, 0x05	; 5
     842:	be 01       	movw	r22, r28
     844:	6f 5e       	subi	r22, 0xEF	; 239
     846:	7f 4f       	sbci	r23, 0xFF	; 255
     848:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     84c:	99 85       	ldd	r25, Y+9	; 0x09
     84e:	92 30       	cpi	r25, 0x02	; 2
     850:	88 f0       	brcs	.+34     	; 0x874 <__stack+0x15>
     852:	89 89       	ldd	r24, Y+17	; 0x11
     854:	82 30       	cpi	r24, 0x02	; 2
     856:	c8 f0       	brcs	.+50     	; 0x88a <__stack+0x2b>
     858:	94 30       	cpi	r25, 0x04	; 4
     85a:	19 f4       	brne	.+6      	; 0x862 <__stack+0x3>
     85c:	82 30       	cpi	r24, 0x02	; 2
     85e:	51 f4       	brne	.+20     	; 0x874 <__stack+0x15>
     860:	04 c0       	rjmp	.+8      	; 0x86a <__stack+0xb>
     862:	84 30       	cpi	r24, 0x04	; 4
     864:	29 f4       	brne	.+10     	; 0x870 <__stack+0x11>
     866:	92 30       	cpi	r25, 0x02	; 2
     868:	81 f4       	brne	.+32     	; 0x88a <__stack+0x2b>
     86a:	88 e6       	ldi	r24, 0x68	; 104
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	c6 c0       	rjmp	.+396    	; 0x9fc <__stack+0x19d>
     870:	92 30       	cpi	r25, 0x02	; 2
     872:	49 f4       	brne	.+18     	; 0x886 <__stack+0x27>
     874:	20 e0       	ldi	r18, 0x00	; 0
     876:	9a 85       	ldd	r25, Y+10	; 0x0a
     878:	8a 89       	ldd	r24, Y+18	; 0x12
     87a:	98 13       	cpse	r25, r24
     87c:	21 e0       	ldi	r18, 0x01	; 1
     87e:	2a 87       	std	Y+10, r18	; 0x0a
     880:	ce 01       	movw	r24, r28
     882:	09 96       	adiw	r24, 0x09	; 9
     884:	bb c0       	rjmp	.+374    	; 0x9fc <__stack+0x19d>
     886:	82 30       	cpi	r24, 0x02	; 2
     888:	49 f4       	brne	.+18     	; 0x89c <__stack+0x3d>
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	9a 85       	ldd	r25, Y+10	; 0x0a
     88e:	8a 89       	ldd	r24, Y+18	; 0x12
     890:	98 13       	cpse	r25, r24
     892:	21 e0       	ldi	r18, 0x01	; 1
     894:	2a 8b       	std	Y+18, r18	; 0x12
     896:	ce 01       	movw	r24, r28
     898:	41 96       	adiw	r24, 0x11	; 17
     89a:	b0 c0       	rjmp	.+352    	; 0x9fc <__stack+0x19d>
     89c:	2d 84       	ldd	r2, Y+13	; 0x0d
     89e:	3e 84       	ldd	r3, Y+14	; 0x0e
     8a0:	4f 84       	ldd	r4, Y+15	; 0x0f
     8a2:	58 88       	ldd	r5, Y+16	; 0x10
     8a4:	6d 88       	ldd	r6, Y+21	; 0x15
     8a6:	7e 88       	ldd	r7, Y+22	; 0x16
     8a8:	8f 88       	ldd	r8, Y+23	; 0x17
     8aa:	98 8c       	ldd	r9, Y+24	; 0x18
     8ac:	ee 24       	eor	r14, r14
     8ae:	ff 24       	eor	r15, r15
     8b0:	87 01       	movw	r16, r14
     8b2:	aa 24       	eor	r10, r10
     8b4:	bb 24       	eor	r11, r11
     8b6:	65 01       	movw	r12, r10
     8b8:	40 e0       	ldi	r20, 0x00	; 0
     8ba:	50 e0       	ldi	r21, 0x00	; 0
     8bc:	60 e0       	ldi	r22, 0x00	; 0
     8be:	70 e0       	ldi	r23, 0x00	; 0
     8c0:	e0 e0       	ldi	r30, 0x00	; 0
     8c2:	f0 e0       	ldi	r31, 0x00	; 0
     8c4:	c1 01       	movw	r24, r2
     8c6:	81 70       	andi	r24, 0x01	; 1
     8c8:	90 70       	andi	r25, 0x00	; 0
     8ca:	89 2b       	or	r24, r25
     8cc:	e9 f0       	breq	.+58     	; 0x908 <__stack+0xa9>
     8ce:	e6 0c       	add	r14, r6
     8d0:	f7 1c       	adc	r15, r7
     8d2:	08 1d       	adc	r16, r8
     8d4:	19 1d       	adc	r17, r9
     8d6:	9a 01       	movw	r18, r20
     8d8:	ab 01       	movw	r20, r22
     8da:	2a 0d       	add	r18, r10
     8dc:	3b 1d       	adc	r19, r11
     8de:	4c 1d       	adc	r20, r12
     8e0:	5d 1d       	adc	r21, r13
     8e2:	80 e0       	ldi	r24, 0x00	; 0
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	b0 e0       	ldi	r27, 0x00	; 0
     8ea:	e6 14       	cp	r14, r6
     8ec:	f7 04       	cpc	r15, r7
     8ee:	08 05       	cpc	r16, r8
     8f0:	19 05       	cpc	r17, r9
     8f2:	20 f4       	brcc	.+8      	; 0x8fc <__stack+0x9d>
     8f4:	81 e0       	ldi	r24, 0x01	; 1
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	a0 e0       	ldi	r26, 0x00	; 0
     8fa:	b0 e0       	ldi	r27, 0x00	; 0
     8fc:	ba 01       	movw	r22, r20
     8fe:	a9 01       	movw	r20, r18
     900:	48 0f       	add	r20, r24
     902:	59 1f       	adc	r21, r25
     904:	6a 1f       	adc	r22, r26
     906:	7b 1f       	adc	r23, r27
     908:	aa 0c       	add	r10, r10
     90a:	bb 1c       	adc	r11, r11
     90c:	cc 1c       	adc	r12, r12
     90e:	dd 1c       	adc	r13, r13
     910:	97 fe       	sbrs	r9, 7
     912:	08 c0       	rjmp	.+16     	; 0x924 <__stack+0xc5>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	a0 e0       	ldi	r26, 0x00	; 0
     91a:	b0 e0       	ldi	r27, 0x00	; 0
     91c:	a8 2a       	or	r10, r24
     91e:	b9 2a       	or	r11, r25
     920:	ca 2a       	or	r12, r26
     922:	db 2a       	or	r13, r27
     924:	31 96       	adiw	r30, 0x01	; 1
     926:	e0 32       	cpi	r30, 0x20	; 32
     928:	f1 05       	cpc	r31, r1
     92a:	49 f0       	breq	.+18     	; 0x93e <__stack+0xdf>
     92c:	66 0c       	add	r6, r6
     92e:	77 1c       	adc	r7, r7
     930:	88 1c       	adc	r8, r8
     932:	99 1c       	adc	r9, r9
     934:	56 94       	lsr	r5
     936:	47 94       	ror	r4
     938:	37 94       	ror	r3
     93a:	27 94       	ror	r2
     93c:	c3 cf       	rjmp	.-122    	; 0x8c4 <__stack+0x65>
     93e:	fa 85       	ldd	r31, Y+10	; 0x0a
     940:	ea 89       	ldd	r30, Y+18	; 0x12
     942:	2b 89       	ldd	r18, Y+19	; 0x13
     944:	3c 89       	ldd	r19, Y+20	; 0x14
     946:	8b 85       	ldd	r24, Y+11	; 0x0b
     948:	9c 85       	ldd	r25, Y+12	; 0x0c
     94a:	28 0f       	add	r18, r24
     94c:	39 1f       	adc	r19, r25
     94e:	2e 5f       	subi	r18, 0xFE	; 254
     950:	3f 4f       	sbci	r19, 0xFF	; 255
     952:	17 c0       	rjmp	.+46     	; 0x982 <__stack+0x123>
     954:	ca 01       	movw	r24, r20
     956:	81 70       	andi	r24, 0x01	; 1
     958:	90 70       	andi	r25, 0x00	; 0
     95a:	89 2b       	or	r24, r25
     95c:	61 f0       	breq	.+24     	; 0x976 <__stack+0x117>
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	80 e0       	ldi	r24, 0x00	; 0
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	a0 e0       	ldi	r26, 0x00	; 0
     96c:	b0 e8       	ldi	r27, 0x80	; 128
     96e:	e8 2a       	or	r14, r24
     970:	f9 2a       	or	r15, r25
     972:	0a 2b       	or	r16, r26
     974:	1b 2b       	or	r17, r27
     976:	76 95       	lsr	r23
     978:	67 95       	ror	r22
     97a:	57 95       	ror	r21
     97c:	47 95       	ror	r20
     97e:	2f 5f       	subi	r18, 0xFF	; 255
     980:	3f 4f       	sbci	r19, 0xFF	; 255
     982:	77 fd       	sbrc	r23, 7
     984:	e7 cf       	rjmp	.-50     	; 0x954 <__stack+0xf5>
     986:	0c c0       	rjmp	.+24     	; 0x9a0 <__stack+0x141>
     988:	44 0f       	add	r20, r20
     98a:	55 1f       	adc	r21, r21
     98c:	66 1f       	adc	r22, r22
     98e:	77 1f       	adc	r23, r23
     990:	17 fd       	sbrc	r17, 7
     992:	41 60       	ori	r20, 0x01	; 1
     994:	ee 0c       	add	r14, r14
     996:	ff 1c       	adc	r15, r15
     998:	00 1f       	adc	r16, r16
     99a:	11 1f       	adc	r17, r17
     99c:	21 50       	subi	r18, 0x01	; 1
     99e:	30 40       	sbci	r19, 0x00	; 0
     9a0:	40 30       	cpi	r20, 0x00	; 0
     9a2:	90 e0       	ldi	r25, 0x00	; 0
     9a4:	59 07       	cpc	r21, r25
     9a6:	90 e0       	ldi	r25, 0x00	; 0
     9a8:	69 07       	cpc	r22, r25
     9aa:	90 e4       	ldi	r25, 0x40	; 64
     9ac:	79 07       	cpc	r23, r25
     9ae:	60 f3       	brcs	.-40     	; 0x988 <__stack+0x129>
     9b0:	2b 8f       	std	Y+27, r18	; 0x1b
     9b2:	3c 8f       	std	Y+28, r19	; 0x1c
     9b4:	db 01       	movw	r26, r22
     9b6:	ca 01       	movw	r24, r20
     9b8:	8f 77       	andi	r24, 0x7F	; 127
     9ba:	90 70       	andi	r25, 0x00	; 0
     9bc:	a0 70       	andi	r26, 0x00	; 0
     9be:	b0 70       	andi	r27, 0x00	; 0
     9c0:	80 34       	cpi	r24, 0x40	; 64
     9c2:	91 05       	cpc	r25, r1
     9c4:	a1 05       	cpc	r26, r1
     9c6:	b1 05       	cpc	r27, r1
     9c8:	61 f4       	brne	.+24     	; 0x9e2 <__stack+0x183>
     9ca:	47 fd       	sbrc	r20, 7
     9cc:	0a c0       	rjmp	.+20     	; 0x9e2 <__stack+0x183>
     9ce:	e1 14       	cp	r14, r1
     9d0:	f1 04       	cpc	r15, r1
     9d2:	01 05       	cpc	r16, r1
     9d4:	11 05       	cpc	r17, r1
     9d6:	29 f0       	breq	.+10     	; 0x9e2 <__stack+0x183>
     9d8:	40 5c       	subi	r20, 0xC0	; 192
     9da:	5f 4f       	sbci	r21, 0xFF	; 255
     9dc:	6f 4f       	sbci	r22, 0xFF	; 255
     9de:	7f 4f       	sbci	r23, 0xFF	; 255
     9e0:	40 78       	andi	r20, 0x80	; 128
     9e2:	1a 8e       	std	Y+26, r1	; 0x1a
     9e4:	fe 17       	cp	r31, r30
     9e6:	11 f0       	breq	.+4      	; 0x9ec <__stack+0x18d>
     9e8:	81 e0       	ldi	r24, 0x01	; 1
     9ea:	8a 8f       	std	Y+26, r24	; 0x1a
     9ec:	4d 8f       	std	Y+29, r20	; 0x1d
     9ee:	5e 8f       	std	Y+30, r21	; 0x1e
     9f0:	6f 8f       	std	Y+31, r22	; 0x1f
     9f2:	78 a3       	std	Y+32, r23	; 0x20
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	89 8f       	std	Y+25, r24	; 0x19
     9f8:	ce 01       	movw	r24, r28
     9fa:	49 96       	adiw	r24, 0x19	; 25
     9fc:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__pack_f>
     a00:	a0 96       	adiw	r28, 0x20	; 32
     a02:	e2 e1       	ldi	r30, 0x12	; 18
     a04:	0c 94 d0 08 	jmp	0x11a0	; 0x11a0 <__epilogue_restores__>

00000a08 <__gtsf2>:
     a08:	a8 e1       	ldi	r26, 0x18	; 24
     a0a:	b0 e0       	ldi	r27, 0x00	; 0
     a0c:	ea e0       	ldi	r30, 0x0A	; 10
     a0e:	f5 e0       	ldi	r31, 0x05	; 5
     a10:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__prologue_saves__+0x18>
     a14:	69 83       	std	Y+1, r22	; 0x01
     a16:	7a 83       	std	Y+2, r23	; 0x02
     a18:	8b 83       	std	Y+3, r24	; 0x03
     a1a:	9c 83       	std	Y+4, r25	; 0x04
     a1c:	2d 83       	std	Y+5, r18	; 0x05
     a1e:	3e 83       	std	Y+6, r19	; 0x06
     a20:	4f 83       	std	Y+7, r20	; 0x07
     a22:	58 87       	std	Y+8, r21	; 0x08
     a24:	89 e0       	ldi	r24, 0x09	; 9
     a26:	e8 2e       	mov	r14, r24
     a28:	f1 2c       	mov	r15, r1
     a2a:	ec 0e       	add	r14, r28
     a2c:	fd 1e       	adc	r15, r29
     a2e:	ce 01       	movw	r24, r28
     a30:	01 96       	adiw	r24, 0x01	; 1
     a32:	b7 01       	movw	r22, r14
     a34:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     a38:	8e 01       	movw	r16, r28
     a3a:	0f 5e       	subi	r16, 0xEF	; 239
     a3c:	1f 4f       	sbci	r17, 0xFF	; 255
     a3e:	ce 01       	movw	r24, r28
     a40:	05 96       	adiw	r24, 0x05	; 5
     a42:	b8 01       	movw	r22, r16
     a44:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     a48:	89 85       	ldd	r24, Y+9	; 0x09
     a4a:	82 30       	cpi	r24, 0x02	; 2
     a4c:	40 f0       	brcs	.+16     	; 0xa5e <__gtsf2+0x56>
     a4e:	89 89       	ldd	r24, Y+17	; 0x11
     a50:	82 30       	cpi	r24, 0x02	; 2
     a52:	28 f0       	brcs	.+10     	; 0xa5e <__gtsf2+0x56>
     a54:	c7 01       	movw	r24, r14
     a56:	b8 01       	movw	r22, r16
     a58:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__fpcmp_parts_f>
     a5c:	01 c0       	rjmp	.+2      	; 0xa60 <__gtsf2+0x58>
     a5e:	8f ef       	ldi	r24, 0xFF	; 255
     a60:	68 96       	adiw	r28, 0x18	; 24
     a62:	e6 e0       	ldi	r30, 0x06	; 6
     a64:	0c 94 dc 08 	jmp	0x11b8	; 0x11b8 <__epilogue_restores__+0x18>

00000a68 <__gesf2>:
     a68:	a8 e1       	ldi	r26, 0x18	; 24
     a6a:	b0 e0       	ldi	r27, 0x00	; 0
     a6c:	ea e3       	ldi	r30, 0x3A	; 58
     a6e:	f5 e0       	ldi	r31, 0x05	; 5
     a70:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__prologue_saves__+0x18>
     a74:	69 83       	std	Y+1, r22	; 0x01
     a76:	7a 83       	std	Y+2, r23	; 0x02
     a78:	8b 83       	std	Y+3, r24	; 0x03
     a7a:	9c 83       	std	Y+4, r25	; 0x04
     a7c:	2d 83       	std	Y+5, r18	; 0x05
     a7e:	3e 83       	std	Y+6, r19	; 0x06
     a80:	4f 83       	std	Y+7, r20	; 0x07
     a82:	58 87       	std	Y+8, r21	; 0x08
     a84:	89 e0       	ldi	r24, 0x09	; 9
     a86:	e8 2e       	mov	r14, r24
     a88:	f1 2c       	mov	r15, r1
     a8a:	ec 0e       	add	r14, r28
     a8c:	fd 1e       	adc	r15, r29
     a8e:	ce 01       	movw	r24, r28
     a90:	01 96       	adiw	r24, 0x01	; 1
     a92:	b7 01       	movw	r22, r14
     a94:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     a98:	8e 01       	movw	r16, r28
     a9a:	0f 5e       	subi	r16, 0xEF	; 239
     a9c:	1f 4f       	sbci	r17, 0xFF	; 255
     a9e:	ce 01       	movw	r24, r28
     aa0:	05 96       	adiw	r24, 0x05	; 5
     aa2:	b8 01       	movw	r22, r16
     aa4:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     aa8:	89 85       	ldd	r24, Y+9	; 0x09
     aaa:	82 30       	cpi	r24, 0x02	; 2
     aac:	40 f0       	brcs	.+16     	; 0xabe <__gesf2+0x56>
     aae:	89 89       	ldd	r24, Y+17	; 0x11
     ab0:	82 30       	cpi	r24, 0x02	; 2
     ab2:	28 f0       	brcs	.+10     	; 0xabe <__gesf2+0x56>
     ab4:	c7 01       	movw	r24, r14
     ab6:	b8 01       	movw	r22, r16
     ab8:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__fpcmp_parts_f>
     abc:	01 c0       	rjmp	.+2      	; 0xac0 <__gesf2+0x58>
     abe:	8f ef       	ldi	r24, 0xFF	; 255
     ac0:	68 96       	adiw	r28, 0x18	; 24
     ac2:	e6 e0       	ldi	r30, 0x06	; 6
     ac4:	0c 94 dc 08 	jmp	0x11b8	; 0x11b8 <__epilogue_restores__+0x18>

00000ac8 <__ltsf2>:
     ac8:	a8 e1       	ldi	r26, 0x18	; 24
     aca:	b0 e0       	ldi	r27, 0x00	; 0
     acc:	ea e6       	ldi	r30, 0x6A	; 106
     ace:	f5 e0       	ldi	r31, 0x05	; 5
     ad0:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__prologue_saves__+0x18>
     ad4:	69 83       	std	Y+1, r22	; 0x01
     ad6:	7a 83       	std	Y+2, r23	; 0x02
     ad8:	8b 83       	std	Y+3, r24	; 0x03
     ada:	9c 83       	std	Y+4, r25	; 0x04
     adc:	2d 83       	std	Y+5, r18	; 0x05
     ade:	3e 83       	std	Y+6, r19	; 0x06
     ae0:	4f 83       	std	Y+7, r20	; 0x07
     ae2:	58 87       	std	Y+8, r21	; 0x08
     ae4:	89 e0       	ldi	r24, 0x09	; 9
     ae6:	e8 2e       	mov	r14, r24
     ae8:	f1 2c       	mov	r15, r1
     aea:	ec 0e       	add	r14, r28
     aec:	fd 1e       	adc	r15, r29
     aee:	ce 01       	movw	r24, r28
     af0:	01 96       	adiw	r24, 0x01	; 1
     af2:	b7 01       	movw	r22, r14
     af4:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     af8:	8e 01       	movw	r16, r28
     afa:	0f 5e       	subi	r16, 0xEF	; 239
     afc:	1f 4f       	sbci	r17, 0xFF	; 255
     afe:	ce 01       	movw	r24, r28
     b00:	05 96       	adiw	r24, 0x05	; 5
     b02:	b8 01       	movw	r22, r16
     b04:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     b08:	89 85       	ldd	r24, Y+9	; 0x09
     b0a:	82 30       	cpi	r24, 0x02	; 2
     b0c:	40 f0       	brcs	.+16     	; 0xb1e <__ltsf2+0x56>
     b0e:	89 89       	ldd	r24, Y+17	; 0x11
     b10:	82 30       	cpi	r24, 0x02	; 2
     b12:	28 f0       	brcs	.+10     	; 0xb1e <__ltsf2+0x56>
     b14:	c7 01       	movw	r24, r14
     b16:	b8 01       	movw	r22, r16
     b18:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <__fpcmp_parts_f>
     b1c:	01 c0       	rjmp	.+2      	; 0xb20 <__ltsf2+0x58>
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	68 96       	adiw	r28, 0x18	; 24
     b22:	e6 e0       	ldi	r30, 0x06	; 6
     b24:	0c 94 dc 08 	jmp	0x11b8	; 0x11b8 <__epilogue_restores__+0x18>

00000b28 <__floatsisf>:
     b28:	a8 e0       	ldi	r26, 0x08	; 8
     b2a:	b0 e0       	ldi	r27, 0x00	; 0
     b2c:	ea e9       	ldi	r30, 0x9A	; 154
     b2e:	f5 e0       	ldi	r31, 0x05	; 5
     b30:	0c 94 bd 08 	jmp	0x117a	; 0x117a <__prologue_saves__+0x12>
     b34:	9b 01       	movw	r18, r22
     b36:	ac 01       	movw	r20, r24
     b38:	83 e0       	ldi	r24, 0x03	; 3
     b3a:	89 83       	std	Y+1, r24	; 0x01
     b3c:	da 01       	movw	r26, r20
     b3e:	c9 01       	movw	r24, r18
     b40:	88 27       	eor	r24, r24
     b42:	b7 fd       	sbrc	r27, 7
     b44:	83 95       	inc	r24
     b46:	99 27       	eor	r25, r25
     b48:	aa 27       	eor	r26, r26
     b4a:	bb 27       	eor	r27, r27
     b4c:	b8 2e       	mov	r11, r24
     b4e:	21 15       	cp	r18, r1
     b50:	31 05       	cpc	r19, r1
     b52:	41 05       	cpc	r20, r1
     b54:	51 05       	cpc	r21, r1
     b56:	19 f4       	brne	.+6      	; 0xb5e <__floatsisf+0x36>
     b58:	82 e0       	ldi	r24, 0x02	; 2
     b5a:	89 83       	std	Y+1, r24	; 0x01
     b5c:	3a c0       	rjmp	.+116    	; 0xbd2 <__floatsisf+0xaa>
     b5e:	88 23       	and	r24, r24
     b60:	a9 f0       	breq	.+42     	; 0xb8c <__floatsisf+0x64>
     b62:	20 30       	cpi	r18, 0x00	; 0
     b64:	80 e0       	ldi	r24, 0x00	; 0
     b66:	38 07       	cpc	r19, r24
     b68:	80 e0       	ldi	r24, 0x00	; 0
     b6a:	48 07       	cpc	r20, r24
     b6c:	80 e8       	ldi	r24, 0x80	; 128
     b6e:	58 07       	cpc	r21, r24
     b70:	29 f4       	brne	.+10     	; 0xb7c <__floatsisf+0x54>
     b72:	60 e0       	ldi	r22, 0x00	; 0
     b74:	70 e0       	ldi	r23, 0x00	; 0
     b76:	80 e0       	ldi	r24, 0x00	; 0
     b78:	9f ec       	ldi	r25, 0xCF	; 207
     b7a:	30 c0       	rjmp	.+96     	; 0xbdc <__floatsisf+0xb4>
     b7c:	ee 24       	eor	r14, r14
     b7e:	ff 24       	eor	r15, r15
     b80:	87 01       	movw	r16, r14
     b82:	e2 1a       	sub	r14, r18
     b84:	f3 0a       	sbc	r15, r19
     b86:	04 0b       	sbc	r16, r20
     b88:	15 0b       	sbc	r17, r21
     b8a:	02 c0       	rjmp	.+4      	; 0xb90 <__floatsisf+0x68>
     b8c:	79 01       	movw	r14, r18
     b8e:	8a 01       	movw	r16, r20
     b90:	8e e1       	ldi	r24, 0x1E	; 30
     b92:	c8 2e       	mov	r12, r24
     b94:	d1 2c       	mov	r13, r1
     b96:	dc 82       	std	Y+4, r13	; 0x04
     b98:	cb 82       	std	Y+3, r12	; 0x03
     b9a:	ed 82       	std	Y+5, r14	; 0x05
     b9c:	fe 82       	std	Y+6, r15	; 0x06
     b9e:	0f 83       	std	Y+7, r16	; 0x07
     ba0:	18 87       	std	Y+8, r17	; 0x08
     ba2:	c8 01       	movw	r24, r16
     ba4:	b7 01       	movw	r22, r14
     ba6:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__clzsi2>
     baa:	01 97       	sbiw	r24, 0x01	; 1
     bac:	18 16       	cp	r1, r24
     bae:	19 06       	cpc	r1, r25
     bb0:	84 f4       	brge	.+32     	; 0xbd2 <__floatsisf+0xaa>
     bb2:	08 2e       	mov	r0, r24
     bb4:	04 c0       	rjmp	.+8      	; 0xbbe <__floatsisf+0x96>
     bb6:	ee 0c       	add	r14, r14
     bb8:	ff 1c       	adc	r15, r15
     bba:	00 1f       	adc	r16, r16
     bbc:	11 1f       	adc	r17, r17
     bbe:	0a 94       	dec	r0
     bc0:	d2 f7       	brpl	.-12     	; 0xbb6 <__floatsisf+0x8e>
     bc2:	ed 82       	std	Y+5, r14	; 0x05
     bc4:	fe 82       	std	Y+6, r15	; 0x06
     bc6:	0f 83       	std	Y+7, r16	; 0x07
     bc8:	18 87       	std	Y+8, r17	; 0x08
     bca:	c8 1a       	sub	r12, r24
     bcc:	d9 0a       	sbc	r13, r25
     bce:	dc 82       	std	Y+4, r13	; 0x04
     bd0:	cb 82       	std	Y+3, r12	; 0x03
     bd2:	ba 82       	std	Y+2, r11	; 0x02
     bd4:	ce 01       	movw	r24, r28
     bd6:	01 96       	adiw	r24, 0x01	; 1
     bd8:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__pack_f>
     bdc:	28 96       	adiw	r28, 0x08	; 8
     bde:	e9 e0       	ldi	r30, 0x09	; 9
     be0:	0c 94 d9 08 	jmp	0x11b2	; 0x11b2 <__epilogue_restores__+0x12>

00000be4 <__fixsfsi>:
     be4:	ac e0       	ldi	r26, 0x0C	; 12
     be6:	b0 e0       	ldi	r27, 0x00	; 0
     be8:	e8 ef       	ldi	r30, 0xF8	; 248
     bea:	f5 e0       	ldi	r31, 0x05	; 5
     bec:	0c 94 c4 08 	jmp	0x1188	; 0x1188 <__prologue_saves__+0x20>
     bf0:	69 83       	std	Y+1, r22	; 0x01
     bf2:	7a 83       	std	Y+2, r23	; 0x02
     bf4:	8b 83       	std	Y+3, r24	; 0x03
     bf6:	9c 83       	std	Y+4, r25	; 0x04
     bf8:	ce 01       	movw	r24, r28
     bfa:	01 96       	adiw	r24, 0x01	; 1
     bfc:	be 01       	movw	r22, r28
     bfe:	6b 5f       	subi	r22, 0xFB	; 251
     c00:	7f 4f       	sbci	r23, 0xFF	; 255
     c02:	0e 94 e3 07 	call	0xfc6	; 0xfc6 <__unpack_f>
     c06:	8d 81       	ldd	r24, Y+5	; 0x05
     c08:	82 30       	cpi	r24, 0x02	; 2
     c0a:	61 f1       	breq	.+88     	; 0xc64 <__fixsfsi+0x80>
     c0c:	82 30       	cpi	r24, 0x02	; 2
     c0e:	50 f1       	brcs	.+84     	; 0xc64 <__fixsfsi+0x80>
     c10:	84 30       	cpi	r24, 0x04	; 4
     c12:	21 f4       	brne	.+8      	; 0xc1c <__fixsfsi+0x38>
     c14:	8e 81       	ldd	r24, Y+6	; 0x06
     c16:	88 23       	and	r24, r24
     c18:	51 f1       	breq	.+84     	; 0xc6e <__fixsfsi+0x8a>
     c1a:	2e c0       	rjmp	.+92     	; 0xc78 <__fixsfsi+0x94>
     c1c:	2f 81       	ldd	r18, Y+7	; 0x07
     c1e:	38 85       	ldd	r19, Y+8	; 0x08
     c20:	37 fd       	sbrc	r19, 7
     c22:	20 c0       	rjmp	.+64     	; 0xc64 <__fixsfsi+0x80>
     c24:	6e 81       	ldd	r22, Y+6	; 0x06
     c26:	2f 31       	cpi	r18, 0x1F	; 31
     c28:	31 05       	cpc	r19, r1
     c2a:	1c f0       	brlt	.+6      	; 0xc32 <__fixsfsi+0x4e>
     c2c:	66 23       	and	r22, r22
     c2e:	f9 f0       	breq	.+62     	; 0xc6e <__fixsfsi+0x8a>
     c30:	23 c0       	rjmp	.+70     	; 0xc78 <__fixsfsi+0x94>
     c32:	8e e1       	ldi	r24, 0x1E	; 30
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	82 1b       	sub	r24, r18
     c38:	93 0b       	sbc	r25, r19
     c3a:	29 85       	ldd	r18, Y+9	; 0x09
     c3c:	3a 85       	ldd	r19, Y+10	; 0x0a
     c3e:	4b 85       	ldd	r20, Y+11	; 0x0b
     c40:	5c 85       	ldd	r21, Y+12	; 0x0c
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <__fixsfsi+0x68>
     c44:	56 95       	lsr	r21
     c46:	47 95       	ror	r20
     c48:	37 95       	ror	r19
     c4a:	27 95       	ror	r18
     c4c:	8a 95       	dec	r24
     c4e:	d2 f7       	brpl	.-12     	; 0xc44 <__fixsfsi+0x60>
     c50:	66 23       	and	r22, r22
     c52:	b1 f0       	breq	.+44     	; 0xc80 <__fixsfsi+0x9c>
     c54:	50 95       	com	r21
     c56:	40 95       	com	r20
     c58:	30 95       	com	r19
     c5a:	21 95       	neg	r18
     c5c:	3f 4f       	sbci	r19, 0xFF	; 255
     c5e:	4f 4f       	sbci	r20, 0xFF	; 255
     c60:	5f 4f       	sbci	r21, 0xFF	; 255
     c62:	0e c0       	rjmp	.+28     	; 0xc80 <__fixsfsi+0x9c>
     c64:	20 e0       	ldi	r18, 0x00	; 0
     c66:	30 e0       	ldi	r19, 0x00	; 0
     c68:	40 e0       	ldi	r20, 0x00	; 0
     c6a:	50 e0       	ldi	r21, 0x00	; 0
     c6c:	09 c0       	rjmp	.+18     	; 0xc80 <__fixsfsi+0x9c>
     c6e:	2f ef       	ldi	r18, 0xFF	; 255
     c70:	3f ef       	ldi	r19, 0xFF	; 255
     c72:	4f ef       	ldi	r20, 0xFF	; 255
     c74:	5f e7       	ldi	r21, 0x7F	; 127
     c76:	04 c0       	rjmp	.+8      	; 0xc80 <__fixsfsi+0x9c>
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	40 e0       	ldi	r20, 0x00	; 0
     c7e:	50 e8       	ldi	r21, 0x80	; 128
     c80:	b9 01       	movw	r22, r18
     c82:	ca 01       	movw	r24, r20
     c84:	2c 96       	adiw	r28, 0x0c	; 12
     c86:	e2 e0       	ldi	r30, 0x02	; 2
     c88:	0c 94 e0 08 	jmp	0x11c0	; 0x11c0 <__epilogue_restores__+0x20>

00000c8c <__floatunsisf>:
     c8c:	a8 e0       	ldi	r26, 0x08	; 8
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	ec e4       	ldi	r30, 0x4C	; 76
     c92:	f6 e0       	ldi	r31, 0x06	; 6
     c94:	0c 94 bc 08 	jmp	0x1178	; 0x1178 <__prologue_saves__+0x10>
     c98:	7b 01       	movw	r14, r22
     c9a:	8c 01       	movw	r16, r24
     c9c:	61 15       	cp	r22, r1
     c9e:	71 05       	cpc	r23, r1
     ca0:	81 05       	cpc	r24, r1
     ca2:	91 05       	cpc	r25, r1
     ca4:	19 f4       	brne	.+6      	; 0xcac <__floatunsisf+0x20>
     ca6:	82 e0       	ldi	r24, 0x02	; 2
     ca8:	89 83       	std	Y+1, r24	; 0x01
     caa:	60 c0       	rjmp	.+192    	; 0xd6c <__floatunsisf+0xe0>
     cac:	83 e0       	ldi	r24, 0x03	; 3
     cae:	89 83       	std	Y+1, r24	; 0x01
     cb0:	8e e1       	ldi	r24, 0x1E	; 30
     cb2:	c8 2e       	mov	r12, r24
     cb4:	d1 2c       	mov	r13, r1
     cb6:	dc 82       	std	Y+4, r13	; 0x04
     cb8:	cb 82       	std	Y+3, r12	; 0x03
     cba:	ed 82       	std	Y+5, r14	; 0x05
     cbc:	fe 82       	std	Y+6, r15	; 0x06
     cbe:	0f 83       	std	Y+7, r16	; 0x07
     cc0:	18 87       	std	Y+8, r17	; 0x08
     cc2:	c8 01       	movw	r24, r16
     cc4:	b7 01       	movw	r22, r14
     cc6:	0e 94 bf 06 	call	0xd7e	; 0xd7e <__clzsi2>
     cca:	fc 01       	movw	r30, r24
     ccc:	31 97       	sbiw	r30, 0x01	; 1
     cce:	f7 ff       	sbrs	r31, 7
     cd0:	3b c0       	rjmp	.+118    	; 0xd48 <__floatunsisf+0xbc>
     cd2:	22 27       	eor	r18, r18
     cd4:	33 27       	eor	r19, r19
     cd6:	2e 1b       	sub	r18, r30
     cd8:	3f 0b       	sbc	r19, r31
     cda:	57 01       	movw	r10, r14
     cdc:	68 01       	movw	r12, r16
     cde:	02 2e       	mov	r0, r18
     ce0:	04 c0       	rjmp	.+8      	; 0xcea <__floatunsisf+0x5e>
     ce2:	d6 94       	lsr	r13
     ce4:	c7 94       	ror	r12
     ce6:	b7 94       	ror	r11
     ce8:	a7 94       	ror	r10
     cea:	0a 94       	dec	r0
     cec:	d2 f7       	brpl	.-12     	; 0xce2 <__floatunsisf+0x56>
     cee:	40 e0       	ldi	r20, 0x00	; 0
     cf0:	50 e0       	ldi	r21, 0x00	; 0
     cf2:	60 e0       	ldi	r22, 0x00	; 0
     cf4:	70 e0       	ldi	r23, 0x00	; 0
     cf6:	81 e0       	ldi	r24, 0x01	; 1
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	a0 e0       	ldi	r26, 0x00	; 0
     cfc:	b0 e0       	ldi	r27, 0x00	; 0
     cfe:	04 c0       	rjmp	.+8      	; 0xd08 <__floatunsisf+0x7c>
     d00:	88 0f       	add	r24, r24
     d02:	99 1f       	adc	r25, r25
     d04:	aa 1f       	adc	r26, r26
     d06:	bb 1f       	adc	r27, r27
     d08:	2a 95       	dec	r18
     d0a:	d2 f7       	brpl	.-12     	; 0xd00 <__floatunsisf+0x74>
     d0c:	01 97       	sbiw	r24, 0x01	; 1
     d0e:	a1 09       	sbc	r26, r1
     d10:	b1 09       	sbc	r27, r1
     d12:	8e 21       	and	r24, r14
     d14:	9f 21       	and	r25, r15
     d16:	a0 23       	and	r26, r16
     d18:	b1 23       	and	r27, r17
     d1a:	00 97       	sbiw	r24, 0x00	; 0
     d1c:	a1 05       	cpc	r26, r1
     d1e:	b1 05       	cpc	r27, r1
     d20:	21 f0       	breq	.+8      	; 0xd2a <__floatunsisf+0x9e>
     d22:	41 e0       	ldi	r20, 0x01	; 1
     d24:	50 e0       	ldi	r21, 0x00	; 0
     d26:	60 e0       	ldi	r22, 0x00	; 0
     d28:	70 e0       	ldi	r23, 0x00	; 0
     d2a:	4a 29       	or	r20, r10
     d2c:	5b 29       	or	r21, r11
     d2e:	6c 29       	or	r22, r12
     d30:	7d 29       	or	r23, r13
     d32:	4d 83       	std	Y+5, r20	; 0x05
     d34:	5e 83       	std	Y+6, r21	; 0x06
     d36:	6f 83       	std	Y+7, r22	; 0x07
     d38:	78 87       	std	Y+8, r23	; 0x08
     d3a:	8e e1       	ldi	r24, 0x1E	; 30
     d3c:	90 e0       	ldi	r25, 0x00	; 0
     d3e:	8e 1b       	sub	r24, r30
     d40:	9f 0b       	sbc	r25, r31
     d42:	9c 83       	std	Y+4, r25	; 0x04
     d44:	8b 83       	std	Y+3, r24	; 0x03
     d46:	12 c0       	rjmp	.+36     	; 0xd6c <__floatunsisf+0xe0>
     d48:	30 97       	sbiw	r30, 0x00	; 0
     d4a:	81 f0       	breq	.+32     	; 0xd6c <__floatunsisf+0xe0>
     d4c:	0e 2e       	mov	r0, r30
     d4e:	04 c0       	rjmp	.+8      	; 0xd58 <__floatunsisf+0xcc>
     d50:	ee 0c       	add	r14, r14
     d52:	ff 1c       	adc	r15, r15
     d54:	00 1f       	adc	r16, r16
     d56:	11 1f       	adc	r17, r17
     d58:	0a 94       	dec	r0
     d5a:	d2 f7       	brpl	.-12     	; 0xd50 <__floatunsisf+0xc4>
     d5c:	ed 82       	std	Y+5, r14	; 0x05
     d5e:	fe 82       	std	Y+6, r15	; 0x06
     d60:	0f 83       	std	Y+7, r16	; 0x07
     d62:	18 87       	std	Y+8, r17	; 0x08
     d64:	ce 1a       	sub	r12, r30
     d66:	df 0a       	sbc	r13, r31
     d68:	dc 82       	std	Y+4, r13	; 0x04
     d6a:	cb 82       	std	Y+3, r12	; 0x03
     d6c:	1a 82       	std	Y+2, r1	; 0x02
     d6e:	ce 01       	movw	r24, r28
     d70:	01 96       	adiw	r24, 0x01	; 1
     d72:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__pack_f>
     d76:	28 96       	adiw	r28, 0x08	; 8
     d78:	ea e0       	ldi	r30, 0x0A	; 10
     d7a:	0c 94 d8 08 	jmp	0x11b0	; 0x11b0 <__epilogue_restores__+0x10>

00000d7e <__clzsi2>:
     d7e:	ef 92       	push	r14
     d80:	ff 92       	push	r15
     d82:	0f 93       	push	r16
     d84:	1f 93       	push	r17
     d86:	7b 01       	movw	r14, r22
     d88:	8c 01       	movw	r16, r24
     d8a:	80 e0       	ldi	r24, 0x00	; 0
     d8c:	e8 16       	cp	r14, r24
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	f8 06       	cpc	r15, r24
     d92:	81 e0       	ldi	r24, 0x01	; 1
     d94:	08 07       	cpc	r16, r24
     d96:	80 e0       	ldi	r24, 0x00	; 0
     d98:	18 07       	cpc	r17, r24
     d9a:	88 f4       	brcc	.+34     	; 0xdbe <__clzsi2+0x40>
     d9c:	8f ef       	ldi	r24, 0xFF	; 255
     d9e:	e8 16       	cp	r14, r24
     da0:	f1 04       	cpc	r15, r1
     da2:	01 05       	cpc	r16, r1
     da4:	11 05       	cpc	r17, r1
     da6:	31 f0       	breq	.+12     	; 0xdb4 <__clzsi2+0x36>
     da8:	28 f0       	brcs	.+10     	; 0xdb4 <__clzsi2+0x36>
     daa:	88 e0       	ldi	r24, 0x08	; 8
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	a0 e0       	ldi	r26, 0x00	; 0
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	17 c0       	rjmp	.+46     	; 0xde2 <__clzsi2+0x64>
     db4:	80 e0       	ldi	r24, 0x00	; 0
     db6:	90 e0       	ldi	r25, 0x00	; 0
     db8:	a0 e0       	ldi	r26, 0x00	; 0
     dba:	b0 e0       	ldi	r27, 0x00	; 0
     dbc:	12 c0       	rjmp	.+36     	; 0xde2 <__clzsi2+0x64>
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	e8 16       	cp	r14, r24
     dc2:	80 e0       	ldi	r24, 0x00	; 0
     dc4:	f8 06       	cpc	r15, r24
     dc6:	80 e0       	ldi	r24, 0x00	; 0
     dc8:	08 07       	cpc	r16, r24
     dca:	81 e0       	ldi	r24, 0x01	; 1
     dcc:	18 07       	cpc	r17, r24
     dce:	28 f0       	brcs	.+10     	; 0xdda <__clzsi2+0x5c>
     dd0:	88 e1       	ldi	r24, 0x18	; 24
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	a0 e0       	ldi	r26, 0x00	; 0
     dd6:	b0 e0       	ldi	r27, 0x00	; 0
     dd8:	04 c0       	rjmp	.+8      	; 0xde2 <__clzsi2+0x64>
     dda:	80 e1       	ldi	r24, 0x10	; 16
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	a0 e0       	ldi	r26, 0x00	; 0
     de0:	b0 e0       	ldi	r27, 0x00	; 0
     de2:	20 e2       	ldi	r18, 0x20	; 32
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	40 e0       	ldi	r20, 0x00	; 0
     de8:	50 e0       	ldi	r21, 0x00	; 0
     dea:	28 1b       	sub	r18, r24
     dec:	39 0b       	sbc	r19, r25
     dee:	4a 0b       	sbc	r20, r26
     df0:	5b 0b       	sbc	r21, r27
     df2:	04 c0       	rjmp	.+8      	; 0xdfc <__clzsi2+0x7e>
     df4:	16 95       	lsr	r17
     df6:	07 95       	ror	r16
     df8:	f7 94       	ror	r15
     dfa:	e7 94       	ror	r14
     dfc:	8a 95       	dec	r24
     dfe:	d2 f7       	brpl	.-12     	; 0xdf4 <__clzsi2+0x76>
     e00:	f7 01       	movw	r30, r14
     e02:	e0 59       	subi	r30, 0x90	; 144
     e04:	ff 4f       	sbci	r31, 0xFF	; 255
     e06:	80 81       	ld	r24, Z
     e08:	28 1b       	sub	r18, r24
     e0a:	31 09       	sbc	r19, r1
     e0c:	41 09       	sbc	r20, r1
     e0e:	51 09       	sbc	r21, r1
     e10:	c9 01       	movw	r24, r18
     e12:	1f 91       	pop	r17
     e14:	0f 91       	pop	r16
     e16:	ff 90       	pop	r15
     e18:	ef 90       	pop	r14
     e1a:	08 95       	ret

00000e1c <__pack_f>:
     e1c:	df 92       	push	r13
     e1e:	ef 92       	push	r14
     e20:	ff 92       	push	r15
     e22:	0f 93       	push	r16
     e24:	1f 93       	push	r17
     e26:	fc 01       	movw	r30, r24
     e28:	e4 80       	ldd	r14, Z+4	; 0x04
     e2a:	f5 80       	ldd	r15, Z+5	; 0x05
     e2c:	06 81       	ldd	r16, Z+6	; 0x06
     e2e:	17 81       	ldd	r17, Z+7	; 0x07
     e30:	d1 80       	ldd	r13, Z+1	; 0x01
     e32:	80 81       	ld	r24, Z
     e34:	82 30       	cpi	r24, 0x02	; 2
     e36:	48 f4       	brcc	.+18     	; 0xe4a <__pack_f+0x2e>
     e38:	80 e0       	ldi	r24, 0x00	; 0
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	a0 e1       	ldi	r26, 0x10	; 16
     e3e:	b0 e0       	ldi	r27, 0x00	; 0
     e40:	e8 2a       	or	r14, r24
     e42:	f9 2a       	or	r15, r25
     e44:	0a 2b       	or	r16, r26
     e46:	1b 2b       	or	r17, r27
     e48:	a5 c0       	rjmp	.+330    	; 0xf94 <__pack_f+0x178>
     e4a:	84 30       	cpi	r24, 0x04	; 4
     e4c:	09 f4       	brne	.+2      	; 0xe50 <__pack_f+0x34>
     e4e:	9f c0       	rjmp	.+318    	; 0xf8e <__pack_f+0x172>
     e50:	82 30       	cpi	r24, 0x02	; 2
     e52:	21 f4       	brne	.+8      	; 0xe5c <__pack_f+0x40>
     e54:	ee 24       	eor	r14, r14
     e56:	ff 24       	eor	r15, r15
     e58:	87 01       	movw	r16, r14
     e5a:	05 c0       	rjmp	.+10     	; 0xe66 <__pack_f+0x4a>
     e5c:	e1 14       	cp	r14, r1
     e5e:	f1 04       	cpc	r15, r1
     e60:	01 05       	cpc	r16, r1
     e62:	11 05       	cpc	r17, r1
     e64:	19 f4       	brne	.+6      	; 0xe6c <__pack_f+0x50>
     e66:	e0 e0       	ldi	r30, 0x00	; 0
     e68:	f0 e0       	ldi	r31, 0x00	; 0
     e6a:	96 c0       	rjmp	.+300    	; 0xf98 <__pack_f+0x17c>
     e6c:	62 81       	ldd	r22, Z+2	; 0x02
     e6e:	73 81       	ldd	r23, Z+3	; 0x03
     e70:	9f ef       	ldi	r25, 0xFF	; 255
     e72:	62 38       	cpi	r22, 0x82	; 130
     e74:	79 07       	cpc	r23, r25
     e76:	0c f0       	brlt	.+2      	; 0xe7a <__pack_f+0x5e>
     e78:	5b c0       	rjmp	.+182    	; 0xf30 <__pack_f+0x114>
     e7a:	22 e8       	ldi	r18, 0x82	; 130
     e7c:	3f ef       	ldi	r19, 0xFF	; 255
     e7e:	26 1b       	sub	r18, r22
     e80:	37 0b       	sbc	r19, r23
     e82:	2a 31       	cpi	r18, 0x1A	; 26
     e84:	31 05       	cpc	r19, r1
     e86:	2c f0       	brlt	.+10     	; 0xe92 <__pack_f+0x76>
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	30 e0       	ldi	r19, 0x00	; 0
     e8c:	40 e0       	ldi	r20, 0x00	; 0
     e8e:	50 e0       	ldi	r21, 0x00	; 0
     e90:	2a c0       	rjmp	.+84     	; 0xee6 <__pack_f+0xca>
     e92:	b8 01       	movw	r22, r16
     e94:	a7 01       	movw	r20, r14
     e96:	02 2e       	mov	r0, r18
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <__pack_f+0x86>
     e9a:	76 95       	lsr	r23
     e9c:	67 95       	ror	r22
     e9e:	57 95       	ror	r21
     ea0:	47 95       	ror	r20
     ea2:	0a 94       	dec	r0
     ea4:	d2 f7       	brpl	.-12     	; 0xe9a <__pack_f+0x7e>
     ea6:	81 e0       	ldi	r24, 0x01	; 1
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	a0 e0       	ldi	r26, 0x00	; 0
     eac:	b0 e0       	ldi	r27, 0x00	; 0
     eae:	04 c0       	rjmp	.+8      	; 0xeb8 <__pack_f+0x9c>
     eb0:	88 0f       	add	r24, r24
     eb2:	99 1f       	adc	r25, r25
     eb4:	aa 1f       	adc	r26, r26
     eb6:	bb 1f       	adc	r27, r27
     eb8:	2a 95       	dec	r18
     eba:	d2 f7       	brpl	.-12     	; 0xeb0 <__pack_f+0x94>
     ebc:	01 97       	sbiw	r24, 0x01	; 1
     ebe:	a1 09       	sbc	r26, r1
     ec0:	b1 09       	sbc	r27, r1
     ec2:	8e 21       	and	r24, r14
     ec4:	9f 21       	and	r25, r15
     ec6:	a0 23       	and	r26, r16
     ec8:	b1 23       	and	r27, r17
     eca:	00 97       	sbiw	r24, 0x00	; 0
     ecc:	a1 05       	cpc	r26, r1
     ece:	b1 05       	cpc	r27, r1
     ed0:	21 f0       	breq	.+8      	; 0xeda <__pack_f+0xbe>
     ed2:	81 e0       	ldi	r24, 0x01	; 1
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	a0 e0       	ldi	r26, 0x00	; 0
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	9a 01       	movw	r18, r20
     edc:	ab 01       	movw	r20, r22
     ede:	28 2b       	or	r18, r24
     ee0:	39 2b       	or	r19, r25
     ee2:	4a 2b       	or	r20, r26
     ee4:	5b 2b       	or	r21, r27
     ee6:	da 01       	movw	r26, r20
     ee8:	c9 01       	movw	r24, r18
     eea:	8f 77       	andi	r24, 0x7F	; 127
     eec:	90 70       	andi	r25, 0x00	; 0
     eee:	a0 70       	andi	r26, 0x00	; 0
     ef0:	b0 70       	andi	r27, 0x00	; 0
     ef2:	80 34       	cpi	r24, 0x40	; 64
     ef4:	91 05       	cpc	r25, r1
     ef6:	a1 05       	cpc	r26, r1
     ef8:	b1 05       	cpc	r27, r1
     efa:	39 f4       	brne	.+14     	; 0xf0a <__pack_f+0xee>
     efc:	27 ff       	sbrs	r18, 7
     efe:	09 c0       	rjmp	.+18     	; 0xf12 <__pack_f+0xf6>
     f00:	20 5c       	subi	r18, 0xC0	; 192
     f02:	3f 4f       	sbci	r19, 0xFF	; 255
     f04:	4f 4f       	sbci	r20, 0xFF	; 255
     f06:	5f 4f       	sbci	r21, 0xFF	; 255
     f08:	04 c0       	rjmp	.+8      	; 0xf12 <__pack_f+0xf6>
     f0a:	21 5c       	subi	r18, 0xC1	; 193
     f0c:	3f 4f       	sbci	r19, 0xFF	; 255
     f0e:	4f 4f       	sbci	r20, 0xFF	; 255
     f10:	5f 4f       	sbci	r21, 0xFF	; 255
     f12:	e0 e0       	ldi	r30, 0x00	; 0
     f14:	f0 e0       	ldi	r31, 0x00	; 0
     f16:	20 30       	cpi	r18, 0x00	; 0
     f18:	a0 e0       	ldi	r26, 0x00	; 0
     f1a:	3a 07       	cpc	r19, r26
     f1c:	a0 e0       	ldi	r26, 0x00	; 0
     f1e:	4a 07       	cpc	r20, r26
     f20:	a0 e4       	ldi	r26, 0x40	; 64
     f22:	5a 07       	cpc	r21, r26
     f24:	10 f0       	brcs	.+4      	; 0xf2a <__pack_f+0x10e>
     f26:	e1 e0       	ldi	r30, 0x01	; 1
     f28:	f0 e0       	ldi	r31, 0x00	; 0
     f2a:	79 01       	movw	r14, r18
     f2c:	8a 01       	movw	r16, r20
     f2e:	27 c0       	rjmp	.+78     	; 0xf7e <__pack_f+0x162>
     f30:	60 38       	cpi	r22, 0x80	; 128
     f32:	71 05       	cpc	r23, r1
     f34:	64 f5       	brge	.+88     	; 0xf8e <__pack_f+0x172>
     f36:	fb 01       	movw	r30, r22
     f38:	e1 58       	subi	r30, 0x81	; 129
     f3a:	ff 4f       	sbci	r31, 0xFF	; 255
     f3c:	d8 01       	movw	r26, r16
     f3e:	c7 01       	movw	r24, r14
     f40:	8f 77       	andi	r24, 0x7F	; 127
     f42:	90 70       	andi	r25, 0x00	; 0
     f44:	a0 70       	andi	r26, 0x00	; 0
     f46:	b0 70       	andi	r27, 0x00	; 0
     f48:	80 34       	cpi	r24, 0x40	; 64
     f4a:	91 05       	cpc	r25, r1
     f4c:	a1 05       	cpc	r26, r1
     f4e:	b1 05       	cpc	r27, r1
     f50:	39 f4       	brne	.+14     	; 0xf60 <__pack_f+0x144>
     f52:	e7 fe       	sbrs	r14, 7
     f54:	0d c0       	rjmp	.+26     	; 0xf70 <__pack_f+0x154>
     f56:	80 e4       	ldi	r24, 0x40	; 64
     f58:	90 e0       	ldi	r25, 0x00	; 0
     f5a:	a0 e0       	ldi	r26, 0x00	; 0
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	04 c0       	rjmp	.+8      	; 0xf68 <__pack_f+0x14c>
     f60:	8f e3       	ldi	r24, 0x3F	; 63
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	a0 e0       	ldi	r26, 0x00	; 0
     f66:	b0 e0       	ldi	r27, 0x00	; 0
     f68:	e8 0e       	add	r14, r24
     f6a:	f9 1e       	adc	r15, r25
     f6c:	0a 1f       	adc	r16, r26
     f6e:	1b 1f       	adc	r17, r27
     f70:	17 ff       	sbrs	r17, 7
     f72:	05 c0       	rjmp	.+10     	; 0xf7e <__pack_f+0x162>
     f74:	16 95       	lsr	r17
     f76:	07 95       	ror	r16
     f78:	f7 94       	ror	r15
     f7a:	e7 94       	ror	r14
     f7c:	31 96       	adiw	r30, 0x01	; 1
     f7e:	87 e0       	ldi	r24, 0x07	; 7
     f80:	16 95       	lsr	r17
     f82:	07 95       	ror	r16
     f84:	f7 94       	ror	r15
     f86:	e7 94       	ror	r14
     f88:	8a 95       	dec	r24
     f8a:	d1 f7       	brne	.-12     	; 0xf80 <__pack_f+0x164>
     f8c:	05 c0       	rjmp	.+10     	; 0xf98 <__pack_f+0x17c>
     f8e:	ee 24       	eor	r14, r14
     f90:	ff 24       	eor	r15, r15
     f92:	87 01       	movw	r16, r14
     f94:	ef ef       	ldi	r30, 0xFF	; 255
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	6e 2f       	mov	r22, r30
     f9a:	67 95       	ror	r22
     f9c:	66 27       	eor	r22, r22
     f9e:	67 95       	ror	r22
     fa0:	90 2f       	mov	r25, r16
     fa2:	9f 77       	andi	r25, 0x7F	; 127
     fa4:	d7 94       	ror	r13
     fa6:	dd 24       	eor	r13, r13
     fa8:	d7 94       	ror	r13
     faa:	8e 2f       	mov	r24, r30
     fac:	86 95       	lsr	r24
     fae:	49 2f       	mov	r20, r25
     fb0:	46 2b       	or	r20, r22
     fb2:	58 2f       	mov	r21, r24
     fb4:	5d 29       	or	r21, r13
     fb6:	b7 01       	movw	r22, r14
     fb8:	ca 01       	movw	r24, r20
     fba:	1f 91       	pop	r17
     fbc:	0f 91       	pop	r16
     fbe:	ff 90       	pop	r15
     fc0:	ef 90       	pop	r14
     fc2:	df 90       	pop	r13
     fc4:	08 95       	ret

00000fc6 <__unpack_f>:
     fc6:	fc 01       	movw	r30, r24
     fc8:	db 01       	movw	r26, r22
     fca:	40 81       	ld	r20, Z
     fcc:	51 81       	ldd	r21, Z+1	; 0x01
     fce:	22 81       	ldd	r18, Z+2	; 0x02
     fd0:	62 2f       	mov	r22, r18
     fd2:	6f 77       	andi	r22, 0x7F	; 127
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	22 1f       	adc	r18, r18
     fd8:	22 27       	eor	r18, r18
     fda:	22 1f       	adc	r18, r18
     fdc:	93 81       	ldd	r25, Z+3	; 0x03
     fde:	89 2f       	mov	r24, r25
     fe0:	88 0f       	add	r24, r24
     fe2:	82 2b       	or	r24, r18
     fe4:	28 2f       	mov	r18, r24
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	99 1f       	adc	r25, r25
     fea:	99 27       	eor	r25, r25
     fec:	99 1f       	adc	r25, r25
     fee:	11 96       	adiw	r26, 0x01	; 1
     ff0:	9c 93       	st	X, r25
     ff2:	11 97       	sbiw	r26, 0x01	; 1
     ff4:	21 15       	cp	r18, r1
     ff6:	31 05       	cpc	r19, r1
     ff8:	a9 f5       	brne	.+106    	; 0x1064 <__unpack_f+0x9e>
     ffa:	41 15       	cp	r20, r1
     ffc:	51 05       	cpc	r21, r1
     ffe:	61 05       	cpc	r22, r1
    1000:	71 05       	cpc	r23, r1
    1002:	11 f4       	brne	.+4      	; 0x1008 <__unpack_f+0x42>
    1004:	82 e0       	ldi	r24, 0x02	; 2
    1006:	37 c0       	rjmp	.+110    	; 0x1076 <__unpack_f+0xb0>
    1008:	82 e8       	ldi	r24, 0x82	; 130
    100a:	9f ef       	ldi	r25, 0xFF	; 255
    100c:	13 96       	adiw	r26, 0x03	; 3
    100e:	9c 93       	st	X, r25
    1010:	8e 93       	st	-X, r24
    1012:	12 97       	sbiw	r26, 0x02	; 2
    1014:	9a 01       	movw	r18, r20
    1016:	ab 01       	movw	r20, r22
    1018:	67 e0       	ldi	r22, 0x07	; 7
    101a:	22 0f       	add	r18, r18
    101c:	33 1f       	adc	r19, r19
    101e:	44 1f       	adc	r20, r20
    1020:	55 1f       	adc	r21, r21
    1022:	6a 95       	dec	r22
    1024:	d1 f7       	brne	.-12     	; 0x101a <__unpack_f+0x54>
    1026:	83 e0       	ldi	r24, 0x03	; 3
    1028:	8c 93       	st	X, r24
    102a:	0d c0       	rjmp	.+26     	; 0x1046 <__unpack_f+0x80>
    102c:	22 0f       	add	r18, r18
    102e:	33 1f       	adc	r19, r19
    1030:	44 1f       	adc	r20, r20
    1032:	55 1f       	adc	r21, r21
    1034:	12 96       	adiw	r26, 0x02	; 2
    1036:	8d 91       	ld	r24, X+
    1038:	9c 91       	ld	r25, X
    103a:	13 97       	sbiw	r26, 0x03	; 3
    103c:	01 97       	sbiw	r24, 0x01	; 1
    103e:	13 96       	adiw	r26, 0x03	; 3
    1040:	9c 93       	st	X, r25
    1042:	8e 93       	st	-X, r24
    1044:	12 97       	sbiw	r26, 0x02	; 2
    1046:	20 30       	cpi	r18, 0x00	; 0
    1048:	80 e0       	ldi	r24, 0x00	; 0
    104a:	38 07       	cpc	r19, r24
    104c:	80 e0       	ldi	r24, 0x00	; 0
    104e:	48 07       	cpc	r20, r24
    1050:	80 e4       	ldi	r24, 0x40	; 64
    1052:	58 07       	cpc	r21, r24
    1054:	58 f3       	brcs	.-42     	; 0x102c <__unpack_f+0x66>
    1056:	14 96       	adiw	r26, 0x04	; 4
    1058:	2d 93       	st	X+, r18
    105a:	3d 93       	st	X+, r19
    105c:	4d 93       	st	X+, r20
    105e:	5c 93       	st	X, r21
    1060:	17 97       	sbiw	r26, 0x07	; 7
    1062:	08 95       	ret
    1064:	2f 3f       	cpi	r18, 0xFF	; 255
    1066:	31 05       	cpc	r19, r1
    1068:	79 f4       	brne	.+30     	; 0x1088 <__unpack_f+0xc2>
    106a:	41 15       	cp	r20, r1
    106c:	51 05       	cpc	r21, r1
    106e:	61 05       	cpc	r22, r1
    1070:	71 05       	cpc	r23, r1
    1072:	19 f4       	brne	.+6      	; 0x107a <__unpack_f+0xb4>
    1074:	84 e0       	ldi	r24, 0x04	; 4
    1076:	8c 93       	st	X, r24
    1078:	08 95       	ret
    107a:	64 ff       	sbrs	r22, 4
    107c:	03 c0       	rjmp	.+6      	; 0x1084 <__unpack_f+0xbe>
    107e:	81 e0       	ldi	r24, 0x01	; 1
    1080:	8c 93       	st	X, r24
    1082:	12 c0       	rjmp	.+36     	; 0x10a8 <__unpack_f+0xe2>
    1084:	1c 92       	st	X, r1
    1086:	10 c0       	rjmp	.+32     	; 0x10a8 <__unpack_f+0xe2>
    1088:	2f 57       	subi	r18, 0x7F	; 127
    108a:	30 40       	sbci	r19, 0x00	; 0
    108c:	13 96       	adiw	r26, 0x03	; 3
    108e:	3c 93       	st	X, r19
    1090:	2e 93       	st	-X, r18
    1092:	12 97       	sbiw	r26, 0x02	; 2
    1094:	83 e0       	ldi	r24, 0x03	; 3
    1096:	8c 93       	st	X, r24
    1098:	87 e0       	ldi	r24, 0x07	; 7
    109a:	44 0f       	add	r20, r20
    109c:	55 1f       	adc	r21, r21
    109e:	66 1f       	adc	r22, r22
    10a0:	77 1f       	adc	r23, r23
    10a2:	8a 95       	dec	r24
    10a4:	d1 f7       	brne	.-12     	; 0x109a <__unpack_f+0xd4>
    10a6:	70 64       	ori	r23, 0x40	; 64
    10a8:	14 96       	adiw	r26, 0x04	; 4
    10aa:	4d 93       	st	X+, r20
    10ac:	5d 93       	st	X+, r21
    10ae:	6d 93       	st	X+, r22
    10b0:	7c 93       	st	X, r23
    10b2:	17 97       	sbiw	r26, 0x07	; 7
    10b4:	08 95       	ret

000010b6 <__fpcmp_parts_f>:
    10b6:	1f 93       	push	r17
    10b8:	dc 01       	movw	r26, r24
    10ba:	fb 01       	movw	r30, r22
    10bc:	9c 91       	ld	r25, X
    10be:	92 30       	cpi	r25, 0x02	; 2
    10c0:	08 f4       	brcc	.+2      	; 0x10c4 <__fpcmp_parts_f+0xe>
    10c2:	47 c0       	rjmp	.+142    	; 0x1152 <__fpcmp_parts_f+0x9c>
    10c4:	80 81       	ld	r24, Z
    10c6:	82 30       	cpi	r24, 0x02	; 2
    10c8:	08 f4       	brcc	.+2      	; 0x10cc <__fpcmp_parts_f+0x16>
    10ca:	43 c0       	rjmp	.+134    	; 0x1152 <__fpcmp_parts_f+0x9c>
    10cc:	94 30       	cpi	r25, 0x04	; 4
    10ce:	51 f4       	brne	.+20     	; 0x10e4 <__fpcmp_parts_f+0x2e>
    10d0:	11 96       	adiw	r26, 0x01	; 1
    10d2:	1c 91       	ld	r17, X
    10d4:	84 30       	cpi	r24, 0x04	; 4
    10d6:	99 f5       	brne	.+102    	; 0x113e <__fpcmp_parts_f+0x88>
    10d8:	81 81       	ldd	r24, Z+1	; 0x01
    10da:	68 2f       	mov	r22, r24
    10dc:	70 e0       	ldi	r23, 0x00	; 0
    10de:	61 1b       	sub	r22, r17
    10e0:	71 09       	sbc	r23, r1
    10e2:	3f c0       	rjmp	.+126    	; 0x1162 <__fpcmp_parts_f+0xac>
    10e4:	84 30       	cpi	r24, 0x04	; 4
    10e6:	21 f0       	breq	.+8      	; 0x10f0 <__fpcmp_parts_f+0x3a>
    10e8:	92 30       	cpi	r25, 0x02	; 2
    10ea:	31 f4       	brne	.+12     	; 0x10f8 <__fpcmp_parts_f+0x42>
    10ec:	82 30       	cpi	r24, 0x02	; 2
    10ee:	b9 f1       	breq	.+110    	; 0x115e <__fpcmp_parts_f+0xa8>
    10f0:	81 81       	ldd	r24, Z+1	; 0x01
    10f2:	88 23       	and	r24, r24
    10f4:	89 f1       	breq	.+98     	; 0x1158 <__fpcmp_parts_f+0xa2>
    10f6:	2d c0       	rjmp	.+90     	; 0x1152 <__fpcmp_parts_f+0x9c>
    10f8:	11 96       	adiw	r26, 0x01	; 1
    10fa:	1c 91       	ld	r17, X
    10fc:	11 97       	sbiw	r26, 0x01	; 1
    10fe:	82 30       	cpi	r24, 0x02	; 2
    1100:	f1 f0       	breq	.+60     	; 0x113e <__fpcmp_parts_f+0x88>
    1102:	81 81       	ldd	r24, Z+1	; 0x01
    1104:	18 17       	cp	r17, r24
    1106:	d9 f4       	brne	.+54     	; 0x113e <__fpcmp_parts_f+0x88>
    1108:	12 96       	adiw	r26, 0x02	; 2
    110a:	2d 91       	ld	r18, X+
    110c:	3c 91       	ld	r19, X
    110e:	13 97       	sbiw	r26, 0x03	; 3
    1110:	82 81       	ldd	r24, Z+2	; 0x02
    1112:	93 81       	ldd	r25, Z+3	; 0x03
    1114:	82 17       	cp	r24, r18
    1116:	93 07       	cpc	r25, r19
    1118:	94 f0       	brlt	.+36     	; 0x113e <__fpcmp_parts_f+0x88>
    111a:	28 17       	cp	r18, r24
    111c:	39 07       	cpc	r19, r25
    111e:	bc f0       	brlt	.+46     	; 0x114e <__fpcmp_parts_f+0x98>
    1120:	14 96       	adiw	r26, 0x04	; 4
    1122:	8d 91       	ld	r24, X+
    1124:	9d 91       	ld	r25, X+
    1126:	0d 90       	ld	r0, X+
    1128:	bc 91       	ld	r27, X
    112a:	a0 2d       	mov	r26, r0
    112c:	24 81       	ldd	r18, Z+4	; 0x04
    112e:	35 81       	ldd	r19, Z+5	; 0x05
    1130:	46 81       	ldd	r20, Z+6	; 0x06
    1132:	57 81       	ldd	r21, Z+7	; 0x07
    1134:	28 17       	cp	r18, r24
    1136:	39 07       	cpc	r19, r25
    1138:	4a 07       	cpc	r20, r26
    113a:	5b 07       	cpc	r21, r27
    113c:	18 f4       	brcc	.+6      	; 0x1144 <__fpcmp_parts_f+0x8e>
    113e:	11 23       	and	r17, r17
    1140:	41 f0       	breq	.+16     	; 0x1152 <__fpcmp_parts_f+0x9c>
    1142:	0a c0       	rjmp	.+20     	; 0x1158 <__fpcmp_parts_f+0xa2>
    1144:	82 17       	cp	r24, r18
    1146:	93 07       	cpc	r25, r19
    1148:	a4 07       	cpc	r26, r20
    114a:	b5 07       	cpc	r27, r21
    114c:	40 f4       	brcc	.+16     	; 0x115e <__fpcmp_parts_f+0xa8>
    114e:	11 23       	and	r17, r17
    1150:	19 f0       	breq	.+6      	; 0x1158 <__fpcmp_parts_f+0xa2>
    1152:	61 e0       	ldi	r22, 0x01	; 1
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	05 c0       	rjmp	.+10     	; 0x1162 <__fpcmp_parts_f+0xac>
    1158:	6f ef       	ldi	r22, 0xFF	; 255
    115a:	7f ef       	ldi	r23, 0xFF	; 255
    115c:	02 c0       	rjmp	.+4      	; 0x1162 <__fpcmp_parts_f+0xac>
    115e:	60 e0       	ldi	r22, 0x00	; 0
    1160:	70 e0       	ldi	r23, 0x00	; 0
    1162:	cb 01       	movw	r24, r22
    1164:	1f 91       	pop	r17
    1166:	08 95       	ret

00001168 <__prologue_saves__>:
    1168:	2f 92       	push	r2
    116a:	3f 92       	push	r3
    116c:	4f 92       	push	r4
    116e:	5f 92       	push	r5
    1170:	6f 92       	push	r6
    1172:	7f 92       	push	r7
    1174:	8f 92       	push	r8
    1176:	9f 92       	push	r9
    1178:	af 92       	push	r10
    117a:	bf 92       	push	r11
    117c:	cf 92       	push	r12
    117e:	df 92       	push	r13
    1180:	ef 92       	push	r14
    1182:	ff 92       	push	r15
    1184:	0f 93       	push	r16
    1186:	1f 93       	push	r17
    1188:	cf 93       	push	r28
    118a:	df 93       	push	r29
    118c:	cd b7       	in	r28, 0x3d	; 61
    118e:	de b7       	in	r29, 0x3e	; 62
    1190:	ca 1b       	sub	r28, r26
    1192:	db 0b       	sbc	r29, r27
    1194:	0f b6       	in	r0, 0x3f	; 63
    1196:	f8 94       	cli
    1198:	de bf       	out	0x3e, r29	; 62
    119a:	0f be       	out	0x3f, r0	; 63
    119c:	cd bf       	out	0x3d, r28	; 61
    119e:	09 94       	ijmp

000011a0 <__epilogue_restores__>:
    11a0:	2a 88       	ldd	r2, Y+18	; 0x12
    11a2:	39 88       	ldd	r3, Y+17	; 0x11
    11a4:	48 88       	ldd	r4, Y+16	; 0x10
    11a6:	5f 84       	ldd	r5, Y+15	; 0x0f
    11a8:	6e 84       	ldd	r6, Y+14	; 0x0e
    11aa:	7d 84       	ldd	r7, Y+13	; 0x0d
    11ac:	8c 84       	ldd	r8, Y+12	; 0x0c
    11ae:	9b 84       	ldd	r9, Y+11	; 0x0b
    11b0:	aa 84       	ldd	r10, Y+10	; 0x0a
    11b2:	b9 84       	ldd	r11, Y+9	; 0x09
    11b4:	c8 84       	ldd	r12, Y+8	; 0x08
    11b6:	df 80       	ldd	r13, Y+7	; 0x07
    11b8:	ee 80       	ldd	r14, Y+6	; 0x06
    11ba:	fd 80       	ldd	r15, Y+5	; 0x05
    11bc:	0c 81       	ldd	r16, Y+4	; 0x04
    11be:	1b 81       	ldd	r17, Y+3	; 0x03
    11c0:	aa 81       	ldd	r26, Y+2	; 0x02
    11c2:	b9 81       	ldd	r27, Y+1	; 0x01
    11c4:	ce 0f       	add	r28, r30
    11c6:	d1 1d       	adc	r29, r1
    11c8:	0f b6       	in	r0, 0x3f	; 63
    11ca:	f8 94       	cli
    11cc:	de bf       	out	0x3e, r29	; 62
    11ce:	0f be       	out	0x3f, r0	; 63
    11d0:	cd bf       	out	0x3d, r28	; 61
    11d2:	ed 01       	movw	r28, r26
    11d4:	08 95       	ret

000011d6 <_exit>:
    11d6:	f8 94       	cli

000011d8 <__stop_program>:
    11d8:	ff cf       	rjmp	.-2      	; 0x11d8 <__stop_program>
