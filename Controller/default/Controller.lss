
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001252  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00001252  000012e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000018  00800168  00800168  000013ee  2**0
                  ALLOC
  3 .debug_aranges 000001c0  00000000  00000000  000013ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000003ed  00000000  00000000  000015ae  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002991  00000000  00000000  0000199b  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001569  00000000  00000000  0000432c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001907  00000000  00000000  00005895  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000350  00000000  00000000  0000719c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000051f  00000000  00000000  000074ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b2d  00000000  00000000  00007a0b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00008538  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b1 e0       	ldi	r27, 0x01	; 1
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	a0 38       	cpi	r26, 0x80	; 128
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	11 e0       	ldi	r17, 0x01	; 1
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	e2 e5       	ldi	r30, 0x52	; 82
      78:	f2 e1       	ldi	r31, 0x12	; 18
      7a:	02 c0       	rjmp	.+4      	; 0x80 <.do_copy_data_start>

0000007c <.do_copy_data_loop>:
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0

00000080 <.do_copy_data_start>:
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <.do_copy_data_loop>
      86:	0e 94 6c 01 	call	0x2d8	; 0x2d8 <main>
      8a:	0c 94 27 09 	jmp	0x124e	; 0x124e <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <playBack>:
	midiTransitTest();
}

void playBack(){
	//
}
      92:	08 95       	ret

00000094 <modify>:


void modify(){
	//analogLEDTest();
}
      94:	08 95       	ret

00000096 <setupMIDI>:


/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
      96:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) baudrate;
      98:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
      9a:	88 e1       	ldi	r24, 0x18	; 24
      9c:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
      9e:	86 e8       	ldi	r24, 0x86	; 134
      a0:	80 bd       	out	0x20, r24	; 32
}
      a2:	08 95       	ret

000000a4 <setupPins>:
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
      a4:	8f ef       	ldi	r24, 0xFF	; 255
      a6:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
      a8:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
      aa:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
      ac:	87 e0       	ldi	r24, 0x07	; 7
      ae:	8b bb       	out	0x1b, r24	; 27
	DDRD = 0x00;
      b0:	11 ba       	out	0x11, r1	; 17
}
      b2:	08 95       	ret

000000b4 <setupAnalog>:
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
      b4:	87 e4       	ldi	r24, 0x47	; 71
      b6:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
      b8:	87 e8       	ldi	r24, 0x87	; 135
      ba:	86 b9       	out	0x06, r24	; 6
}
      bc:	08 95       	ret

000000be <setupTimer>:
void setupTimer(){
	TCCR1A = 0x00; // enable normal mode interrupts
      be:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = (1 << CS10) | (1 << CS12); //prescaler 1024
      c0:	85 e0       	ldi	r24, 0x05	; 5
      c2:	8e bd       	out	0x2e, r24	; 46
	TIMSK = (1 << OCIE1B);
      c4:	88 e0       	ldi	r24, 0x08	; 8
      c6:	89 bf       	out	0x39, r24	; 57
	sei();
      c8:	78 94       	sei
	OCR1A = 3906; // 1000ms delay  equation = (500*10^-3/(1/3906.25));
      ca:	82 e4       	ldi	r24, 0x42	; 66
      cc:	9f e0       	ldi	r25, 0x0F	; 15
      ce:	9b bd       	out	0x2b, r25	; 43
      d0:	8a bd       	out	0x2a, r24	; 42
	OCR1B = 1952; // 500ms Delay (note this causes the leds to turn off after button press)
      d2:	80 ea       	ldi	r24, 0xA0	; 160
      d4:	97 e0       	ldi	r25, 0x07	; 7
      d6:	99 bd       	out	0x29, r25	; 41
      d8:	88 bd       	out	0x28, r24	; 40
	TCNT1 = 0;
      da:	1d bc       	out	0x2d, r1	; 45
      dc:	1c bc       	out	0x2c, r1	; 44

}
      de:	08 95       	ret

000000e0 <playTimer>:
	}
	
}

void playTimer(){
	while((TIFR & (1<<OCF1A)) == 0);// wait till the timer overflow flag is SET
      e0:	08 b6       	in	r0, 0x38	; 56
      e2:	04 fe       	sbrs	r0, 4
      e4:	fd cf       	rjmp	.-6      	; 0xe0 <playTimer>
		PORTB ^= 0xFF;
      e6:	88 b3       	in	r24, 0x18	; 24
      e8:	80 95       	com	r24
      ea:	88 bb       	out	0x18, r24	; 24
		TCNT1 = 0; 
      ec:	1d bc       	out	0x2d, r1	; 45
      ee:	1c bc       	out	0x2c, r1	; 44
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
      f0:	88 b7       	in	r24, 0x38	; 56
      f2:	80 61       	ori	r24, 0x10	; 16
      f4:	88 bf       	out	0x38, r24	; 56
}
      f6:	08 95       	ret

000000f8 <wait>:
	_delay_ms(1000);
}


void wait(int time)
{
      f8:	af 92       	push	r10
      fa:	bf 92       	push	r11
      fc:	cf 92       	push	r12
      fe:	df 92       	push	r13
     100:	ef 92       	push	r14
     102:	ff 92       	push	r15
     104:	0f 93       	push	r16
     106:	1f 93       	push	r17
   _delay_ms(time);
     108:	aa 27       	eor	r26, r26
     10a:	97 fd       	sbrc	r25, 7
     10c:	a0 95       	com	r26
     10e:	ba 2f       	mov	r27, r26
     110:	bc 01       	movw	r22, r24
     112:	cd 01       	movw	r24, r26
     114:	0e 94 d0 05 	call	0xba0	; 0xba0 <__floatsisf>
     118:	5b 01       	movw	r10, r22
     11a:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     11c:	20 e0       	ldi	r18, 0x00	; 0
     11e:	30 e0       	ldi	r19, 0x00	; 0
     120:	4a e7       	ldi	r20, 0x7A	; 122
     122:	53 e4       	ldi	r21, 0x43	; 67
     124:	0e 94 46 04 	call	0x88c	; 0x88c <__mulsf3>
     128:	7b 01       	movw	r14, r22
     12a:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     12c:	20 e0       	ldi	r18, 0x00	; 0
     12e:	30 e0       	ldi	r19, 0x00	; 0
     130:	40 e8       	ldi	r20, 0x80	; 128
     132:	5f e3       	ldi	r21, 0x3F	; 63
     134:	0e 94 a0 05 	call	0xb40	; 0xb40 <__ltsf2>
     138:	88 23       	and	r24, r24
     13a:	1c f4       	brge	.+6      	; 0x142 <wait+0x4a>
     13c:	61 e0       	ldi	r22, 0x01	; 1
     13e:	70 e0       	ldi	r23, 0x00	; 0
     140:	24 c0       	rjmp	.+72     	; 0x18a <wait+0x92>
		__ticks = 1;
	else if (__tmp > 65535)
     142:	c8 01       	movw	r24, r16
     144:	b7 01       	movw	r22, r14
     146:	20 e0       	ldi	r18, 0x00	; 0
     148:	3f ef       	ldi	r19, 0xFF	; 255
     14a:	4f e7       	ldi	r20, 0x7F	; 127
     14c:	57 e4       	ldi	r21, 0x47	; 71
     14e:	0e 94 40 05 	call	0xa80	; 0xa80 <__gtsf2>
     152:	18 16       	cp	r1, r24
     154:	b4 f4       	brge	.+44     	; 0x182 <wait+0x8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     156:	c6 01       	movw	r24, r12
     158:	b5 01       	movw	r22, r10
     15a:	20 e0       	ldi	r18, 0x00	; 0
     15c:	30 e0       	ldi	r19, 0x00	; 0
     15e:	40 e2       	ldi	r20, 0x20	; 32
     160:	51 e4       	ldi	r21, 0x41	; 65
     162:	0e 94 46 04 	call	0x88c	; 0x88c <__mulsf3>
     166:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fixunssfsi>
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     16a:	89 e1       	ldi	r24, 0x19	; 25
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	05 c0       	rjmp	.+10     	; 0x17a <wait+0x82>
     170:	fc 01       	movw	r30, r24
     172:	31 97       	sbiw	r30, 0x01	; 1
     174:	f1 f7       	brne	.-4      	; 0x172 <wait+0x7a>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     176:	61 50       	subi	r22, 0x01	; 1
     178:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     17a:	61 15       	cp	r22, r1
     17c:	71 05       	cpc	r23, r1
     17e:	c1 f7       	brne	.-16     	; 0x170 <wait+0x78>
     180:	07 c0       	rjmp	.+14     	; 0x190 <wait+0x98>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     182:	c8 01       	movw	r24, r16
     184:	b7 01       	movw	r22, r14
     186:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fixunssfsi>
     18a:	cb 01       	movw	r24, r22
     18c:	01 97       	sbiw	r24, 0x01	; 1
     18e:	f1 f7       	brne	.-4      	; 0x18c <wait+0x94>
}
     190:	1f 91       	pop	r17
     192:	0f 91       	pop	r16
     194:	ff 90       	pop	r15
     196:	ef 90       	pop	r14
     198:	df 90       	pop	r13
     19a:	cf 90       	pop	r12
     19c:	bf 90       	pop	r11
     19e:	af 90       	pop	r10
     1a0:	08 95       	ret

000001a2 <ledOFF>:

void ledOFF(){
	PORTB = 0x00;
     1a2:	18 ba       	out	0x18, r1	; 24
}
     1a4:	08 95       	ret

000001a6 <ReadADC>:

uint16_t ReadADC(){
	//Start a single conversion
	ADCSRA |= (1 << ADSC);
     1a6:	36 9a       	sbi	0x06, 6	; 6
	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
     1a8:	34 9b       	sbis	0x06, 4	; 6
     1aa:	fe cf       	rjmp	.-4      	; 0x1a8 <ReadADC+0x2>
	//clear data (conversion is complete)
	ADCSRA |= (1 << ADIF);
     1ac:	34 9a       	sbi	0x06, 4	; 6
	return(ADC);
     1ae:	24 b1       	in	r18, 0x04	; 4
     1b0:	35 b1       	in	r19, 0x05	; 5
}
     1b2:	c9 01       	movw	r24, r18
     1b4:	08 95       	ret

000001b6 <analogLEDTest>:

void analogLEDTest(){
		adc_value = ReadADC();
     1b6:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <ReadADC>
     1ba:	9c 01       	movw	r18, r24
     1bc:	90 93 77 01 	sts	0x0177, r25
     1c0:	80 93 76 01 	sts	0x0176, r24
		if (adc_value > 30){
     1c4:	8f 31       	cpi	r24, 0x1F	; 31
     1c6:	91 05       	cpc	r25, r1
     1c8:	28 f1       	brcs	.+74     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB0);
     1ca:	81 e0       	ldi	r24, 0x01	; 1
     1cc:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 60){
     1ce:	2d 33       	cpi	r18, 0x3D	; 61
     1d0:	31 05       	cpc	r19, r1
     1d2:	00 f1       	brcs	.+64     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB1);
     1d4:	82 e0       	ldi	r24, 0x02	; 2
     1d6:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 90){
     1d8:	2b 35       	cpi	r18, 0x5B	; 91
     1da:	31 05       	cpc	r19, r1
     1dc:	d8 f0       	brcs	.+54     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB2);
     1de:	84 e0       	ldi	r24, 0x04	; 4
     1e0:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 120){
     1e2:	29 37       	cpi	r18, 0x79	; 121
     1e4:	31 05       	cpc	r19, r1
     1e6:	b0 f0       	brcs	.+44     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB3);
     1e8:	88 e0       	ldi	r24, 0x08	; 8
     1ea:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 150){
     1ec:	27 39       	cpi	r18, 0x97	; 151
     1ee:	31 05       	cpc	r19, r1
     1f0:	88 f0       	brcs	.+34     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB4);
     1f2:	80 e1       	ldi	r24, 0x10	; 16
     1f4:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 180){
     1f6:	25 3b       	cpi	r18, 0xB5	; 181
     1f8:	31 05       	cpc	r19, r1
     1fa:	60 f0       	brcs	.+24     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB5);
     1fc:	80 e2       	ldi	r24, 0x20	; 32
     1fe:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 210){
     200:	23 3d       	cpi	r18, 0xD3	; 211
     202:	31 05       	cpc	r19, r1
     204:	38 f0       	brcs	.+14     	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB6);
     206:	80 e4       	ldi	r24, 0x40	; 64
     208:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value > 240){
     20a:	21 3f       	cpi	r18, 0xF1	; 241
     20c:	31 05       	cpc	r19, r1
     20e:	10 f0       	brcs	.+4      	; 0x214 <analogLEDTest+0x5e>
			PORTB = (1 << PORTB7);
     210:	80 e8       	ldi	r24, 0x80	; 128
     212:	88 bb       	out	0x18, r24	; 24
		}
		if (adc_value >= 240){
     214:	20 3f       	cpi	r18, 0xF0	; 240
     216:	31 05       	cpc	r19, r1
     218:	10 f0       	brcs	.+4      	; 0x21e <analogLEDTest+0x68>
			PORTB = 0xFF;
     21a:	8f ef       	ldi	r24, 0xFF	; 255
     21c:	88 bb       	out	0x18, r24	; 24
     21e:	08 95       	ret

00000220 <midi_Transmit>:
		}
	}

void midi_Transmit( unsigned char data){
	/* Wait for empty transmit buffer */
	while(!(UCSRA & (1 << UDRE)) ) ;
     220:	5d 9b       	sbis	0x0b, 5	; 11
     222:	fe cf       	rjmp	.-4      	; 0x220 <midi_Transmit>

	/* Put data into buffer, sends the data */
	UDR = data;
     224:	8c b9       	out	0x0c, r24	; 12
}
     226:	08 95       	ret

00000228 <midiTransitTest>:

}

void midiTransitTest(){
	
	midi_Transmit(144);
     228:	80 e9       	ldi	r24, 0x90	; 144
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	
	midi_Transmit(66);
     230:	82 e4       	ldi	r24, 0x42	; 66
     232:	90 e0       	ldi	r25, 0x00	; 0
     234:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	
	midi_Transmit(111);
     238:	8f e6       	ldi	r24, 0x6F	; 111
     23a:	90 e0       	ldi	r25, 0x00	; 0
     23c:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
     240:	88 e8       	ldi	r24, 0x88	; 136
     242:	93 e1       	ldi	r25, 0x13	; 19
     244:	29 e1       	ldi	r18, 0x19	; 25
     246:	30 e0       	ldi	r19, 0x00	; 0
     248:	f9 01       	movw	r30, r18
     24a:	31 97       	sbiw	r30, 0x01	; 1
     24c:	f1 f7       	brne	.-4      	; 0x24a <midiTransitTest+0x22>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     24e:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     250:	d9 f7       	brne	.-10     	; 0x248 <midiTransitTest+0x20>
	_delay_ms(500);
	midi_Transmit(128);
     252:	80 e8       	ldi	r24, 0x80	; 128
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	
	midi_Transmit(66);
     25a:	82 e4       	ldi	r24, 0x42	; 66
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	
	midi_Transmit(111);
     262:	8f e6       	ldi	r24, 0x6F	; 111
     264:	90 e0       	ldi	r25, 0x00	; 0
     266:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
     26a:	88 e8       	ldi	r24, 0x88	; 136
     26c:	93 e1       	ldi	r25, 0x13	; 19
     26e:	29 e1       	ldi	r18, 0x19	; 25
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	f9 01       	movw	r30, r18
     274:	31 97       	sbiw	r30, 0x01	; 1
     276:	f1 f7       	brne	.-4      	; 0x274 <midiTransitTest+0x4c>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     278:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     27a:	d9 f7       	brne	.-10     	; 0x272 <midiTransitTest+0x4a>
	_delay_ms(500);

	midi_Transmit(144);
     27c:	80 e9       	ldi	r24, 0x90	; 144
     27e:	90 e0       	ldi	r25, 0x00	; 0
     280:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	midi_Transmit(86);
     284:	86 e5       	ldi	r24, 0x56	; 86
     286:	90 e0       	ldi	r25, 0x00	; 0
     288:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	midi_Transmit(101);
     28c:	85 e6       	ldi	r24, 0x65	; 101
     28e:	90 e0       	ldi	r25, 0x00	; 0
     290:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
     294:	80 e1       	ldi	r24, 0x10	; 16
     296:	97 e2       	ldi	r25, 0x27	; 39
     298:	29 e1       	ldi	r18, 0x19	; 25
     29a:	30 e0       	ldi	r19, 0x00	; 0
     29c:	f9 01       	movw	r30, r18
     29e:	31 97       	sbiw	r30, 0x01	; 1
     2a0:	f1 f7       	brne	.-4      	; 0x29e <midiTransitTest+0x76>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2a2:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2a4:	d9 f7       	brne	.-10     	; 0x29c <midiTransitTest+0x74>
	_delay_ms(1000);
	midi_Transmit(128);
     2a6:	80 e8       	ldi	r24, 0x80	; 128
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	midi_Transmit(86);
     2ae:	86 e5       	ldi	r24, 0x56	; 86
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
	midi_Transmit(101);
     2b6:	85 e6       	ldi	r24, 0x65	; 101
     2b8:	90 e0       	ldi	r25, 0x00	; 0
     2ba:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
     2be:	80 e1       	ldi	r24, 0x10	; 16
     2c0:	97 e2       	ldi	r25, 0x27	; 39
     2c2:	29 e1       	ldi	r18, 0x19	; 25
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	f9 01       	movw	r30, r18
     2c8:	31 97       	sbiw	r30, 0x01	; 1
     2ca:	f1 f7       	brne	.-4      	; 0x2c8 <midiTransitTest+0xa0>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     2cc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2ce:	d9 f7       	brne	.-10     	; 0x2c6 <midiTransitTest+0x9e>
	_delay_ms(1000);
}
     2d0:	08 95       	ret

000002d2 <record>:
}
/***** Main Methods *****/

void record(){
	 //writeSong2();
	midiTransitTest();
     2d2:	0e 94 14 01 	call	0x228	; 0x228 <midiTransitTest>
}
     2d6:	08 95       	ret

000002d8 <main>:
void playSong();
void playSong2();


/***** Main Loop *****/
int main(void){
     2d8:	1f 93       	push	r17
	UBRRL = (unsigned char) baudrate;
	UCSRB = (1 << TXEN) | (1 << RXEN);
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
}
void setupPins(){
	DDRB = 0xFF;  //Set outp1ts
     2da:	8f ef       	ldi	r24, 0xFF	; 255
     2dc:	87 bb       	out	0x17, r24	; 23
	DDRA = 0x00;  //Set inputs
     2de:	1a ba       	out	0x1a, r1	; 26
	PORTB = 0x00; //Turns all leds off
     2e0:	18 ba       	out	0x18, r1	; 24
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
     2e2:	17 e0       	ldi	r17, 0x07	; 7
     2e4:	1b bb       	out	0x1b, r17	; 27
	DDRD = 0x00;
     2e6:	11 ba       	out	0x11, r1	; 17


/***** Main Loop *****/
int main(void){
   setupPins();
   setupTimer();
     2e8:	0e 94 5f 00 	call	0xbe	; 0xbe <setupTimer>
	PORTB = 0x00; //Turns all leds off
	PORTA = 0x07; // sets inputs to return 5v on PA0, PA1, PA2
	DDRD = 0x00;
}
void setupAnalog(){
	ADMUX = (1 << REFS0) | (1<< MUX0) | (1<< MUX1) | (1<< MUX2); // sets the analog input of the photosensor to 0-5v, sets to look at the 7th analog pin.
     2ec:	87 e4       	ldi	r24, 0x47	; 71
     2ee:	87 b9       	out	0x07, r24	; 7
	ADCSRA =  (1 << ADEN) | (1<< ADPS2) | (1<< ADPS1) | (1<< ADPS0); // ADEN turns ADC on; ADPS sets prescaler to 128;
     2f0:	87 e8       	ldi	r24, 0x87	; 135
     2f2:	86 b9       	out	0x06, r24	; 6


/***** Setup Methods *****/

void setupMIDI(unsigned int baudrate){
	UBRRH = (unsigned char) (baudrate >> 8);
     2f4:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) baudrate;
     2f6:	19 b9       	out	0x09, r17	; 9
	UCSRB = (1 << TXEN) | (1 << RXEN);
     2f8:	88 e1       	ldi	r24, 0x18	; 24
     2fa:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL )|(0 << USBS) | (3 << UCSZ0); //only use 8 bit words
     2fc:	86 e8       	ldi	r24, 0x86	; 134
     2fe:	80 bd       	out	0x20, r24	; 32
   setupTimer();
   setupAnalog();
   setupMIDI(BUAD_PRESCALE);

    while(1){
		uint8_t rec = PINA & 0x04;
     300:	89 b3       	in	r24, 0x19	; 25
		uint8_t play = PINA & 0x02;
     302:	99 b3       	in	r25, 0x19	; 25
		uint8_t mod = PINA & 0x01;
     304:	29 b3       	in	r18, 0x19	; 25
	
		if(rec && !play){
     306:	82 ff       	sbrs	r24, 2
     308:	fb cf       	rjmp	.-10     	; 0x300 <main+0x28>
     30a:	91 fd       	sbrc	r25, 1
     30c:	f9 cf       	rjmp	.-14     	; 0x300 <main+0x28>
}
/***** Main Methods *****/

void record(){
	 //writeSong2();
	midiTransitTest();
     30e:	0e 94 14 01 	call	0x228	; 0x228 <midiTransitTest>
     312:	f6 cf       	rjmp	.-20     	; 0x300 <main+0x28>

00000314 <playSong>:

/***** Create Methods *****/



void playSong(){
     314:	8f 92       	push	r8
     316:	9f 92       	push	r9
     318:	af 92       	push	r10
     31a:	bf 92       	push	r11
     31c:	cf 92       	push	r12
     31e:	df 92       	push	r13
     320:	ef 92       	push	r14
     322:	ff 92       	push	r15
     324:	0f 93       	push	r16
     326:	1f 93       	push	r17
     328:	cf 93       	push	r28
     32a:	df 93       	push	r29
	eeprom_address= 0x00;
     32c:	10 92 73 01 	sts	0x0173, r1
     330:	10 92 72 01 	sts	0x0172, r1
     334:	89 e1       	ldi	r24, 0x19	; 25
     336:	88 2e       	mov	r8, r24
     338:	91 2c       	mov	r9, r1
     33a:	63 c0       	rjmp	.+198    	; 0x402 <playSong+0xee>
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     33c:	e1 99       	sbic	0x1c, 1	; 28
     33e:	fe cf       	rjmp	.-4      	; 0x33c <playSong+0x28>
	/* Set up address register */
	EEAR = uiAddress;
     340:	3f bb       	out	0x1f, r19	; 31
     342:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     344:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     346:	8d b3       	in	r24, 0x1d	; 29


void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
     348:	88 bb       	out	0x18, r24	; 24
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     34a:	e1 99       	sbic	0x1c, 1	; 28
     34c:	fe cf       	rjmp	.-4      	; 0x34a <playSong+0x36>
	/* Set up address register */
	EEAR = uiAddress;
     34e:	3f bb       	out	0x1f, r19	; 31
     350:	2e bb       	out	0x1e, r18	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     352:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     354:	8d b3       	in	r24, 0x1d	; 29

void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
     356:	90 e0       	ldi	r25, 0x00	; 0
     358:	0e 94 10 01 	call	0x220	; 0x220 <midi_Transmit>
		eeprom_address++;
     35c:	c0 91 72 01 	lds	r28, 0x0172
     360:	d0 91 73 01 	lds	r29, 0x0173
     364:	21 96       	adiw	r28, 0x01	; 1
     366:	d0 93 73 01 	sts	0x0173, r29
     36a:	c0 93 72 01 	sts	0x0172, r28
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     36e:	e1 99       	sbic	0x1c, 1	; 28
     370:	fe cf       	rjmp	.-4      	; 0x36e <playSong+0x5a>
	/* Set up address register */
	EEAR = uiAddress;
     372:	df bb       	out	0x1f, r29	; 31
     374:	ce bb       	out	0x1e, r28	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     376:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     378:	6d b3       	in	r22, 0x1d	; 29
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
		PORTB = EEPROM_read(eeprom_address);
		midi_Transmit(EEPROM_read(eeprom_address));
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	80 e0       	ldi	r24, 0x00	; 0
     37e:	90 e0       	ldi	r25, 0x00	; 0
     380:	0e 94 82 06 	call	0xd04	; 0xd04 <__floatunsisf>
     384:	5b 01       	movw	r10, r22
     386:	6c 01       	movw	r12, r24
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     388:	20 e0       	ldi	r18, 0x00	; 0
     38a:	30 e0       	ldi	r19, 0x00	; 0
     38c:	4a e7       	ldi	r20, 0x7A	; 122
     38e:	53 e4       	ldi	r21, 0x43	; 67
     390:	0e 94 46 04 	call	0x88c	; 0x88c <__mulsf3>
     394:	7b 01       	movw	r14, r22
     396:	8c 01       	movw	r16, r24
	if (__tmp < 1.0)
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	40 e8       	ldi	r20, 0x80	; 128
     39e:	5f e3       	ldi	r21, 0x3F	; 63
     3a0:	0e 94 a0 05 	call	0xb40	; 0xb40 <__ltsf2>
     3a4:	88 23       	and	r24, r24
     3a6:	1c f4       	brge	.+6      	; 0x3ae <playSong+0x9a>
     3a8:	61 e0       	ldi	r22, 0x01	; 1
     3aa:	70 e0       	ldi	r23, 0x00	; 0
     3ac:	22 c0       	rjmp	.+68     	; 0x3f2 <playSong+0xde>
		__ticks = 1;
	else if (__tmp > 65535)
     3ae:	c8 01       	movw	r24, r16
     3b0:	b7 01       	movw	r22, r14
     3b2:	20 e0       	ldi	r18, 0x00	; 0
     3b4:	3f ef       	ldi	r19, 0xFF	; 255
     3b6:	4f e7       	ldi	r20, 0x7F	; 127
     3b8:	57 e4       	ldi	r21, 0x47	; 71
     3ba:	0e 94 40 05 	call	0xa80	; 0xa80 <__gtsf2>
     3be:	18 16       	cp	r1, r24
     3c0:	a4 f4       	brge	.+40     	; 0x3ea <playSong+0xd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3c2:	c6 01       	movw	r24, r12
     3c4:	b5 01       	movw	r22, r10
     3c6:	20 e0       	ldi	r18, 0x00	; 0
     3c8:	30 e0       	ldi	r19, 0x00	; 0
     3ca:	40 e2       	ldi	r20, 0x20	; 32
     3cc:	51 e4       	ldi	r21, 0x41	; 65
     3ce:	0e 94 46 04 	call	0x88c	; 0x88c <__mulsf3>
     3d2:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fixunssfsi>
     3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <playSong+0xce>
     3d8:	c4 01       	movw	r24, r8
     3da:	01 97       	sbiw	r24, 0x01	; 1
     3dc:	f1 f7       	brne	.-4      	; 0x3da <playSong+0xc6>
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3de:	61 50       	subi	r22, 0x01	; 1
     3e0:	70 40       	sbci	r23, 0x00	; 0
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3e2:	61 15       	cp	r22, r1
     3e4:	71 05       	cpc	r23, r1
     3e6:	c1 f7       	brne	.-16     	; 0x3d8 <playSong+0xc4>
     3e8:	07 c0       	rjmp	.+14     	; 0x3f8 <playSong+0xe4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ea:	c8 01       	movw	r24, r16
     3ec:	b7 01       	movw	r22, r14
     3ee:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fixunssfsi>
     3f2:	cb 01       	movw	r24, r22
     3f4:	01 97       	sbiw	r24, 0x01	; 1
     3f6:	f1 f7       	brne	.-4      	; 0x3f4 <playSong+0xe0>
		eeprom_address++;
     3f8:	21 96       	adiw	r28, 0x01	; 1
     3fa:	d0 93 73 01 	sts	0x0173, r29
     3fe:	c0 93 72 01 	sts	0x0172, r28



void playSong(){
	eeprom_address= 0x00;
	while(eeprom_address < stop_addr){
     402:	20 91 72 01 	lds	r18, 0x0172
     406:	30 91 73 01 	lds	r19, 0x0173
     40a:	80 91 74 01 	lds	r24, 0x0174
     40e:	90 91 75 01 	lds	r25, 0x0175
     412:	28 17       	cp	r18, r24
     414:	39 07       	cpc	r19, r25
     416:	08 f4       	brcc	.+2      	; 0x41a <playSong+0x106>
     418:	91 cf       	rjmp	.-222    	; 0x33c <playSong+0x28>
		eeprom_address++;
		_delay_ms(EEPROM_read(eeprom_address));
		eeprom_address++;
	}
	
}
     41a:	df 91       	pop	r29
     41c:	cf 91       	pop	r28
     41e:	1f 91       	pop	r17
     420:	0f 91       	pop	r16
     422:	ff 90       	pop	r15
     424:	ef 90       	pop	r14
     426:	df 90       	pop	r13
     428:	cf 90       	pop	r12
     42a:	bf 90       	pop	r11
     42c:	af 90       	pop	r10
     42e:	9f 90       	pop	r9
     430:	8f 90       	pop	r8
     432:	08 95       	ret

00000434 <midi_Receive>:
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     434:	5f 9b       	sbis	0x0b, 7	; 11
     436:	fe cf       	rjmp	.-4      	; 0x434 <midi_Receive>

	/* get and return data from buffer */
	return UDR;
     438:	8c b1       	in	r24, 0x0c	; 12
}
     43a:	08 95       	ret

0000043c <midi_Flush>:

/* flushs the buffer of the midi */
void midi_Flush(void){ 
     43c:	01 c0       	rjmp	.+2      	; 0x440 <midi_Flush+0x4>
	unsigned char dummy;
	while (UCSRA & (1 << RXC) ) dummy = UDR;
     43e:	8c b1       	in	r24, 0x0c	; 12
     440:	5f 99       	sbic	0x0b, 7	; 11
     442:	fd cf       	rjmp	.-6      	; 0x43e <midi_Flush+0x2>
}
     444:	08 95       	ret

00000446 <midi_ReadUCSRC>:

unsigned char midi_ReadUCSRC(void){
	unsigned char ucsrc;
	/* read UCSRC */
	//note may need cli() to disable interrupts
	ucsrc = UBRRH;
     446:	80 b5       	in	r24, 0x20	; 32
	ucsrc = UCSRC;
     448:	80 b5       	in	r24, 0x20	; 32
	return ucsrc;
}
     44a:	08 95       	ret

0000044c <TIM16_ReadTCNT1>:

unsigned char TIM16_ReadTCNT1(void){
	unsigned char sreg;
	unsigned char i;
	/* save gloval interrupt flag */
	sreg = SREG;
     44c:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     44e:	f8 94       	cli
	/* read TCNT1 into i */
	i = TCNT1;
     450:	8c b5       	in	r24, 0x2c	; 44
     452:	9d b5       	in	r25, 0x2d	; 45
	/* restore global interrupt flag */
	SREG = sreg;
     454:	2f bf       	out	0x3f, r18	; 63
	return i;
}
     456:	08 95       	ret

00000458 <TIM16_WriteTCNT1>:

void TIM16_WriteTCNT1 (unsigned int i){
	unsigned char sreg;
	/* save global interrupt flag */
	sreg = SREG;
     458:	2f b7       	in	r18, 0x3f	; 63
	/* disable interrupts */
	cli();
     45a:	f8 94       	cli
	/* set tcnt1 to i */
	TCNT1 = i;
     45c:	9d bd       	out	0x2d, r25	; 45
     45e:	8c bd       	out	0x2c, r24	; 44
	/* restore global interrupt flag */
	SREG = sreg;
     460:	2f bf       	out	0x3f, r18	; 63
}
     462:	08 95       	ret

00000464 <EEPROM_write>:

void EEPROM_write(unsigned int uiAddress, unsigned char ucData){
	/* wait for completion of previous write */
	while (EECR & (1 <<EEWE));
     464:	e1 99       	sbic	0x1c, 1	; 28
     466:	fe cf       	rjmp	.-4      	; 0x464 <EEPROM_write>

	/* Set up address and data registers */
	EEAR = uiAddress;
     468:	9f bb       	out	0x1f, r25	; 31
     46a:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
     46c:	6d bb       	out	0x1d, r22	; 29
	/* Write logical one to EEMWE */
	EECR |= (1 << EEMWE);
     46e:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeporm write by setting EEWE */
	EECR |= (1 << EEWE);
     470:	e1 9a       	sbi	0x1c, 1	; 28
}
     472:	08 95       	ret

00000474 <writeSong2>:
		PORTB ^= 0xFF;
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
     474:	cf 93       	push	r28
     476:	df 93       	push	r29
     478:	c8 e7       	ldi	r28, 0x78	; 120
     47a:	d1 e0       	ldi	r29, 0x01	; 1
     47c:	fe 01       	movw	r30, r28
	UDR = data;
}

unsigned char midi_Receive(void){
	/* Wait for data to be recieved */
	while(!(UCSRA & (1<<RXC)));
     47e:	5f 9b       	sbis	0x0b, 7	; 11
     480:	fe cf       	rjmp	.-4      	; 0x47e <writeSong2+0xa>

	/* get and return data from buffer */
	return UDR;
     482:	8c b1       	in	r24, 0x0c	; 12
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
		midiData[i] = midi_Receive();
     484:	81 93       	st	Z+, r24
		TCNT1 = 0; 
		TIFR |= (1<<OCF1A) ; //clear timer1 overflow flag
}

void writeSong2(){
for(int i =0; i <6; i++){
     486:	81 e0       	ldi	r24, 0x01	; 1
     488:	ee 37       	cpi	r30, 0x7E	; 126
     48a:	f8 07       	cpc	r31, r24
     48c:	c1 f7       	brne	.-16     	; 0x47e <writeSong2+0xa>
		midiData[i] = midi_Receive();
	}

	PORTB = midiData[1];
     48e:	80 91 79 01 	lds	r24, 0x0179
     492:	88 bb       	out	0x18, r24	; 24
	TCNT1 = 0;
     494:	1d bc       	out	0x2d, r1	; 45
     496:	1c bc       	out	0x2c, r1	; 44

	midiData[6] = (TCNT1 >> 8);
     498:	8c b5       	in	r24, 0x2c	; 44
     49a:	9d b5       	in	r25, 0x2d	; 45
     49c:	90 83       	st	Z, r25
	midiData[7] = (TCNT1 & 0xFF);
     49e:	8c b5       	in	r24, 0x2c	; 44
     4a0:	9d b5       	in	r25, 0x2d	; 45
     4a2:	81 83       	std	Z+1, r24	; 0x01

	for(int j= 0; j <6; j++){
		EEPROM_write(eeprom_address, midiData[j]);
     4a4:	80 91 72 01 	lds	r24, 0x0172
     4a8:	90 91 73 01 	lds	r25, 0x0173
     4ac:	69 91       	ld	r22, Y+
     4ae:	0e 94 32 02 	call	0x464	; 0x464 <EEPROM_write>
		eeprom_address++;		
     4b2:	80 91 72 01 	lds	r24, 0x0172
     4b6:	90 91 73 01 	lds	r25, 0x0173
     4ba:	01 96       	adiw	r24, 0x01	; 1
     4bc:	90 93 73 01 	sts	0x0173, r25
     4c0:	80 93 72 01 	sts	0x0172, r24
	TCNT1 = 0;

	midiData[6] = (TCNT1 >> 8);
	midiData[7] = (TCNT1 & 0xFF);

	for(int j= 0; j <6; j++){
     4c4:	81 e0       	ldi	r24, 0x01	; 1
     4c6:	ce 37       	cpi	r28, 0x7E	; 126
     4c8:	d8 07       	cpc	r29, r24
     4ca:	61 f7       	brne	.-40     	; 0x4a4 <writeSong2+0x30>
		EEPROM_write(eeprom_address, midiData[j]);
		eeprom_address++;		
	}	

}
     4cc:	df 91       	pop	r29
     4ce:	cf 91       	pop	r28
     4d0:	08 95       	ret

000004d2 <EEPROM_read>:
	EECR |= (1 << EEWE);
}

unsigned char EEPROM_read(unsigned int uiAddress){
	/* wait for completion of previous write */
	while(EECR & (1<< EEWE));
     4d2:	e1 99       	sbic	0x1c, 1	; 28
     4d4:	fe cf       	rjmp	.-4      	; 0x4d2 <EEPROM_read>
	/* Set up address register */
	EEAR = uiAddress;
     4d6:	9f bb       	out	0x1f, r25	; 31
     4d8:	8e bb       	out	0x1e, r24	; 30
	/* Start eeprom read by writing EERE */
	EECR |= (1<< EERE);
     4da:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
     4dc:	8d b3       	in	r24, 0x1d	; 29
}
     4de:	08 95       	ret

000004e0 <__fixunssfsi>:
     4e0:	ef 92       	push	r14
     4e2:	ff 92       	push	r15
     4e4:	0f 93       	push	r16
     4e6:	1f 93       	push	r17
     4e8:	7b 01       	movw	r14, r22
     4ea:	8c 01       	movw	r16, r24
     4ec:	20 e0       	ldi	r18, 0x00	; 0
     4ee:	30 e0       	ldi	r19, 0x00	; 0
     4f0:	40 e0       	ldi	r20, 0x00	; 0
     4f2:	5f e4       	ldi	r21, 0x4F	; 79
     4f4:	0e 94 70 05 	call	0xae0	; 0xae0 <__gesf2>
     4f8:	88 23       	and	r24, r24
     4fa:	8c f0       	brlt	.+34     	; 0x51e <__fixunssfsi+0x3e>
     4fc:	c8 01       	movw	r24, r16
     4fe:	b7 01       	movw	r22, r14
     500:	20 e0       	ldi	r18, 0x00	; 0
     502:	30 e0       	ldi	r19, 0x00	; 0
     504:	40 e0       	ldi	r20, 0x00	; 0
     506:	5f e4       	ldi	r21, 0x4F	; 79
     508:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <__subsf3>
     50c:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixsfsi>
     510:	9b 01       	movw	r18, r22
     512:	ac 01       	movw	r20, r24
     514:	20 50       	subi	r18, 0x00	; 0
     516:	30 40       	sbci	r19, 0x00	; 0
     518:	40 40       	sbci	r20, 0x00	; 0
     51a:	50 48       	sbci	r21, 0x80	; 128
     51c:	06 c0       	rjmp	.+12     	; 0x52a <__fixunssfsi+0x4a>
     51e:	c8 01       	movw	r24, r16
     520:	b7 01       	movw	r22, r14
     522:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fixsfsi>
     526:	9b 01       	movw	r18, r22
     528:	ac 01       	movw	r20, r24
     52a:	b9 01       	movw	r22, r18
     52c:	ca 01       	movw	r24, r20
     52e:	1f 91       	pop	r17
     530:	0f 91       	pop	r16
     532:	ff 90       	pop	r15
     534:	ef 90       	pop	r14
     536:	08 95       	ret

00000538 <_fpadd_parts>:
     538:	a0 e0       	ldi	r26, 0x00	; 0
     53a:	b0 e0       	ldi	r27, 0x00	; 0
     53c:	e2 ea       	ldi	r30, 0xA2	; 162
     53e:	f2 e0       	ldi	r31, 0x02	; 2
     540:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <__prologue_saves__>
     544:	dc 01       	movw	r26, r24
     546:	2b 01       	movw	r4, r22
     548:	fa 01       	movw	r30, r20
     54a:	9c 91       	ld	r25, X
     54c:	92 30       	cpi	r25, 0x02	; 2
     54e:	08 f4       	brcc	.+2      	; 0x552 <_fpadd_parts+0x1a>
     550:	39 c1       	rjmp	.+626    	; 0x7c4 <_fpadd_parts+0x28c>
     552:	eb 01       	movw	r28, r22
     554:	88 81       	ld	r24, Y
     556:	82 30       	cpi	r24, 0x02	; 2
     558:	08 f4       	brcc	.+2      	; 0x55c <_fpadd_parts+0x24>
     55a:	33 c1       	rjmp	.+614    	; 0x7c2 <_fpadd_parts+0x28a>
     55c:	94 30       	cpi	r25, 0x04	; 4
     55e:	69 f4       	brne	.+26     	; 0x57a <_fpadd_parts+0x42>
     560:	84 30       	cpi	r24, 0x04	; 4
     562:	09 f0       	breq	.+2      	; 0x566 <_fpadd_parts+0x2e>
     564:	2f c1       	rjmp	.+606    	; 0x7c4 <_fpadd_parts+0x28c>
     566:	11 96       	adiw	r26, 0x01	; 1
     568:	9c 91       	ld	r25, X
     56a:	11 97       	sbiw	r26, 0x01	; 1
     56c:	89 81       	ldd	r24, Y+1	; 0x01
     56e:	98 17       	cp	r25, r24
     570:	09 f4       	brne	.+2      	; 0x574 <_fpadd_parts+0x3c>
     572:	28 c1       	rjmp	.+592    	; 0x7c4 <_fpadd_parts+0x28c>
     574:	a0 e6       	ldi	r26, 0x60	; 96
     576:	b0 e0       	ldi	r27, 0x00	; 0
     578:	25 c1       	rjmp	.+586    	; 0x7c4 <_fpadd_parts+0x28c>
     57a:	84 30       	cpi	r24, 0x04	; 4
     57c:	09 f4       	brne	.+2      	; 0x580 <_fpadd_parts+0x48>
     57e:	21 c1       	rjmp	.+578    	; 0x7c2 <_fpadd_parts+0x28a>
     580:	82 30       	cpi	r24, 0x02	; 2
     582:	a9 f4       	brne	.+42     	; 0x5ae <_fpadd_parts+0x76>
     584:	92 30       	cpi	r25, 0x02	; 2
     586:	09 f0       	breq	.+2      	; 0x58a <_fpadd_parts+0x52>
     588:	1d c1       	rjmp	.+570    	; 0x7c4 <_fpadd_parts+0x28c>
     58a:	9a 01       	movw	r18, r20
     58c:	ad 01       	movw	r20, r26
     58e:	88 e0       	ldi	r24, 0x08	; 8
     590:	ea 01       	movw	r28, r20
     592:	09 90       	ld	r0, Y+
     594:	ae 01       	movw	r20, r28
     596:	e9 01       	movw	r28, r18
     598:	09 92       	st	Y+, r0
     59a:	9e 01       	movw	r18, r28
     59c:	81 50       	subi	r24, 0x01	; 1
     59e:	c1 f7       	brne	.-16     	; 0x590 <_fpadd_parts+0x58>
     5a0:	e2 01       	movw	r28, r4
     5a2:	89 81       	ldd	r24, Y+1	; 0x01
     5a4:	11 96       	adiw	r26, 0x01	; 1
     5a6:	9c 91       	ld	r25, X
     5a8:	89 23       	and	r24, r25
     5aa:	81 83       	std	Z+1, r24	; 0x01
     5ac:	08 c1       	rjmp	.+528    	; 0x7be <_fpadd_parts+0x286>
     5ae:	92 30       	cpi	r25, 0x02	; 2
     5b0:	09 f4       	brne	.+2      	; 0x5b4 <_fpadd_parts+0x7c>
     5b2:	07 c1       	rjmp	.+526    	; 0x7c2 <_fpadd_parts+0x28a>
     5b4:	12 96       	adiw	r26, 0x02	; 2
     5b6:	2d 90       	ld	r2, X+
     5b8:	3c 90       	ld	r3, X
     5ba:	13 97       	sbiw	r26, 0x03	; 3
     5bc:	eb 01       	movw	r28, r22
     5be:	8a 81       	ldd	r24, Y+2	; 0x02
     5c0:	9b 81       	ldd	r25, Y+3	; 0x03
     5c2:	14 96       	adiw	r26, 0x04	; 4
     5c4:	ad 90       	ld	r10, X+
     5c6:	bd 90       	ld	r11, X+
     5c8:	cd 90       	ld	r12, X+
     5ca:	dc 90       	ld	r13, X
     5cc:	17 97       	sbiw	r26, 0x07	; 7
     5ce:	ec 80       	ldd	r14, Y+4	; 0x04
     5d0:	fd 80       	ldd	r15, Y+5	; 0x05
     5d2:	0e 81       	ldd	r16, Y+6	; 0x06
     5d4:	1f 81       	ldd	r17, Y+7	; 0x07
     5d6:	91 01       	movw	r18, r2
     5d8:	28 1b       	sub	r18, r24
     5da:	39 0b       	sbc	r19, r25
     5dc:	b9 01       	movw	r22, r18
     5de:	37 ff       	sbrs	r19, 7
     5e0:	04 c0       	rjmp	.+8      	; 0x5ea <_fpadd_parts+0xb2>
     5e2:	66 27       	eor	r22, r22
     5e4:	77 27       	eor	r23, r23
     5e6:	62 1b       	sub	r22, r18
     5e8:	73 0b       	sbc	r23, r19
     5ea:	60 32       	cpi	r22, 0x20	; 32
     5ec:	71 05       	cpc	r23, r1
     5ee:	0c f0       	brlt	.+2      	; 0x5f2 <_fpadd_parts+0xba>
     5f0:	61 c0       	rjmp	.+194    	; 0x6b4 <_fpadd_parts+0x17c>
     5f2:	12 16       	cp	r1, r18
     5f4:	13 06       	cpc	r1, r19
     5f6:	6c f5       	brge	.+90     	; 0x652 <_fpadd_parts+0x11a>
     5f8:	37 01       	movw	r6, r14
     5fa:	48 01       	movw	r8, r16
     5fc:	06 2e       	mov	r0, r22
     5fe:	04 c0       	rjmp	.+8      	; 0x608 <_fpadd_parts+0xd0>
     600:	96 94       	lsr	r9
     602:	87 94       	ror	r8
     604:	77 94       	ror	r7
     606:	67 94       	ror	r6
     608:	0a 94       	dec	r0
     60a:	d2 f7       	brpl	.-12     	; 0x600 <_fpadd_parts+0xc8>
     60c:	21 e0       	ldi	r18, 0x01	; 1
     60e:	30 e0       	ldi	r19, 0x00	; 0
     610:	40 e0       	ldi	r20, 0x00	; 0
     612:	50 e0       	ldi	r21, 0x00	; 0
     614:	04 c0       	rjmp	.+8      	; 0x61e <_fpadd_parts+0xe6>
     616:	22 0f       	add	r18, r18
     618:	33 1f       	adc	r19, r19
     61a:	44 1f       	adc	r20, r20
     61c:	55 1f       	adc	r21, r21
     61e:	6a 95       	dec	r22
     620:	d2 f7       	brpl	.-12     	; 0x616 <_fpadd_parts+0xde>
     622:	21 50       	subi	r18, 0x01	; 1
     624:	30 40       	sbci	r19, 0x00	; 0
     626:	40 40       	sbci	r20, 0x00	; 0
     628:	50 40       	sbci	r21, 0x00	; 0
     62a:	2e 21       	and	r18, r14
     62c:	3f 21       	and	r19, r15
     62e:	40 23       	and	r20, r16
     630:	51 23       	and	r21, r17
     632:	21 15       	cp	r18, r1
     634:	31 05       	cpc	r19, r1
     636:	41 05       	cpc	r20, r1
     638:	51 05       	cpc	r21, r1
     63a:	21 f0       	breq	.+8      	; 0x644 <_fpadd_parts+0x10c>
     63c:	21 e0       	ldi	r18, 0x01	; 1
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	40 e0       	ldi	r20, 0x00	; 0
     642:	50 e0       	ldi	r21, 0x00	; 0
     644:	79 01       	movw	r14, r18
     646:	8a 01       	movw	r16, r20
     648:	e6 28       	or	r14, r6
     64a:	f7 28       	or	r15, r7
     64c:	08 29       	or	r16, r8
     64e:	19 29       	or	r17, r9
     650:	3c c0       	rjmp	.+120    	; 0x6ca <_fpadd_parts+0x192>
     652:	23 2b       	or	r18, r19
     654:	d1 f1       	breq	.+116    	; 0x6ca <_fpadd_parts+0x192>
     656:	26 0e       	add	r2, r22
     658:	37 1e       	adc	r3, r23
     65a:	35 01       	movw	r6, r10
     65c:	46 01       	movw	r8, r12
     65e:	06 2e       	mov	r0, r22
     660:	04 c0       	rjmp	.+8      	; 0x66a <_fpadd_parts+0x132>
     662:	96 94       	lsr	r9
     664:	87 94       	ror	r8
     666:	77 94       	ror	r7
     668:	67 94       	ror	r6
     66a:	0a 94       	dec	r0
     66c:	d2 f7       	brpl	.-12     	; 0x662 <_fpadd_parts+0x12a>
     66e:	21 e0       	ldi	r18, 0x01	; 1
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	40 e0       	ldi	r20, 0x00	; 0
     674:	50 e0       	ldi	r21, 0x00	; 0
     676:	04 c0       	rjmp	.+8      	; 0x680 <_fpadd_parts+0x148>
     678:	22 0f       	add	r18, r18
     67a:	33 1f       	adc	r19, r19
     67c:	44 1f       	adc	r20, r20
     67e:	55 1f       	adc	r21, r21
     680:	6a 95       	dec	r22
     682:	d2 f7       	brpl	.-12     	; 0x678 <_fpadd_parts+0x140>
     684:	21 50       	subi	r18, 0x01	; 1
     686:	30 40       	sbci	r19, 0x00	; 0
     688:	40 40       	sbci	r20, 0x00	; 0
     68a:	50 40       	sbci	r21, 0x00	; 0
     68c:	2a 21       	and	r18, r10
     68e:	3b 21       	and	r19, r11
     690:	4c 21       	and	r20, r12
     692:	5d 21       	and	r21, r13
     694:	21 15       	cp	r18, r1
     696:	31 05       	cpc	r19, r1
     698:	41 05       	cpc	r20, r1
     69a:	51 05       	cpc	r21, r1
     69c:	21 f0       	breq	.+8      	; 0x6a6 <_fpadd_parts+0x16e>
     69e:	21 e0       	ldi	r18, 0x01	; 1
     6a0:	30 e0       	ldi	r19, 0x00	; 0
     6a2:	40 e0       	ldi	r20, 0x00	; 0
     6a4:	50 e0       	ldi	r21, 0x00	; 0
     6a6:	59 01       	movw	r10, r18
     6a8:	6a 01       	movw	r12, r20
     6aa:	a6 28       	or	r10, r6
     6ac:	b7 28       	or	r11, r7
     6ae:	c8 28       	or	r12, r8
     6b0:	d9 28       	or	r13, r9
     6b2:	0b c0       	rjmp	.+22     	; 0x6ca <_fpadd_parts+0x192>
     6b4:	82 15       	cp	r24, r2
     6b6:	93 05       	cpc	r25, r3
     6b8:	2c f0       	brlt	.+10     	; 0x6c4 <_fpadd_parts+0x18c>
     6ba:	1c 01       	movw	r2, r24
     6bc:	aa 24       	eor	r10, r10
     6be:	bb 24       	eor	r11, r11
     6c0:	65 01       	movw	r12, r10
     6c2:	03 c0       	rjmp	.+6      	; 0x6ca <_fpadd_parts+0x192>
     6c4:	ee 24       	eor	r14, r14
     6c6:	ff 24       	eor	r15, r15
     6c8:	87 01       	movw	r16, r14
     6ca:	11 96       	adiw	r26, 0x01	; 1
     6cc:	9c 91       	ld	r25, X
     6ce:	d2 01       	movw	r26, r4
     6d0:	11 96       	adiw	r26, 0x01	; 1
     6d2:	8c 91       	ld	r24, X
     6d4:	98 17       	cp	r25, r24
     6d6:	09 f4       	brne	.+2      	; 0x6da <_fpadd_parts+0x1a2>
     6d8:	45 c0       	rjmp	.+138    	; 0x764 <_fpadd_parts+0x22c>
     6da:	99 23       	and	r25, r25
     6dc:	39 f0       	breq	.+14     	; 0x6ec <_fpadd_parts+0x1b4>
     6de:	a8 01       	movw	r20, r16
     6e0:	97 01       	movw	r18, r14
     6e2:	2a 19       	sub	r18, r10
     6e4:	3b 09       	sbc	r19, r11
     6e6:	4c 09       	sbc	r20, r12
     6e8:	5d 09       	sbc	r21, r13
     6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <_fpadd_parts+0x1c0>
     6ec:	a6 01       	movw	r20, r12
     6ee:	95 01       	movw	r18, r10
     6f0:	2e 19       	sub	r18, r14
     6f2:	3f 09       	sbc	r19, r15
     6f4:	40 0b       	sbc	r20, r16
     6f6:	51 0b       	sbc	r21, r17
     6f8:	57 fd       	sbrc	r21, 7
     6fa:	08 c0       	rjmp	.+16     	; 0x70c <_fpadd_parts+0x1d4>
     6fc:	11 82       	std	Z+1, r1	; 0x01
     6fe:	33 82       	std	Z+3, r3	; 0x03
     700:	22 82       	std	Z+2, r2	; 0x02
     702:	24 83       	std	Z+4, r18	; 0x04
     704:	35 83       	std	Z+5, r19	; 0x05
     706:	46 83       	std	Z+6, r20	; 0x06
     708:	57 83       	std	Z+7, r21	; 0x07
     70a:	1d c0       	rjmp	.+58     	; 0x746 <_fpadd_parts+0x20e>
     70c:	81 e0       	ldi	r24, 0x01	; 1
     70e:	81 83       	std	Z+1, r24	; 0x01
     710:	33 82       	std	Z+3, r3	; 0x03
     712:	22 82       	std	Z+2, r2	; 0x02
     714:	88 27       	eor	r24, r24
     716:	99 27       	eor	r25, r25
     718:	dc 01       	movw	r26, r24
     71a:	82 1b       	sub	r24, r18
     71c:	93 0b       	sbc	r25, r19
     71e:	a4 0b       	sbc	r26, r20
     720:	b5 0b       	sbc	r27, r21
     722:	84 83       	std	Z+4, r24	; 0x04
     724:	95 83       	std	Z+5, r25	; 0x05
     726:	a6 83       	std	Z+6, r26	; 0x06
     728:	b7 83       	std	Z+7, r27	; 0x07
     72a:	0d c0       	rjmp	.+26     	; 0x746 <_fpadd_parts+0x20e>
     72c:	22 0f       	add	r18, r18
     72e:	33 1f       	adc	r19, r19
     730:	44 1f       	adc	r20, r20
     732:	55 1f       	adc	r21, r21
     734:	24 83       	std	Z+4, r18	; 0x04
     736:	35 83       	std	Z+5, r19	; 0x05
     738:	46 83       	std	Z+6, r20	; 0x06
     73a:	57 83       	std	Z+7, r21	; 0x07
     73c:	82 81       	ldd	r24, Z+2	; 0x02
     73e:	93 81       	ldd	r25, Z+3	; 0x03
     740:	01 97       	sbiw	r24, 0x01	; 1
     742:	93 83       	std	Z+3, r25	; 0x03
     744:	82 83       	std	Z+2, r24	; 0x02
     746:	24 81       	ldd	r18, Z+4	; 0x04
     748:	35 81       	ldd	r19, Z+5	; 0x05
     74a:	46 81       	ldd	r20, Z+6	; 0x06
     74c:	57 81       	ldd	r21, Z+7	; 0x07
     74e:	da 01       	movw	r26, r20
     750:	c9 01       	movw	r24, r18
     752:	01 97       	sbiw	r24, 0x01	; 1
     754:	a1 09       	sbc	r26, r1
     756:	b1 09       	sbc	r27, r1
     758:	8f 5f       	subi	r24, 0xFF	; 255
     75a:	9f 4f       	sbci	r25, 0xFF	; 255
     75c:	af 4f       	sbci	r26, 0xFF	; 255
     75e:	bf 43       	sbci	r27, 0x3F	; 63
     760:	28 f3       	brcs	.-54     	; 0x72c <_fpadd_parts+0x1f4>
     762:	0b c0       	rjmp	.+22     	; 0x77a <_fpadd_parts+0x242>
     764:	91 83       	std	Z+1, r25	; 0x01
     766:	33 82       	std	Z+3, r3	; 0x03
     768:	22 82       	std	Z+2, r2	; 0x02
     76a:	ea 0c       	add	r14, r10
     76c:	fb 1c       	adc	r15, r11
     76e:	0c 1d       	adc	r16, r12
     770:	1d 1d       	adc	r17, r13
     772:	e4 82       	std	Z+4, r14	; 0x04
     774:	f5 82       	std	Z+5, r15	; 0x05
     776:	06 83       	std	Z+6, r16	; 0x06
     778:	17 83       	std	Z+7, r17	; 0x07
     77a:	83 e0       	ldi	r24, 0x03	; 3
     77c:	80 83       	st	Z, r24
     77e:	24 81       	ldd	r18, Z+4	; 0x04
     780:	35 81       	ldd	r19, Z+5	; 0x05
     782:	46 81       	ldd	r20, Z+6	; 0x06
     784:	57 81       	ldd	r21, Z+7	; 0x07
     786:	57 ff       	sbrs	r21, 7
     788:	1a c0       	rjmp	.+52     	; 0x7be <_fpadd_parts+0x286>
     78a:	c9 01       	movw	r24, r18
     78c:	aa 27       	eor	r26, r26
     78e:	97 fd       	sbrc	r25, 7
     790:	a0 95       	com	r26
     792:	ba 2f       	mov	r27, r26
     794:	81 70       	andi	r24, 0x01	; 1
     796:	90 70       	andi	r25, 0x00	; 0
     798:	a0 70       	andi	r26, 0x00	; 0
     79a:	b0 70       	andi	r27, 0x00	; 0
     79c:	56 95       	lsr	r21
     79e:	47 95       	ror	r20
     7a0:	37 95       	ror	r19
     7a2:	27 95       	ror	r18
     7a4:	82 2b       	or	r24, r18
     7a6:	93 2b       	or	r25, r19
     7a8:	a4 2b       	or	r26, r20
     7aa:	b5 2b       	or	r27, r21
     7ac:	84 83       	std	Z+4, r24	; 0x04
     7ae:	95 83       	std	Z+5, r25	; 0x05
     7b0:	a6 83       	std	Z+6, r26	; 0x06
     7b2:	b7 83       	std	Z+7, r27	; 0x07
     7b4:	82 81       	ldd	r24, Z+2	; 0x02
     7b6:	93 81       	ldd	r25, Z+3	; 0x03
     7b8:	01 96       	adiw	r24, 0x01	; 1
     7ba:	93 83       	std	Z+3, r25	; 0x03
     7bc:	82 83       	std	Z+2, r24	; 0x02
     7be:	df 01       	movw	r26, r30
     7c0:	01 c0       	rjmp	.+2      	; 0x7c4 <_fpadd_parts+0x28c>
     7c2:	d2 01       	movw	r26, r4
     7c4:	cd 01       	movw	r24, r26
     7c6:	cd b7       	in	r28, 0x3d	; 61
     7c8:	de b7       	in	r29, 0x3e	; 62
     7ca:	e2 e1       	ldi	r30, 0x12	; 18
     7cc:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__epilogue_restores__>

000007d0 <__subsf3>:
     7d0:	a0 e2       	ldi	r26, 0x20	; 32
     7d2:	b0 e0       	ldi	r27, 0x00	; 0
     7d4:	ee ee       	ldi	r30, 0xEE	; 238
     7d6:	f3 e0       	ldi	r31, 0x03	; 3
     7d8:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__prologue_saves__+0x18>
     7dc:	69 83       	std	Y+1, r22	; 0x01
     7de:	7a 83       	std	Y+2, r23	; 0x02
     7e0:	8b 83       	std	Y+3, r24	; 0x03
     7e2:	9c 83       	std	Y+4, r25	; 0x04
     7e4:	2d 83       	std	Y+5, r18	; 0x05
     7e6:	3e 83       	std	Y+6, r19	; 0x06
     7e8:	4f 83       	std	Y+7, r20	; 0x07
     7ea:	58 87       	std	Y+8, r21	; 0x08
     7ec:	e9 e0       	ldi	r30, 0x09	; 9
     7ee:	ee 2e       	mov	r14, r30
     7f0:	f1 2c       	mov	r15, r1
     7f2:	ec 0e       	add	r14, r28
     7f4:	fd 1e       	adc	r15, r29
     7f6:	ce 01       	movw	r24, r28
     7f8:	01 96       	adiw	r24, 0x01	; 1
     7fa:	b7 01       	movw	r22, r14
     7fc:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     800:	8e 01       	movw	r16, r28
     802:	0f 5e       	subi	r16, 0xEF	; 239
     804:	1f 4f       	sbci	r17, 0xFF	; 255
     806:	ce 01       	movw	r24, r28
     808:	05 96       	adiw	r24, 0x05	; 5
     80a:	b8 01       	movw	r22, r16
     80c:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     810:	8a 89       	ldd	r24, Y+18	; 0x12
     812:	91 e0       	ldi	r25, 0x01	; 1
     814:	89 27       	eor	r24, r25
     816:	8a 8b       	std	Y+18, r24	; 0x12
     818:	c7 01       	movw	r24, r14
     81a:	b8 01       	movw	r22, r16
     81c:	ae 01       	movw	r20, r28
     81e:	47 5e       	subi	r20, 0xE7	; 231
     820:	5f 4f       	sbci	r21, 0xFF	; 255
     822:	0e 94 9c 02 	call	0x538	; 0x538 <_fpadd_parts>
     826:	0e 94 4a 07 	call	0xe94	; 0xe94 <__pack_f>
     82a:	a0 96       	adiw	r28, 0x20	; 32
     82c:	e6 e0       	ldi	r30, 0x06	; 6
     82e:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__epilogue_restores__+0x18>

00000832 <__addsf3>:
     832:	a0 e2       	ldi	r26, 0x20	; 32
     834:	b0 e0       	ldi	r27, 0x00	; 0
     836:	ef e1       	ldi	r30, 0x1F	; 31
     838:	f4 e0       	ldi	r31, 0x04	; 4
     83a:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__prologue_saves__+0x18>
     83e:	69 83       	std	Y+1, r22	; 0x01
     840:	7a 83       	std	Y+2, r23	; 0x02
     842:	8b 83       	std	Y+3, r24	; 0x03
     844:	9c 83       	std	Y+4, r25	; 0x04
     846:	2d 83       	std	Y+5, r18	; 0x05
     848:	3e 83       	std	Y+6, r19	; 0x06
     84a:	4f 83       	std	Y+7, r20	; 0x07
     84c:	58 87       	std	Y+8, r21	; 0x08
     84e:	f9 e0       	ldi	r31, 0x09	; 9
     850:	ef 2e       	mov	r14, r31
     852:	f1 2c       	mov	r15, r1
     854:	ec 0e       	add	r14, r28
     856:	fd 1e       	adc	r15, r29
     858:	ce 01       	movw	r24, r28
     85a:	01 96       	adiw	r24, 0x01	; 1
     85c:	b7 01       	movw	r22, r14
     85e:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     862:	8e 01       	movw	r16, r28
     864:	0f 5e       	subi	r16, 0xEF	; 239
     866:	1f 4f       	sbci	r17, 0xFF	; 255
     868:	ce 01       	movw	r24, r28
     86a:	05 96       	adiw	r24, 0x05	; 5
     86c:	b8 01       	movw	r22, r16
     86e:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     872:	c7 01       	movw	r24, r14
     874:	b8 01       	movw	r22, r16
     876:	ae 01       	movw	r20, r28
     878:	47 5e       	subi	r20, 0xE7	; 231
     87a:	5f 4f       	sbci	r21, 0xFF	; 255
     87c:	0e 94 9c 02 	call	0x538	; 0x538 <_fpadd_parts>
     880:	0e 94 4a 07 	call	0xe94	; 0xe94 <__pack_f>
     884:	a0 96       	adiw	r28, 0x20	; 32
     886:	e6 e0       	ldi	r30, 0x06	; 6
     888:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__epilogue_restores__+0x18>

0000088c <__mulsf3>:
     88c:	a0 e2       	ldi	r26, 0x20	; 32
     88e:	b0 e0       	ldi	r27, 0x00	; 0
     890:	ec e4       	ldi	r30, 0x4C	; 76
     892:	f4 e0       	ldi	r31, 0x04	; 4
     894:	0c 94 f0 08 	jmp	0x11e0	; 0x11e0 <__prologue_saves__>
     898:	69 83       	std	Y+1, r22	; 0x01
     89a:	7a 83       	std	Y+2, r23	; 0x02
     89c:	8b 83       	std	Y+3, r24	; 0x03
     89e:	9c 83       	std	Y+4, r25	; 0x04
     8a0:	2d 83       	std	Y+5, r18	; 0x05
     8a2:	3e 83       	std	Y+6, r19	; 0x06
     8a4:	4f 83       	std	Y+7, r20	; 0x07
     8a6:	58 87       	std	Y+8, r21	; 0x08
     8a8:	ce 01       	movw	r24, r28
     8aa:	01 96       	adiw	r24, 0x01	; 1
     8ac:	be 01       	movw	r22, r28
     8ae:	67 5f       	subi	r22, 0xF7	; 247
     8b0:	7f 4f       	sbci	r23, 0xFF	; 255
     8b2:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     8b6:	ce 01       	movw	r24, r28
     8b8:	05 96       	adiw	r24, 0x05	; 5
     8ba:	be 01       	movw	r22, r28
     8bc:	6f 5e       	subi	r22, 0xEF	; 239
     8be:	7f 4f       	sbci	r23, 0xFF	; 255
     8c0:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     8c4:	99 85       	ldd	r25, Y+9	; 0x09
     8c6:	92 30       	cpi	r25, 0x02	; 2
     8c8:	88 f0       	brcs	.+34     	; 0x8ec <__mulsf3+0x60>
     8ca:	89 89       	ldd	r24, Y+17	; 0x11
     8cc:	82 30       	cpi	r24, 0x02	; 2
     8ce:	c8 f0       	brcs	.+50     	; 0x902 <__mulsf3+0x76>
     8d0:	94 30       	cpi	r25, 0x04	; 4
     8d2:	19 f4       	brne	.+6      	; 0x8da <__mulsf3+0x4e>
     8d4:	82 30       	cpi	r24, 0x02	; 2
     8d6:	51 f4       	brne	.+20     	; 0x8ec <__mulsf3+0x60>
     8d8:	04 c0       	rjmp	.+8      	; 0x8e2 <__mulsf3+0x56>
     8da:	84 30       	cpi	r24, 0x04	; 4
     8dc:	29 f4       	brne	.+10     	; 0x8e8 <__mulsf3+0x5c>
     8de:	92 30       	cpi	r25, 0x02	; 2
     8e0:	81 f4       	brne	.+32     	; 0x902 <__mulsf3+0x76>
     8e2:	80 e6       	ldi	r24, 0x60	; 96
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	c6 c0       	rjmp	.+396    	; 0xa74 <__mulsf3+0x1e8>
     8e8:	92 30       	cpi	r25, 0x02	; 2
     8ea:	49 f4       	brne	.+18     	; 0x8fe <__mulsf3+0x72>
     8ec:	20 e0       	ldi	r18, 0x00	; 0
     8ee:	9a 85       	ldd	r25, Y+10	; 0x0a
     8f0:	8a 89       	ldd	r24, Y+18	; 0x12
     8f2:	98 13       	cpse	r25, r24
     8f4:	21 e0       	ldi	r18, 0x01	; 1
     8f6:	2a 87       	std	Y+10, r18	; 0x0a
     8f8:	ce 01       	movw	r24, r28
     8fa:	09 96       	adiw	r24, 0x09	; 9
     8fc:	bb c0       	rjmp	.+374    	; 0xa74 <__mulsf3+0x1e8>
     8fe:	82 30       	cpi	r24, 0x02	; 2
     900:	49 f4       	brne	.+18     	; 0x914 <__mulsf3+0x88>
     902:	20 e0       	ldi	r18, 0x00	; 0
     904:	9a 85       	ldd	r25, Y+10	; 0x0a
     906:	8a 89       	ldd	r24, Y+18	; 0x12
     908:	98 13       	cpse	r25, r24
     90a:	21 e0       	ldi	r18, 0x01	; 1
     90c:	2a 8b       	std	Y+18, r18	; 0x12
     90e:	ce 01       	movw	r24, r28
     910:	41 96       	adiw	r24, 0x11	; 17
     912:	b0 c0       	rjmp	.+352    	; 0xa74 <__mulsf3+0x1e8>
     914:	2d 84       	ldd	r2, Y+13	; 0x0d
     916:	3e 84       	ldd	r3, Y+14	; 0x0e
     918:	4f 84       	ldd	r4, Y+15	; 0x0f
     91a:	58 88       	ldd	r5, Y+16	; 0x10
     91c:	6d 88       	ldd	r6, Y+21	; 0x15
     91e:	7e 88       	ldd	r7, Y+22	; 0x16
     920:	8f 88       	ldd	r8, Y+23	; 0x17
     922:	98 8c       	ldd	r9, Y+24	; 0x18
     924:	ee 24       	eor	r14, r14
     926:	ff 24       	eor	r15, r15
     928:	87 01       	movw	r16, r14
     92a:	aa 24       	eor	r10, r10
     92c:	bb 24       	eor	r11, r11
     92e:	65 01       	movw	r12, r10
     930:	40 e0       	ldi	r20, 0x00	; 0
     932:	50 e0       	ldi	r21, 0x00	; 0
     934:	60 e0       	ldi	r22, 0x00	; 0
     936:	70 e0       	ldi	r23, 0x00	; 0
     938:	e0 e0       	ldi	r30, 0x00	; 0
     93a:	f0 e0       	ldi	r31, 0x00	; 0
     93c:	c1 01       	movw	r24, r2
     93e:	81 70       	andi	r24, 0x01	; 1
     940:	90 70       	andi	r25, 0x00	; 0
     942:	89 2b       	or	r24, r25
     944:	e9 f0       	breq	.+58     	; 0x980 <__mulsf3+0xf4>
     946:	e6 0c       	add	r14, r6
     948:	f7 1c       	adc	r15, r7
     94a:	08 1d       	adc	r16, r8
     94c:	19 1d       	adc	r17, r9
     94e:	9a 01       	movw	r18, r20
     950:	ab 01       	movw	r20, r22
     952:	2a 0d       	add	r18, r10
     954:	3b 1d       	adc	r19, r11
     956:	4c 1d       	adc	r20, r12
     958:	5d 1d       	adc	r21, r13
     95a:	80 e0       	ldi	r24, 0x00	; 0
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	a0 e0       	ldi	r26, 0x00	; 0
     960:	b0 e0       	ldi	r27, 0x00	; 0
     962:	e6 14       	cp	r14, r6
     964:	f7 04       	cpc	r15, r7
     966:	08 05       	cpc	r16, r8
     968:	19 05       	cpc	r17, r9
     96a:	20 f4       	brcc	.+8      	; 0x974 <__mulsf3+0xe8>
     96c:	81 e0       	ldi	r24, 0x01	; 1
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	a0 e0       	ldi	r26, 0x00	; 0
     972:	b0 e0       	ldi	r27, 0x00	; 0
     974:	ba 01       	movw	r22, r20
     976:	a9 01       	movw	r20, r18
     978:	48 0f       	add	r20, r24
     97a:	59 1f       	adc	r21, r25
     97c:	6a 1f       	adc	r22, r26
     97e:	7b 1f       	adc	r23, r27
     980:	aa 0c       	add	r10, r10
     982:	bb 1c       	adc	r11, r11
     984:	cc 1c       	adc	r12, r12
     986:	dd 1c       	adc	r13, r13
     988:	97 fe       	sbrs	r9, 7
     98a:	08 c0       	rjmp	.+16     	; 0x99c <__mulsf3+0x110>
     98c:	81 e0       	ldi	r24, 0x01	; 1
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	a0 e0       	ldi	r26, 0x00	; 0
     992:	b0 e0       	ldi	r27, 0x00	; 0
     994:	a8 2a       	or	r10, r24
     996:	b9 2a       	or	r11, r25
     998:	ca 2a       	or	r12, r26
     99a:	db 2a       	or	r13, r27
     99c:	31 96       	adiw	r30, 0x01	; 1
     99e:	e0 32       	cpi	r30, 0x20	; 32
     9a0:	f1 05       	cpc	r31, r1
     9a2:	49 f0       	breq	.+18     	; 0x9b6 <__mulsf3+0x12a>
     9a4:	66 0c       	add	r6, r6
     9a6:	77 1c       	adc	r7, r7
     9a8:	88 1c       	adc	r8, r8
     9aa:	99 1c       	adc	r9, r9
     9ac:	56 94       	lsr	r5
     9ae:	47 94       	ror	r4
     9b0:	37 94       	ror	r3
     9b2:	27 94       	ror	r2
     9b4:	c3 cf       	rjmp	.-122    	; 0x93c <__mulsf3+0xb0>
     9b6:	fa 85       	ldd	r31, Y+10	; 0x0a
     9b8:	ea 89       	ldd	r30, Y+18	; 0x12
     9ba:	2b 89       	ldd	r18, Y+19	; 0x13
     9bc:	3c 89       	ldd	r19, Y+20	; 0x14
     9be:	8b 85       	ldd	r24, Y+11	; 0x0b
     9c0:	9c 85       	ldd	r25, Y+12	; 0x0c
     9c2:	28 0f       	add	r18, r24
     9c4:	39 1f       	adc	r19, r25
     9c6:	2e 5f       	subi	r18, 0xFE	; 254
     9c8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ca:	17 c0       	rjmp	.+46     	; 0x9fa <__mulsf3+0x16e>
     9cc:	ca 01       	movw	r24, r20
     9ce:	81 70       	andi	r24, 0x01	; 1
     9d0:	90 70       	andi	r25, 0x00	; 0
     9d2:	89 2b       	or	r24, r25
     9d4:	61 f0       	breq	.+24     	; 0x9ee <__mulsf3+0x162>
     9d6:	16 95       	lsr	r17
     9d8:	07 95       	ror	r16
     9da:	f7 94       	ror	r15
     9dc:	e7 94       	ror	r14
     9de:	80 e0       	ldi	r24, 0x00	; 0
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	a0 e0       	ldi	r26, 0x00	; 0
     9e4:	b0 e8       	ldi	r27, 0x80	; 128
     9e6:	e8 2a       	or	r14, r24
     9e8:	f9 2a       	or	r15, r25
     9ea:	0a 2b       	or	r16, r26
     9ec:	1b 2b       	or	r17, r27
     9ee:	76 95       	lsr	r23
     9f0:	67 95       	ror	r22
     9f2:	57 95       	ror	r21
     9f4:	47 95       	ror	r20
     9f6:	2f 5f       	subi	r18, 0xFF	; 255
     9f8:	3f 4f       	sbci	r19, 0xFF	; 255
     9fa:	77 fd       	sbrc	r23, 7
     9fc:	e7 cf       	rjmp	.-50     	; 0x9cc <__mulsf3+0x140>
     9fe:	0c c0       	rjmp	.+24     	; 0xa18 <__mulsf3+0x18c>
     a00:	44 0f       	add	r20, r20
     a02:	55 1f       	adc	r21, r21
     a04:	66 1f       	adc	r22, r22
     a06:	77 1f       	adc	r23, r23
     a08:	17 fd       	sbrc	r17, 7
     a0a:	41 60       	ori	r20, 0x01	; 1
     a0c:	ee 0c       	add	r14, r14
     a0e:	ff 1c       	adc	r15, r15
     a10:	00 1f       	adc	r16, r16
     a12:	11 1f       	adc	r17, r17
     a14:	21 50       	subi	r18, 0x01	; 1
     a16:	30 40       	sbci	r19, 0x00	; 0
     a18:	40 30       	cpi	r20, 0x00	; 0
     a1a:	90 e0       	ldi	r25, 0x00	; 0
     a1c:	59 07       	cpc	r21, r25
     a1e:	90 e0       	ldi	r25, 0x00	; 0
     a20:	69 07       	cpc	r22, r25
     a22:	90 e4       	ldi	r25, 0x40	; 64
     a24:	79 07       	cpc	r23, r25
     a26:	60 f3       	brcs	.-40     	; 0xa00 <__mulsf3+0x174>
     a28:	2b 8f       	std	Y+27, r18	; 0x1b
     a2a:	3c 8f       	std	Y+28, r19	; 0x1c
     a2c:	db 01       	movw	r26, r22
     a2e:	ca 01       	movw	r24, r20
     a30:	8f 77       	andi	r24, 0x7F	; 127
     a32:	90 70       	andi	r25, 0x00	; 0
     a34:	a0 70       	andi	r26, 0x00	; 0
     a36:	b0 70       	andi	r27, 0x00	; 0
     a38:	80 34       	cpi	r24, 0x40	; 64
     a3a:	91 05       	cpc	r25, r1
     a3c:	a1 05       	cpc	r26, r1
     a3e:	b1 05       	cpc	r27, r1
     a40:	61 f4       	brne	.+24     	; 0xa5a <__mulsf3+0x1ce>
     a42:	47 fd       	sbrc	r20, 7
     a44:	0a c0       	rjmp	.+20     	; 0xa5a <__mulsf3+0x1ce>
     a46:	e1 14       	cp	r14, r1
     a48:	f1 04       	cpc	r15, r1
     a4a:	01 05       	cpc	r16, r1
     a4c:	11 05       	cpc	r17, r1
     a4e:	29 f0       	breq	.+10     	; 0xa5a <__mulsf3+0x1ce>
     a50:	40 5c       	subi	r20, 0xC0	; 192
     a52:	5f 4f       	sbci	r21, 0xFF	; 255
     a54:	6f 4f       	sbci	r22, 0xFF	; 255
     a56:	7f 4f       	sbci	r23, 0xFF	; 255
     a58:	40 78       	andi	r20, 0x80	; 128
     a5a:	1a 8e       	std	Y+26, r1	; 0x1a
     a5c:	fe 17       	cp	r31, r30
     a5e:	11 f0       	breq	.+4      	; 0xa64 <__mulsf3+0x1d8>
     a60:	81 e0       	ldi	r24, 0x01	; 1
     a62:	8a 8f       	std	Y+26, r24	; 0x1a
     a64:	4d 8f       	std	Y+29, r20	; 0x1d
     a66:	5e 8f       	std	Y+30, r21	; 0x1e
     a68:	6f 8f       	std	Y+31, r22	; 0x1f
     a6a:	78 a3       	std	Y+32, r23	; 0x20
     a6c:	83 e0       	ldi	r24, 0x03	; 3
     a6e:	89 8f       	std	Y+25, r24	; 0x19
     a70:	ce 01       	movw	r24, r28
     a72:	49 96       	adiw	r24, 0x19	; 25
     a74:	0e 94 4a 07 	call	0xe94	; 0xe94 <__pack_f>
     a78:	a0 96       	adiw	r28, 0x20	; 32
     a7a:	e2 e1       	ldi	r30, 0x12	; 18
     a7c:	0c 94 0c 09 	jmp	0x1218	; 0x1218 <__epilogue_restores__>

00000a80 <__gtsf2>:
     a80:	a8 e1       	ldi	r26, 0x18	; 24
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	e6 e4       	ldi	r30, 0x46	; 70
     a86:	f5 e0       	ldi	r31, 0x05	; 5
     a88:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__prologue_saves__+0x18>
     a8c:	69 83       	std	Y+1, r22	; 0x01
     a8e:	7a 83       	std	Y+2, r23	; 0x02
     a90:	8b 83       	std	Y+3, r24	; 0x03
     a92:	9c 83       	std	Y+4, r25	; 0x04
     a94:	2d 83       	std	Y+5, r18	; 0x05
     a96:	3e 83       	std	Y+6, r19	; 0x06
     a98:	4f 83       	std	Y+7, r20	; 0x07
     a9a:	58 87       	std	Y+8, r21	; 0x08
     a9c:	89 e0       	ldi	r24, 0x09	; 9
     a9e:	e8 2e       	mov	r14, r24
     aa0:	f1 2c       	mov	r15, r1
     aa2:	ec 0e       	add	r14, r28
     aa4:	fd 1e       	adc	r15, r29
     aa6:	ce 01       	movw	r24, r28
     aa8:	01 96       	adiw	r24, 0x01	; 1
     aaa:	b7 01       	movw	r22, r14
     aac:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     ab0:	8e 01       	movw	r16, r28
     ab2:	0f 5e       	subi	r16, 0xEF	; 239
     ab4:	1f 4f       	sbci	r17, 0xFF	; 255
     ab6:	ce 01       	movw	r24, r28
     ab8:	05 96       	adiw	r24, 0x05	; 5
     aba:	b8 01       	movw	r22, r16
     abc:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     ac0:	89 85       	ldd	r24, Y+9	; 0x09
     ac2:	82 30       	cpi	r24, 0x02	; 2
     ac4:	40 f0       	brcs	.+16     	; 0xad6 <__gtsf2+0x56>
     ac6:	89 89       	ldd	r24, Y+17	; 0x11
     ac8:	82 30       	cpi	r24, 0x02	; 2
     aca:	28 f0       	brcs	.+10     	; 0xad6 <__gtsf2+0x56>
     acc:	c7 01       	movw	r24, r14
     ace:	b8 01       	movw	r22, r16
     ad0:	0e 94 97 08 	call	0x112e	; 0x112e <__fpcmp_parts_f>
     ad4:	01 c0       	rjmp	.+2      	; 0xad8 <__gtsf2+0x58>
     ad6:	8f ef       	ldi	r24, 0xFF	; 255
     ad8:	68 96       	adiw	r28, 0x18	; 24
     ada:	e6 e0       	ldi	r30, 0x06	; 6
     adc:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__epilogue_restores__+0x18>

00000ae0 <__gesf2>:
     ae0:	a8 e1       	ldi	r26, 0x18	; 24
     ae2:	b0 e0       	ldi	r27, 0x00	; 0
     ae4:	e6 e7       	ldi	r30, 0x76	; 118
     ae6:	f5 e0       	ldi	r31, 0x05	; 5
     ae8:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__prologue_saves__+0x18>
     aec:	69 83       	std	Y+1, r22	; 0x01
     aee:	7a 83       	std	Y+2, r23	; 0x02
     af0:	8b 83       	std	Y+3, r24	; 0x03
     af2:	9c 83       	std	Y+4, r25	; 0x04
     af4:	2d 83       	std	Y+5, r18	; 0x05
     af6:	3e 83       	std	Y+6, r19	; 0x06
     af8:	4f 83       	std	Y+7, r20	; 0x07
     afa:	58 87       	std	Y+8, r21	; 0x08
     afc:	89 e0       	ldi	r24, 0x09	; 9
     afe:	e8 2e       	mov	r14, r24
     b00:	f1 2c       	mov	r15, r1
     b02:	ec 0e       	add	r14, r28
     b04:	fd 1e       	adc	r15, r29
     b06:	ce 01       	movw	r24, r28
     b08:	01 96       	adiw	r24, 0x01	; 1
     b0a:	b7 01       	movw	r22, r14
     b0c:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     b10:	8e 01       	movw	r16, r28
     b12:	0f 5e       	subi	r16, 0xEF	; 239
     b14:	1f 4f       	sbci	r17, 0xFF	; 255
     b16:	ce 01       	movw	r24, r28
     b18:	05 96       	adiw	r24, 0x05	; 5
     b1a:	b8 01       	movw	r22, r16
     b1c:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     b20:	89 85       	ldd	r24, Y+9	; 0x09
     b22:	82 30       	cpi	r24, 0x02	; 2
     b24:	40 f0       	brcs	.+16     	; 0xb36 <__gesf2+0x56>
     b26:	89 89       	ldd	r24, Y+17	; 0x11
     b28:	82 30       	cpi	r24, 0x02	; 2
     b2a:	28 f0       	brcs	.+10     	; 0xb36 <__gesf2+0x56>
     b2c:	c7 01       	movw	r24, r14
     b2e:	b8 01       	movw	r22, r16
     b30:	0e 94 97 08 	call	0x112e	; 0x112e <__fpcmp_parts_f>
     b34:	01 c0       	rjmp	.+2      	; 0xb38 <__gesf2+0x58>
     b36:	8f ef       	ldi	r24, 0xFF	; 255
     b38:	68 96       	adiw	r28, 0x18	; 24
     b3a:	e6 e0       	ldi	r30, 0x06	; 6
     b3c:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__epilogue_restores__+0x18>

00000b40 <__ltsf2>:
     b40:	a8 e1       	ldi	r26, 0x18	; 24
     b42:	b0 e0       	ldi	r27, 0x00	; 0
     b44:	e6 ea       	ldi	r30, 0xA6	; 166
     b46:	f5 e0       	ldi	r31, 0x05	; 5
     b48:	0c 94 fc 08 	jmp	0x11f8	; 0x11f8 <__prologue_saves__+0x18>
     b4c:	69 83       	std	Y+1, r22	; 0x01
     b4e:	7a 83       	std	Y+2, r23	; 0x02
     b50:	8b 83       	std	Y+3, r24	; 0x03
     b52:	9c 83       	std	Y+4, r25	; 0x04
     b54:	2d 83       	std	Y+5, r18	; 0x05
     b56:	3e 83       	std	Y+6, r19	; 0x06
     b58:	4f 83       	std	Y+7, r20	; 0x07
     b5a:	58 87       	std	Y+8, r21	; 0x08
     b5c:	89 e0       	ldi	r24, 0x09	; 9
     b5e:	e8 2e       	mov	r14, r24
     b60:	f1 2c       	mov	r15, r1
     b62:	ec 0e       	add	r14, r28
     b64:	fd 1e       	adc	r15, r29
     b66:	ce 01       	movw	r24, r28
     b68:	01 96       	adiw	r24, 0x01	; 1
     b6a:	b7 01       	movw	r22, r14
     b6c:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     b70:	8e 01       	movw	r16, r28
     b72:	0f 5e       	subi	r16, 0xEF	; 239
     b74:	1f 4f       	sbci	r17, 0xFF	; 255
     b76:	ce 01       	movw	r24, r28
     b78:	05 96       	adiw	r24, 0x05	; 5
     b7a:	b8 01       	movw	r22, r16
     b7c:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     b80:	89 85       	ldd	r24, Y+9	; 0x09
     b82:	82 30       	cpi	r24, 0x02	; 2
     b84:	40 f0       	brcs	.+16     	; 0xb96 <__ltsf2+0x56>
     b86:	89 89       	ldd	r24, Y+17	; 0x11
     b88:	82 30       	cpi	r24, 0x02	; 2
     b8a:	28 f0       	brcs	.+10     	; 0xb96 <__ltsf2+0x56>
     b8c:	c7 01       	movw	r24, r14
     b8e:	b8 01       	movw	r22, r16
     b90:	0e 94 97 08 	call	0x112e	; 0x112e <__fpcmp_parts_f>
     b94:	01 c0       	rjmp	.+2      	; 0xb98 <__ltsf2+0x58>
     b96:	81 e0       	ldi	r24, 0x01	; 1
     b98:	68 96       	adiw	r28, 0x18	; 24
     b9a:	e6 e0       	ldi	r30, 0x06	; 6
     b9c:	0c 94 18 09 	jmp	0x1230	; 0x1230 <__epilogue_restores__+0x18>

00000ba0 <__floatsisf>:
     ba0:	a8 e0       	ldi	r26, 0x08	; 8
     ba2:	b0 e0       	ldi	r27, 0x00	; 0
     ba4:	e6 ed       	ldi	r30, 0xD6	; 214
     ba6:	f5 e0       	ldi	r31, 0x05	; 5
     ba8:	0c 94 f9 08 	jmp	0x11f2	; 0x11f2 <__prologue_saves__+0x12>
     bac:	9b 01       	movw	r18, r22
     bae:	ac 01       	movw	r20, r24
     bb0:	83 e0       	ldi	r24, 0x03	; 3
     bb2:	89 83       	std	Y+1, r24	; 0x01
     bb4:	da 01       	movw	r26, r20
     bb6:	c9 01       	movw	r24, r18
     bb8:	88 27       	eor	r24, r24
     bba:	b7 fd       	sbrc	r27, 7
     bbc:	83 95       	inc	r24
     bbe:	99 27       	eor	r25, r25
     bc0:	aa 27       	eor	r26, r26
     bc2:	bb 27       	eor	r27, r27
     bc4:	b8 2e       	mov	r11, r24
     bc6:	21 15       	cp	r18, r1
     bc8:	31 05       	cpc	r19, r1
     bca:	41 05       	cpc	r20, r1
     bcc:	51 05       	cpc	r21, r1
     bce:	19 f4       	brne	.+6      	; 0xbd6 <__floatsisf+0x36>
     bd0:	82 e0       	ldi	r24, 0x02	; 2
     bd2:	89 83       	std	Y+1, r24	; 0x01
     bd4:	3a c0       	rjmp	.+116    	; 0xc4a <__floatsisf+0xaa>
     bd6:	88 23       	and	r24, r24
     bd8:	a9 f0       	breq	.+42     	; 0xc04 <__floatsisf+0x64>
     bda:	20 30       	cpi	r18, 0x00	; 0
     bdc:	80 e0       	ldi	r24, 0x00	; 0
     bde:	38 07       	cpc	r19, r24
     be0:	80 e0       	ldi	r24, 0x00	; 0
     be2:	48 07       	cpc	r20, r24
     be4:	80 e8       	ldi	r24, 0x80	; 128
     be6:	58 07       	cpc	r21, r24
     be8:	29 f4       	brne	.+10     	; 0xbf4 <__floatsisf+0x54>
     bea:	60 e0       	ldi	r22, 0x00	; 0
     bec:	70 e0       	ldi	r23, 0x00	; 0
     bee:	80 e0       	ldi	r24, 0x00	; 0
     bf0:	9f ec       	ldi	r25, 0xCF	; 207
     bf2:	30 c0       	rjmp	.+96     	; 0xc54 <__floatsisf+0xb4>
     bf4:	ee 24       	eor	r14, r14
     bf6:	ff 24       	eor	r15, r15
     bf8:	87 01       	movw	r16, r14
     bfa:	e2 1a       	sub	r14, r18
     bfc:	f3 0a       	sbc	r15, r19
     bfe:	04 0b       	sbc	r16, r20
     c00:	15 0b       	sbc	r17, r21
     c02:	02 c0       	rjmp	.+4      	; 0xc08 <__floatsisf+0x68>
     c04:	79 01       	movw	r14, r18
     c06:	8a 01       	movw	r16, r20
     c08:	8e e1       	ldi	r24, 0x1E	; 30
     c0a:	c8 2e       	mov	r12, r24
     c0c:	d1 2c       	mov	r13, r1
     c0e:	dc 82       	std	Y+4, r13	; 0x04
     c10:	cb 82       	std	Y+3, r12	; 0x03
     c12:	ed 82       	std	Y+5, r14	; 0x05
     c14:	fe 82       	std	Y+6, r15	; 0x06
     c16:	0f 83       	std	Y+7, r16	; 0x07
     c18:	18 87       	std	Y+8, r17	; 0x08
     c1a:	c8 01       	movw	r24, r16
     c1c:	b7 01       	movw	r22, r14
     c1e:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <__clzsi2>
     c22:	01 97       	sbiw	r24, 0x01	; 1
     c24:	18 16       	cp	r1, r24
     c26:	19 06       	cpc	r1, r25
     c28:	84 f4       	brge	.+32     	; 0xc4a <__floatsisf+0xaa>
     c2a:	08 2e       	mov	r0, r24
     c2c:	04 c0       	rjmp	.+8      	; 0xc36 <__floatsisf+0x96>
     c2e:	ee 0c       	add	r14, r14
     c30:	ff 1c       	adc	r15, r15
     c32:	00 1f       	adc	r16, r16
     c34:	11 1f       	adc	r17, r17
     c36:	0a 94       	dec	r0
     c38:	d2 f7       	brpl	.-12     	; 0xc2e <__floatsisf+0x8e>
     c3a:	ed 82       	std	Y+5, r14	; 0x05
     c3c:	fe 82       	std	Y+6, r15	; 0x06
     c3e:	0f 83       	std	Y+7, r16	; 0x07
     c40:	18 87       	std	Y+8, r17	; 0x08
     c42:	c8 1a       	sub	r12, r24
     c44:	d9 0a       	sbc	r13, r25
     c46:	dc 82       	std	Y+4, r13	; 0x04
     c48:	cb 82       	std	Y+3, r12	; 0x03
     c4a:	ba 82       	std	Y+2, r11	; 0x02
     c4c:	ce 01       	movw	r24, r28
     c4e:	01 96       	adiw	r24, 0x01	; 1
     c50:	0e 94 4a 07 	call	0xe94	; 0xe94 <__pack_f>
     c54:	28 96       	adiw	r28, 0x08	; 8
     c56:	e9 e0       	ldi	r30, 0x09	; 9
     c58:	0c 94 15 09 	jmp	0x122a	; 0x122a <__epilogue_restores__+0x12>

00000c5c <__fixsfsi>:
     c5c:	ac e0       	ldi	r26, 0x0C	; 12
     c5e:	b0 e0       	ldi	r27, 0x00	; 0
     c60:	e4 e3       	ldi	r30, 0x34	; 52
     c62:	f6 e0       	ldi	r31, 0x06	; 6
     c64:	0c 94 00 09 	jmp	0x1200	; 0x1200 <__prologue_saves__+0x20>
     c68:	69 83       	std	Y+1, r22	; 0x01
     c6a:	7a 83       	std	Y+2, r23	; 0x02
     c6c:	8b 83       	std	Y+3, r24	; 0x03
     c6e:	9c 83       	std	Y+4, r25	; 0x04
     c70:	ce 01       	movw	r24, r28
     c72:	01 96       	adiw	r24, 0x01	; 1
     c74:	be 01       	movw	r22, r28
     c76:	6b 5f       	subi	r22, 0xFB	; 251
     c78:	7f 4f       	sbci	r23, 0xFF	; 255
     c7a:	0e 94 1f 08 	call	0x103e	; 0x103e <__unpack_f>
     c7e:	8d 81       	ldd	r24, Y+5	; 0x05
     c80:	82 30       	cpi	r24, 0x02	; 2
     c82:	61 f1       	breq	.+88     	; 0xcdc <__fixsfsi+0x80>
     c84:	82 30       	cpi	r24, 0x02	; 2
     c86:	50 f1       	brcs	.+84     	; 0xcdc <__fixsfsi+0x80>
     c88:	84 30       	cpi	r24, 0x04	; 4
     c8a:	21 f4       	brne	.+8      	; 0xc94 <__fixsfsi+0x38>
     c8c:	8e 81       	ldd	r24, Y+6	; 0x06
     c8e:	88 23       	and	r24, r24
     c90:	51 f1       	breq	.+84     	; 0xce6 <__fixsfsi+0x8a>
     c92:	2e c0       	rjmp	.+92     	; 0xcf0 <__fixsfsi+0x94>
     c94:	2f 81       	ldd	r18, Y+7	; 0x07
     c96:	38 85       	ldd	r19, Y+8	; 0x08
     c98:	37 fd       	sbrc	r19, 7
     c9a:	20 c0       	rjmp	.+64     	; 0xcdc <__fixsfsi+0x80>
     c9c:	6e 81       	ldd	r22, Y+6	; 0x06
     c9e:	2f 31       	cpi	r18, 0x1F	; 31
     ca0:	31 05       	cpc	r19, r1
     ca2:	1c f0       	brlt	.+6      	; 0xcaa <__fixsfsi+0x4e>
     ca4:	66 23       	and	r22, r22
     ca6:	f9 f0       	breq	.+62     	; 0xce6 <__fixsfsi+0x8a>
     ca8:	23 c0       	rjmp	.+70     	; 0xcf0 <__fixsfsi+0x94>
     caa:	8e e1       	ldi	r24, 0x1E	; 30
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	82 1b       	sub	r24, r18
     cb0:	93 0b       	sbc	r25, r19
     cb2:	29 85       	ldd	r18, Y+9	; 0x09
     cb4:	3a 85       	ldd	r19, Y+10	; 0x0a
     cb6:	4b 85       	ldd	r20, Y+11	; 0x0b
     cb8:	5c 85       	ldd	r21, Y+12	; 0x0c
     cba:	04 c0       	rjmp	.+8      	; 0xcc4 <__fixsfsi+0x68>
     cbc:	56 95       	lsr	r21
     cbe:	47 95       	ror	r20
     cc0:	37 95       	ror	r19
     cc2:	27 95       	ror	r18
     cc4:	8a 95       	dec	r24
     cc6:	d2 f7       	brpl	.-12     	; 0xcbc <__fixsfsi+0x60>
     cc8:	66 23       	and	r22, r22
     cca:	b1 f0       	breq	.+44     	; 0xcf8 <__fixsfsi+0x9c>
     ccc:	50 95       	com	r21
     cce:	40 95       	com	r20
     cd0:	30 95       	com	r19
     cd2:	21 95       	neg	r18
     cd4:	3f 4f       	sbci	r19, 0xFF	; 255
     cd6:	4f 4f       	sbci	r20, 0xFF	; 255
     cd8:	5f 4f       	sbci	r21, 0xFF	; 255
     cda:	0e c0       	rjmp	.+28     	; 0xcf8 <__fixsfsi+0x9c>
     cdc:	20 e0       	ldi	r18, 0x00	; 0
     cde:	30 e0       	ldi	r19, 0x00	; 0
     ce0:	40 e0       	ldi	r20, 0x00	; 0
     ce2:	50 e0       	ldi	r21, 0x00	; 0
     ce4:	09 c0       	rjmp	.+18     	; 0xcf8 <__fixsfsi+0x9c>
     ce6:	2f ef       	ldi	r18, 0xFF	; 255
     ce8:	3f ef       	ldi	r19, 0xFF	; 255
     cea:	4f ef       	ldi	r20, 0xFF	; 255
     cec:	5f e7       	ldi	r21, 0x7F	; 127
     cee:	04 c0       	rjmp	.+8      	; 0xcf8 <__fixsfsi+0x9c>
     cf0:	20 e0       	ldi	r18, 0x00	; 0
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	40 e0       	ldi	r20, 0x00	; 0
     cf6:	50 e8       	ldi	r21, 0x80	; 128
     cf8:	b9 01       	movw	r22, r18
     cfa:	ca 01       	movw	r24, r20
     cfc:	2c 96       	adiw	r28, 0x0c	; 12
     cfe:	e2 e0       	ldi	r30, 0x02	; 2
     d00:	0c 94 1c 09 	jmp	0x1238	; 0x1238 <__epilogue_restores__+0x20>

00000d04 <__floatunsisf>:
     d04:	a8 e0       	ldi	r26, 0x08	; 8
     d06:	b0 e0       	ldi	r27, 0x00	; 0
     d08:	e8 e8       	ldi	r30, 0x88	; 136
     d0a:	f6 e0       	ldi	r31, 0x06	; 6
     d0c:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__prologue_saves__+0x10>
     d10:	7b 01       	movw	r14, r22
     d12:	8c 01       	movw	r16, r24
     d14:	61 15       	cp	r22, r1
     d16:	71 05       	cpc	r23, r1
     d18:	81 05       	cpc	r24, r1
     d1a:	91 05       	cpc	r25, r1
     d1c:	19 f4       	brne	.+6      	; 0xd24 <__floatunsisf+0x20>
     d1e:	82 e0       	ldi	r24, 0x02	; 2
     d20:	89 83       	std	Y+1, r24	; 0x01
     d22:	60 c0       	rjmp	.+192    	; 0xde4 <__floatunsisf+0xe0>
     d24:	83 e0       	ldi	r24, 0x03	; 3
     d26:	89 83       	std	Y+1, r24	; 0x01
     d28:	8e e1       	ldi	r24, 0x1E	; 30
     d2a:	c8 2e       	mov	r12, r24
     d2c:	d1 2c       	mov	r13, r1
     d2e:	dc 82       	std	Y+4, r13	; 0x04
     d30:	cb 82       	std	Y+3, r12	; 0x03
     d32:	ed 82       	std	Y+5, r14	; 0x05
     d34:	fe 82       	std	Y+6, r15	; 0x06
     d36:	0f 83       	std	Y+7, r16	; 0x07
     d38:	18 87       	std	Y+8, r17	; 0x08
     d3a:	c8 01       	movw	r24, r16
     d3c:	b7 01       	movw	r22, r14
     d3e:	0e 94 fb 06 	call	0xdf6	; 0xdf6 <__clzsi2>
     d42:	fc 01       	movw	r30, r24
     d44:	31 97       	sbiw	r30, 0x01	; 1
     d46:	f7 ff       	sbrs	r31, 7
     d48:	3b c0       	rjmp	.+118    	; 0xdc0 <__floatunsisf+0xbc>
     d4a:	22 27       	eor	r18, r18
     d4c:	33 27       	eor	r19, r19
     d4e:	2e 1b       	sub	r18, r30
     d50:	3f 0b       	sbc	r19, r31
     d52:	57 01       	movw	r10, r14
     d54:	68 01       	movw	r12, r16
     d56:	02 2e       	mov	r0, r18
     d58:	04 c0       	rjmp	.+8      	; 0xd62 <__floatunsisf+0x5e>
     d5a:	d6 94       	lsr	r13
     d5c:	c7 94       	ror	r12
     d5e:	b7 94       	ror	r11
     d60:	a7 94       	ror	r10
     d62:	0a 94       	dec	r0
     d64:	d2 f7       	brpl	.-12     	; 0xd5a <__floatunsisf+0x56>
     d66:	40 e0       	ldi	r20, 0x00	; 0
     d68:	50 e0       	ldi	r21, 0x00	; 0
     d6a:	60 e0       	ldi	r22, 0x00	; 0
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	a0 e0       	ldi	r26, 0x00	; 0
     d74:	b0 e0       	ldi	r27, 0x00	; 0
     d76:	04 c0       	rjmp	.+8      	; 0xd80 <__floatunsisf+0x7c>
     d78:	88 0f       	add	r24, r24
     d7a:	99 1f       	adc	r25, r25
     d7c:	aa 1f       	adc	r26, r26
     d7e:	bb 1f       	adc	r27, r27
     d80:	2a 95       	dec	r18
     d82:	d2 f7       	brpl	.-12     	; 0xd78 <__floatunsisf+0x74>
     d84:	01 97       	sbiw	r24, 0x01	; 1
     d86:	a1 09       	sbc	r26, r1
     d88:	b1 09       	sbc	r27, r1
     d8a:	8e 21       	and	r24, r14
     d8c:	9f 21       	and	r25, r15
     d8e:	a0 23       	and	r26, r16
     d90:	b1 23       	and	r27, r17
     d92:	00 97       	sbiw	r24, 0x00	; 0
     d94:	a1 05       	cpc	r26, r1
     d96:	b1 05       	cpc	r27, r1
     d98:	21 f0       	breq	.+8      	; 0xda2 <__floatunsisf+0x9e>
     d9a:	41 e0       	ldi	r20, 0x01	; 1
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	60 e0       	ldi	r22, 0x00	; 0
     da0:	70 e0       	ldi	r23, 0x00	; 0
     da2:	4a 29       	or	r20, r10
     da4:	5b 29       	or	r21, r11
     da6:	6c 29       	or	r22, r12
     da8:	7d 29       	or	r23, r13
     daa:	4d 83       	std	Y+5, r20	; 0x05
     dac:	5e 83       	std	Y+6, r21	; 0x06
     dae:	6f 83       	std	Y+7, r22	; 0x07
     db0:	78 87       	std	Y+8, r23	; 0x08
     db2:	8e e1       	ldi	r24, 0x1E	; 30
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	8e 1b       	sub	r24, r30
     db8:	9f 0b       	sbc	r25, r31
     dba:	9c 83       	std	Y+4, r25	; 0x04
     dbc:	8b 83       	std	Y+3, r24	; 0x03
     dbe:	12 c0       	rjmp	.+36     	; 0xde4 <__floatunsisf+0xe0>
     dc0:	30 97       	sbiw	r30, 0x00	; 0
     dc2:	81 f0       	breq	.+32     	; 0xde4 <__floatunsisf+0xe0>
     dc4:	0e 2e       	mov	r0, r30
     dc6:	04 c0       	rjmp	.+8      	; 0xdd0 <__floatunsisf+0xcc>
     dc8:	ee 0c       	add	r14, r14
     dca:	ff 1c       	adc	r15, r15
     dcc:	00 1f       	adc	r16, r16
     dce:	11 1f       	adc	r17, r17
     dd0:	0a 94       	dec	r0
     dd2:	d2 f7       	brpl	.-12     	; 0xdc8 <__floatunsisf+0xc4>
     dd4:	ed 82       	std	Y+5, r14	; 0x05
     dd6:	fe 82       	std	Y+6, r15	; 0x06
     dd8:	0f 83       	std	Y+7, r16	; 0x07
     dda:	18 87       	std	Y+8, r17	; 0x08
     ddc:	ce 1a       	sub	r12, r30
     dde:	df 0a       	sbc	r13, r31
     de0:	dc 82       	std	Y+4, r13	; 0x04
     de2:	cb 82       	std	Y+3, r12	; 0x03
     de4:	1a 82       	std	Y+2, r1	; 0x02
     de6:	ce 01       	movw	r24, r28
     de8:	01 96       	adiw	r24, 0x01	; 1
     dea:	0e 94 4a 07 	call	0xe94	; 0xe94 <__pack_f>
     dee:	28 96       	adiw	r28, 0x08	; 8
     df0:	ea e0       	ldi	r30, 0x0A	; 10
     df2:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__epilogue_restores__+0x10>

00000df6 <__clzsi2>:
     df6:	ef 92       	push	r14
     df8:	ff 92       	push	r15
     dfa:	0f 93       	push	r16
     dfc:	1f 93       	push	r17
     dfe:	7b 01       	movw	r14, r22
     e00:	8c 01       	movw	r16, r24
     e02:	80 e0       	ldi	r24, 0x00	; 0
     e04:	e8 16       	cp	r14, r24
     e06:	80 e0       	ldi	r24, 0x00	; 0
     e08:	f8 06       	cpc	r15, r24
     e0a:	81 e0       	ldi	r24, 0x01	; 1
     e0c:	08 07       	cpc	r16, r24
     e0e:	80 e0       	ldi	r24, 0x00	; 0
     e10:	18 07       	cpc	r17, r24
     e12:	88 f4       	brcc	.+34     	; 0xe36 <__clzsi2+0x40>
     e14:	8f ef       	ldi	r24, 0xFF	; 255
     e16:	e8 16       	cp	r14, r24
     e18:	f1 04       	cpc	r15, r1
     e1a:	01 05       	cpc	r16, r1
     e1c:	11 05       	cpc	r17, r1
     e1e:	31 f0       	breq	.+12     	; 0xe2c <__clzsi2+0x36>
     e20:	28 f0       	brcs	.+10     	; 0xe2c <__clzsi2+0x36>
     e22:	88 e0       	ldi	r24, 0x08	; 8
     e24:	90 e0       	ldi	r25, 0x00	; 0
     e26:	a0 e0       	ldi	r26, 0x00	; 0
     e28:	b0 e0       	ldi	r27, 0x00	; 0
     e2a:	17 c0       	rjmp	.+46     	; 0xe5a <__clzsi2+0x64>
     e2c:	80 e0       	ldi	r24, 0x00	; 0
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	a0 e0       	ldi	r26, 0x00	; 0
     e32:	b0 e0       	ldi	r27, 0x00	; 0
     e34:	12 c0       	rjmp	.+36     	; 0xe5a <__clzsi2+0x64>
     e36:	80 e0       	ldi	r24, 0x00	; 0
     e38:	e8 16       	cp	r14, r24
     e3a:	80 e0       	ldi	r24, 0x00	; 0
     e3c:	f8 06       	cpc	r15, r24
     e3e:	80 e0       	ldi	r24, 0x00	; 0
     e40:	08 07       	cpc	r16, r24
     e42:	81 e0       	ldi	r24, 0x01	; 1
     e44:	18 07       	cpc	r17, r24
     e46:	28 f0       	brcs	.+10     	; 0xe52 <__clzsi2+0x5c>
     e48:	88 e1       	ldi	r24, 0x18	; 24
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	a0 e0       	ldi	r26, 0x00	; 0
     e4e:	b0 e0       	ldi	r27, 0x00	; 0
     e50:	04 c0       	rjmp	.+8      	; 0xe5a <__clzsi2+0x64>
     e52:	80 e1       	ldi	r24, 0x10	; 16
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	a0 e0       	ldi	r26, 0x00	; 0
     e58:	b0 e0       	ldi	r27, 0x00	; 0
     e5a:	20 e2       	ldi	r18, 0x20	; 32
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	40 e0       	ldi	r20, 0x00	; 0
     e60:	50 e0       	ldi	r21, 0x00	; 0
     e62:	28 1b       	sub	r18, r24
     e64:	39 0b       	sbc	r19, r25
     e66:	4a 0b       	sbc	r20, r26
     e68:	5b 0b       	sbc	r21, r27
     e6a:	04 c0       	rjmp	.+8      	; 0xe74 <__clzsi2+0x7e>
     e6c:	16 95       	lsr	r17
     e6e:	07 95       	ror	r16
     e70:	f7 94       	ror	r15
     e72:	e7 94       	ror	r14
     e74:	8a 95       	dec	r24
     e76:	d2 f7       	brpl	.-12     	; 0xe6c <__clzsi2+0x76>
     e78:	f7 01       	movw	r30, r14
     e7a:	e8 59       	subi	r30, 0x98	; 152
     e7c:	ff 4f       	sbci	r31, 0xFF	; 255
     e7e:	80 81       	ld	r24, Z
     e80:	28 1b       	sub	r18, r24
     e82:	31 09       	sbc	r19, r1
     e84:	41 09       	sbc	r20, r1
     e86:	51 09       	sbc	r21, r1
     e88:	c9 01       	movw	r24, r18
     e8a:	1f 91       	pop	r17
     e8c:	0f 91       	pop	r16
     e8e:	ff 90       	pop	r15
     e90:	ef 90       	pop	r14
     e92:	08 95       	ret

00000e94 <__pack_f>:
     e94:	df 92       	push	r13
     e96:	ef 92       	push	r14
     e98:	ff 92       	push	r15
     e9a:	0f 93       	push	r16
     e9c:	1f 93       	push	r17
     e9e:	fc 01       	movw	r30, r24
     ea0:	e4 80       	ldd	r14, Z+4	; 0x04
     ea2:	f5 80       	ldd	r15, Z+5	; 0x05
     ea4:	06 81       	ldd	r16, Z+6	; 0x06
     ea6:	17 81       	ldd	r17, Z+7	; 0x07
     ea8:	d1 80       	ldd	r13, Z+1	; 0x01
     eaa:	80 81       	ld	r24, Z
     eac:	82 30       	cpi	r24, 0x02	; 2
     eae:	48 f4       	brcc	.+18     	; 0xec2 <__pack_f+0x2e>
     eb0:	80 e0       	ldi	r24, 0x00	; 0
     eb2:	90 e0       	ldi	r25, 0x00	; 0
     eb4:	a0 e1       	ldi	r26, 0x10	; 16
     eb6:	b0 e0       	ldi	r27, 0x00	; 0
     eb8:	e8 2a       	or	r14, r24
     eba:	f9 2a       	or	r15, r25
     ebc:	0a 2b       	or	r16, r26
     ebe:	1b 2b       	or	r17, r27
     ec0:	a5 c0       	rjmp	.+330    	; 0x100c <__pack_f+0x178>
     ec2:	84 30       	cpi	r24, 0x04	; 4
     ec4:	09 f4       	brne	.+2      	; 0xec8 <__pack_f+0x34>
     ec6:	9f c0       	rjmp	.+318    	; 0x1006 <__pack_f+0x172>
     ec8:	82 30       	cpi	r24, 0x02	; 2
     eca:	21 f4       	brne	.+8      	; 0xed4 <__pack_f+0x40>
     ecc:	ee 24       	eor	r14, r14
     ece:	ff 24       	eor	r15, r15
     ed0:	87 01       	movw	r16, r14
     ed2:	05 c0       	rjmp	.+10     	; 0xede <__pack_f+0x4a>
     ed4:	e1 14       	cp	r14, r1
     ed6:	f1 04       	cpc	r15, r1
     ed8:	01 05       	cpc	r16, r1
     eda:	11 05       	cpc	r17, r1
     edc:	19 f4       	brne	.+6      	; 0xee4 <__pack_f+0x50>
     ede:	e0 e0       	ldi	r30, 0x00	; 0
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	96 c0       	rjmp	.+300    	; 0x1010 <__pack_f+0x17c>
     ee4:	62 81       	ldd	r22, Z+2	; 0x02
     ee6:	73 81       	ldd	r23, Z+3	; 0x03
     ee8:	9f ef       	ldi	r25, 0xFF	; 255
     eea:	62 38       	cpi	r22, 0x82	; 130
     eec:	79 07       	cpc	r23, r25
     eee:	0c f0       	brlt	.+2      	; 0xef2 <__pack_f+0x5e>
     ef0:	5b c0       	rjmp	.+182    	; 0xfa8 <__pack_f+0x114>
     ef2:	22 e8       	ldi	r18, 0x82	; 130
     ef4:	3f ef       	ldi	r19, 0xFF	; 255
     ef6:	26 1b       	sub	r18, r22
     ef8:	37 0b       	sbc	r19, r23
     efa:	2a 31       	cpi	r18, 0x1A	; 26
     efc:	31 05       	cpc	r19, r1
     efe:	2c f0       	brlt	.+10     	; 0xf0a <__pack_f+0x76>
     f00:	20 e0       	ldi	r18, 0x00	; 0
     f02:	30 e0       	ldi	r19, 0x00	; 0
     f04:	40 e0       	ldi	r20, 0x00	; 0
     f06:	50 e0       	ldi	r21, 0x00	; 0
     f08:	2a c0       	rjmp	.+84     	; 0xf5e <__pack_f+0xca>
     f0a:	b8 01       	movw	r22, r16
     f0c:	a7 01       	movw	r20, r14
     f0e:	02 2e       	mov	r0, r18
     f10:	04 c0       	rjmp	.+8      	; 0xf1a <__pack_f+0x86>
     f12:	76 95       	lsr	r23
     f14:	67 95       	ror	r22
     f16:	57 95       	ror	r21
     f18:	47 95       	ror	r20
     f1a:	0a 94       	dec	r0
     f1c:	d2 f7       	brpl	.-12     	; 0xf12 <__pack_f+0x7e>
     f1e:	81 e0       	ldi	r24, 0x01	; 1
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	a0 e0       	ldi	r26, 0x00	; 0
     f24:	b0 e0       	ldi	r27, 0x00	; 0
     f26:	04 c0       	rjmp	.+8      	; 0xf30 <__pack_f+0x9c>
     f28:	88 0f       	add	r24, r24
     f2a:	99 1f       	adc	r25, r25
     f2c:	aa 1f       	adc	r26, r26
     f2e:	bb 1f       	adc	r27, r27
     f30:	2a 95       	dec	r18
     f32:	d2 f7       	brpl	.-12     	; 0xf28 <__pack_f+0x94>
     f34:	01 97       	sbiw	r24, 0x01	; 1
     f36:	a1 09       	sbc	r26, r1
     f38:	b1 09       	sbc	r27, r1
     f3a:	8e 21       	and	r24, r14
     f3c:	9f 21       	and	r25, r15
     f3e:	a0 23       	and	r26, r16
     f40:	b1 23       	and	r27, r17
     f42:	00 97       	sbiw	r24, 0x00	; 0
     f44:	a1 05       	cpc	r26, r1
     f46:	b1 05       	cpc	r27, r1
     f48:	21 f0       	breq	.+8      	; 0xf52 <__pack_f+0xbe>
     f4a:	81 e0       	ldi	r24, 0x01	; 1
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	a0 e0       	ldi	r26, 0x00	; 0
     f50:	b0 e0       	ldi	r27, 0x00	; 0
     f52:	9a 01       	movw	r18, r20
     f54:	ab 01       	movw	r20, r22
     f56:	28 2b       	or	r18, r24
     f58:	39 2b       	or	r19, r25
     f5a:	4a 2b       	or	r20, r26
     f5c:	5b 2b       	or	r21, r27
     f5e:	da 01       	movw	r26, r20
     f60:	c9 01       	movw	r24, r18
     f62:	8f 77       	andi	r24, 0x7F	; 127
     f64:	90 70       	andi	r25, 0x00	; 0
     f66:	a0 70       	andi	r26, 0x00	; 0
     f68:	b0 70       	andi	r27, 0x00	; 0
     f6a:	80 34       	cpi	r24, 0x40	; 64
     f6c:	91 05       	cpc	r25, r1
     f6e:	a1 05       	cpc	r26, r1
     f70:	b1 05       	cpc	r27, r1
     f72:	39 f4       	brne	.+14     	; 0xf82 <__pack_f+0xee>
     f74:	27 ff       	sbrs	r18, 7
     f76:	09 c0       	rjmp	.+18     	; 0xf8a <__pack_f+0xf6>
     f78:	20 5c       	subi	r18, 0xC0	; 192
     f7a:	3f 4f       	sbci	r19, 0xFF	; 255
     f7c:	4f 4f       	sbci	r20, 0xFF	; 255
     f7e:	5f 4f       	sbci	r21, 0xFF	; 255
     f80:	04 c0       	rjmp	.+8      	; 0xf8a <__pack_f+0xf6>
     f82:	21 5c       	subi	r18, 0xC1	; 193
     f84:	3f 4f       	sbci	r19, 0xFF	; 255
     f86:	4f 4f       	sbci	r20, 0xFF	; 255
     f88:	5f 4f       	sbci	r21, 0xFF	; 255
     f8a:	e0 e0       	ldi	r30, 0x00	; 0
     f8c:	f0 e0       	ldi	r31, 0x00	; 0
     f8e:	20 30       	cpi	r18, 0x00	; 0
     f90:	a0 e0       	ldi	r26, 0x00	; 0
     f92:	3a 07       	cpc	r19, r26
     f94:	a0 e0       	ldi	r26, 0x00	; 0
     f96:	4a 07       	cpc	r20, r26
     f98:	a0 e4       	ldi	r26, 0x40	; 64
     f9a:	5a 07       	cpc	r21, r26
     f9c:	10 f0       	brcs	.+4      	; 0xfa2 <__pack_f+0x10e>
     f9e:	e1 e0       	ldi	r30, 0x01	; 1
     fa0:	f0 e0       	ldi	r31, 0x00	; 0
     fa2:	79 01       	movw	r14, r18
     fa4:	8a 01       	movw	r16, r20
     fa6:	27 c0       	rjmp	.+78     	; 0xff6 <__pack_f+0x162>
     fa8:	60 38       	cpi	r22, 0x80	; 128
     faa:	71 05       	cpc	r23, r1
     fac:	64 f5       	brge	.+88     	; 0x1006 <__pack_f+0x172>
     fae:	fb 01       	movw	r30, r22
     fb0:	e1 58       	subi	r30, 0x81	; 129
     fb2:	ff 4f       	sbci	r31, 0xFF	; 255
     fb4:	d8 01       	movw	r26, r16
     fb6:	c7 01       	movw	r24, r14
     fb8:	8f 77       	andi	r24, 0x7F	; 127
     fba:	90 70       	andi	r25, 0x00	; 0
     fbc:	a0 70       	andi	r26, 0x00	; 0
     fbe:	b0 70       	andi	r27, 0x00	; 0
     fc0:	80 34       	cpi	r24, 0x40	; 64
     fc2:	91 05       	cpc	r25, r1
     fc4:	a1 05       	cpc	r26, r1
     fc6:	b1 05       	cpc	r27, r1
     fc8:	39 f4       	brne	.+14     	; 0xfd8 <__pack_f+0x144>
     fca:	e7 fe       	sbrs	r14, 7
     fcc:	0d c0       	rjmp	.+26     	; 0xfe8 <__pack_f+0x154>
     fce:	80 e4       	ldi	r24, 0x40	; 64
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	a0 e0       	ldi	r26, 0x00	; 0
     fd4:	b0 e0       	ldi	r27, 0x00	; 0
     fd6:	04 c0       	rjmp	.+8      	; 0xfe0 <__pack_f+0x14c>
     fd8:	8f e3       	ldi	r24, 0x3F	; 63
     fda:	90 e0       	ldi	r25, 0x00	; 0
     fdc:	a0 e0       	ldi	r26, 0x00	; 0
     fde:	b0 e0       	ldi	r27, 0x00	; 0
     fe0:	e8 0e       	add	r14, r24
     fe2:	f9 1e       	adc	r15, r25
     fe4:	0a 1f       	adc	r16, r26
     fe6:	1b 1f       	adc	r17, r27
     fe8:	17 ff       	sbrs	r17, 7
     fea:	05 c0       	rjmp	.+10     	; 0xff6 <__pack_f+0x162>
     fec:	16 95       	lsr	r17
     fee:	07 95       	ror	r16
     ff0:	f7 94       	ror	r15
     ff2:	e7 94       	ror	r14
     ff4:	31 96       	adiw	r30, 0x01	; 1
     ff6:	87 e0       	ldi	r24, 0x07	; 7
     ff8:	16 95       	lsr	r17
     ffa:	07 95       	ror	r16
     ffc:	f7 94       	ror	r15
     ffe:	e7 94       	ror	r14
    1000:	8a 95       	dec	r24
    1002:	d1 f7       	brne	.-12     	; 0xff8 <__pack_f+0x164>
    1004:	05 c0       	rjmp	.+10     	; 0x1010 <__pack_f+0x17c>
    1006:	ee 24       	eor	r14, r14
    1008:	ff 24       	eor	r15, r15
    100a:	87 01       	movw	r16, r14
    100c:	ef ef       	ldi	r30, 0xFF	; 255
    100e:	f0 e0       	ldi	r31, 0x00	; 0
    1010:	6e 2f       	mov	r22, r30
    1012:	67 95       	ror	r22
    1014:	66 27       	eor	r22, r22
    1016:	67 95       	ror	r22
    1018:	90 2f       	mov	r25, r16
    101a:	9f 77       	andi	r25, 0x7F	; 127
    101c:	d7 94       	ror	r13
    101e:	dd 24       	eor	r13, r13
    1020:	d7 94       	ror	r13
    1022:	8e 2f       	mov	r24, r30
    1024:	86 95       	lsr	r24
    1026:	49 2f       	mov	r20, r25
    1028:	46 2b       	or	r20, r22
    102a:	58 2f       	mov	r21, r24
    102c:	5d 29       	or	r21, r13
    102e:	b7 01       	movw	r22, r14
    1030:	ca 01       	movw	r24, r20
    1032:	1f 91       	pop	r17
    1034:	0f 91       	pop	r16
    1036:	ff 90       	pop	r15
    1038:	ef 90       	pop	r14
    103a:	df 90       	pop	r13
    103c:	08 95       	ret

0000103e <__unpack_f>:
    103e:	fc 01       	movw	r30, r24
    1040:	db 01       	movw	r26, r22
    1042:	40 81       	ld	r20, Z
    1044:	51 81       	ldd	r21, Z+1	; 0x01
    1046:	22 81       	ldd	r18, Z+2	; 0x02
    1048:	62 2f       	mov	r22, r18
    104a:	6f 77       	andi	r22, 0x7F	; 127
    104c:	70 e0       	ldi	r23, 0x00	; 0
    104e:	22 1f       	adc	r18, r18
    1050:	22 27       	eor	r18, r18
    1052:	22 1f       	adc	r18, r18
    1054:	93 81       	ldd	r25, Z+3	; 0x03
    1056:	89 2f       	mov	r24, r25
    1058:	88 0f       	add	r24, r24
    105a:	82 2b       	or	r24, r18
    105c:	28 2f       	mov	r18, r24
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	99 1f       	adc	r25, r25
    1062:	99 27       	eor	r25, r25
    1064:	99 1f       	adc	r25, r25
    1066:	11 96       	adiw	r26, 0x01	; 1
    1068:	9c 93       	st	X, r25
    106a:	11 97       	sbiw	r26, 0x01	; 1
    106c:	21 15       	cp	r18, r1
    106e:	31 05       	cpc	r19, r1
    1070:	a9 f5       	brne	.+106    	; 0x10dc <__unpack_f+0x9e>
    1072:	41 15       	cp	r20, r1
    1074:	51 05       	cpc	r21, r1
    1076:	61 05       	cpc	r22, r1
    1078:	71 05       	cpc	r23, r1
    107a:	11 f4       	brne	.+4      	; 0x1080 <__unpack_f+0x42>
    107c:	82 e0       	ldi	r24, 0x02	; 2
    107e:	37 c0       	rjmp	.+110    	; 0x10ee <__unpack_f+0xb0>
    1080:	82 e8       	ldi	r24, 0x82	; 130
    1082:	9f ef       	ldi	r25, 0xFF	; 255
    1084:	13 96       	adiw	r26, 0x03	; 3
    1086:	9c 93       	st	X, r25
    1088:	8e 93       	st	-X, r24
    108a:	12 97       	sbiw	r26, 0x02	; 2
    108c:	9a 01       	movw	r18, r20
    108e:	ab 01       	movw	r20, r22
    1090:	67 e0       	ldi	r22, 0x07	; 7
    1092:	22 0f       	add	r18, r18
    1094:	33 1f       	adc	r19, r19
    1096:	44 1f       	adc	r20, r20
    1098:	55 1f       	adc	r21, r21
    109a:	6a 95       	dec	r22
    109c:	d1 f7       	brne	.-12     	; 0x1092 <__unpack_f+0x54>
    109e:	83 e0       	ldi	r24, 0x03	; 3
    10a0:	8c 93       	st	X, r24
    10a2:	0d c0       	rjmp	.+26     	; 0x10be <__unpack_f+0x80>
    10a4:	22 0f       	add	r18, r18
    10a6:	33 1f       	adc	r19, r19
    10a8:	44 1f       	adc	r20, r20
    10aa:	55 1f       	adc	r21, r21
    10ac:	12 96       	adiw	r26, 0x02	; 2
    10ae:	8d 91       	ld	r24, X+
    10b0:	9c 91       	ld	r25, X
    10b2:	13 97       	sbiw	r26, 0x03	; 3
    10b4:	01 97       	sbiw	r24, 0x01	; 1
    10b6:	13 96       	adiw	r26, 0x03	; 3
    10b8:	9c 93       	st	X, r25
    10ba:	8e 93       	st	-X, r24
    10bc:	12 97       	sbiw	r26, 0x02	; 2
    10be:	20 30       	cpi	r18, 0x00	; 0
    10c0:	80 e0       	ldi	r24, 0x00	; 0
    10c2:	38 07       	cpc	r19, r24
    10c4:	80 e0       	ldi	r24, 0x00	; 0
    10c6:	48 07       	cpc	r20, r24
    10c8:	80 e4       	ldi	r24, 0x40	; 64
    10ca:	58 07       	cpc	r21, r24
    10cc:	58 f3       	brcs	.-42     	; 0x10a4 <__unpack_f+0x66>
    10ce:	14 96       	adiw	r26, 0x04	; 4
    10d0:	2d 93       	st	X+, r18
    10d2:	3d 93       	st	X+, r19
    10d4:	4d 93       	st	X+, r20
    10d6:	5c 93       	st	X, r21
    10d8:	17 97       	sbiw	r26, 0x07	; 7
    10da:	08 95       	ret
    10dc:	2f 3f       	cpi	r18, 0xFF	; 255
    10de:	31 05       	cpc	r19, r1
    10e0:	79 f4       	brne	.+30     	; 0x1100 <__unpack_f+0xc2>
    10e2:	41 15       	cp	r20, r1
    10e4:	51 05       	cpc	r21, r1
    10e6:	61 05       	cpc	r22, r1
    10e8:	71 05       	cpc	r23, r1
    10ea:	19 f4       	brne	.+6      	; 0x10f2 <__unpack_f+0xb4>
    10ec:	84 e0       	ldi	r24, 0x04	; 4
    10ee:	8c 93       	st	X, r24
    10f0:	08 95       	ret
    10f2:	64 ff       	sbrs	r22, 4
    10f4:	03 c0       	rjmp	.+6      	; 0x10fc <__unpack_f+0xbe>
    10f6:	81 e0       	ldi	r24, 0x01	; 1
    10f8:	8c 93       	st	X, r24
    10fa:	12 c0       	rjmp	.+36     	; 0x1120 <__unpack_f+0xe2>
    10fc:	1c 92       	st	X, r1
    10fe:	10 c0       	rjmp	.+32     	; 0x1120 <__unpack_f+0xe2>
    1100:	2f 57       	subi	r18, 0x7F	; 127
    1102:	30 40       	sbci	r19, 0x00	; 0
    1104:	13 96       	adiw	r26, 0x03	; 3
    1106:	3c 93       	st	X, r19
    1108:	2e 93       	st	-X, r18
    110a:	12 97       	sbiw	r26, 0x02	; 2
    110c:	83 e0       	ldi	r24, 0x03	; 3
    110e:	8c 93       	st	X, r24
    1110:	87 e0       	ldi	r24, 0x07	; 7
    1112:	44 0f       	add	r20, r20
    1114:	55 1f       	adc	r21, r21
    1116:	66 1f       	adc	r22, r22
    1118:	77 1f       	adc	r23, r23
    111a:	8a 95       	dec	r24
    111c:	d1 f7       	brne	.-12     	; 0x1112 <__unpack_f+0xd4>
    111e:	70 64       	ori	r23, 0x40	; 64
    1120:	14 96       	adiw	r26, 0x04	; 4
    1122:	4d 93       	st	X+, r20
    1124:	5d 93       	st	X+, r21
    1126:	6d 93       	st	X+, r22
    1128:	7c 93       	st	X, r23
    112a:	17 97       	sbiw	r26, 0x07	; 7
    112c:	08 95       	ret

0000112e <__fpcmp_parts_f>:
    112e:	1f 93       	push	r17
    1130:	dc 01       	movw	r26, r24
    1132:	fb 01       	movw	r30, r22
    1134:	9c 91       	ld	r25, X
    1136:	92 30       	cpi	r25, 0x02	; 2
    1138:	08 f4       	brcc	.+2      	; 0x113c <__fpcmp_parts_f+0xe>
    113a:	47 c0       	rjmp	.+142    	; 0x11ca <__fpcmp_parts_f+0x9c>
    113c:	80 81       	ld	r24, Z
    113e:	82 30       	cpi	r24, 0x02	; 2
    1140:	08 f4       	brcc	.+2      	; 0x1144 <__fpcmp_parts_f+0x16>
    1142:	43 c0       	rjmp	.+134    	; 0x11ca <__fpcmp_parts_f+0x9c>
    1144:	94 30       	cpi	r25, 0x04	; 4
    1146:	51 f4       	brne	.+20     	; 0x115c <__fpcmp_parts_f+0x2e>
    1148:	11 96       	adiw	r26, 0x01	; 1
    114a:	1c 91       	ld	r17, X
    114c:	84 30       	cpi	r24, 0x04	; 4
    114e:	99 f5       	brne	.+102    	; 0x11b6 <__fpcmp_parts_f+0x88>
    1150:	81 81       	ldd	r24, Z+1	; 0x01
    1152:	68 2f       	mov	r22, r24
    1154:	70 e0       	ldi	r23, 0x00	; 0
    1156:	61 1b       	sub	r22, r17
    1158:	71 09       	sbc	r23, r1
    115a:	3f c0       	rjmp	.+126    	; 0x11da <__fpcmp_parts_f+0xac>
    115c:	84 30       	cpi	r24, 0x04	; 4
    115e:	21 f0       	breq	.+8      	; 0x1168 <__fpcmp_parts_f+0x3a>
    1160:	92 30       	cpi	r25, 0x02	; 2
    1162:	31 f4       	brne	.+12     	; 0x1170 <__fpcmp_parts_f+0x42>
    1164:	82 30       	cpi	r24, 0x02	; 2
    1166:	b9 f1       	breq	.+110    	; 0x11d6 <__fpcmp_parts_f+0xa8>
    1168:	81 81       	ldd	r24, Z+1	; 0x01
    116a:	88 23       	and	r24, r24
    116c:	89 f1       	breq	.+98     	; 0x11d0 <__fpcmp_parts_f+0xa2>
    116e:	2d c0       	rjmp	.+90     	; 0x11ca <__fpcmp_parts_f+0x9c>
    1170:	11 96       	adiw	r26, 0x01	; 1
    1172:	1c 91       	ld	r17, X
    1174:	11 97       	sbiw	r26, 0x01	; 1
    1176:	82 30       	cpi	r24, 0x02	; 2
    1178:	f1 f0       	breq	.+60     	; 0x11b6 <__fpcmp_parts_f+0x88>
    117a:	81 81       	ldd	r24, Z+1	; 0x01
    117c:	18 17       	cp	r17, r24
    117e:	d9 f4       	brne	.+54     	; 0x11b6 <__fpcmp_parts_f+0x88>
    1180:	12 96       	adiw	r26, 0x02	; 2
    1182:	2d 91       	ld	r18, X+
    1184:	3c 91       	ld	r19, X
    1186:	13 97       	sbiw	r26, 0x03	; 3
    1188:	82 81       	ldd	r24, Z+2	; 0x02
    118a:	93 81       	ldd	r25, Z+3	; 0x03
    118c:	82 17       	cp	r24, r18
    118e:	93 07       	cpc	r25, r19
    1190:	94 f0       	brlt	.+36     	; 0x11b6 <__fpcmp_parts_f+0x88>
    1192:	28 17       	cp	r18, r24
    1194:	39 07       	cpc	r19, r25
    1196:	bc f0       	brlt	.+46     	; 0x11c6 <__fpcmp_parts_f+0x98>
    1198:	14 96       	adiw	r26, 0x04	; 4
    119a:	8d 91       	ld	r24, X+
    119c:	9d 91       	ld	r25, X+
    119e:	0d 90       	ld	r0, X+
    11a0:	bc 91       	ld	r27, X
    11a2:	a0 2d       	mov	r26, r0
    11a4:	24 81       	ldd	r18, Z+4	; 0x04
    11a6:	35 81       	ldd	r19, Z+5	; 0x05
    11a8:	46 81       	ldd	r20, Z+6	; 0x06
    11aa:	57 81       	ldd	r21, Z+7	; 0x07
    11ac:	28 17       	cp	r18, r24
    11ae:	39 07       	cpc	r19, r25
    11b0:	4a 07       	cpc	r20, r26
    11b2:	5b 07       	cpc	r21, r27
    11b4:	18 f4       	brcc	.+6      	; 0x11bc <__fpcmp_parts_f+0x8e>
    11b6:	11 23       	and	r17, r17
    11b8:	41 f0       	breq	.+16     	; 0x11ca <__fpcmp_parts_f+0x9c>
    11ba:	0a c0       	rjmp	.+20     	; 0x11d0 <__fpcmp_parts_f+0xa2>
    11bc:	82 17       	cp	r24, r18
    11be:	93 07       	cpc	r25, r19
    11c0:	a4 07       	cpc	r26, r20
    11c2:	b5 07       	cpc	r27, r21
    11c4:	40 f4       	brcc	.+16     	; 0x11d6 <__fpcmp_parts_f+0xa8>
    11c6:	11 23       	and	r17, r17
    11c8:	19 f0       	breq	.+6      	; 0x11d0 <__fpcmp_parts_f+0xa2>
    11ca:	61 e0       	ldi	r22, 0x01	; 1
    11cc:	70 e0       	ldi	r23, 0x00	; 0
    11ce:	05 c0       	rjmp	.+10     	; 0x11da <__fpcmp_parts_f+0xac>
    11d0:	6f ef       	ldi	r22, 0xFF	; 255
    11d2:	7f ef       	ldi	r23, 0xFF	; 255
    11d4:	02 c0       	rjmp	.+4      	; 0x11da <__fpcmp_parts_f+0xac>
    11d6:	60 e0       	ldi	r22, 0x00	; 0
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	cb 01       	movw	r24, r22
    11dc:	1f 91       	pop	r17
    11de:	08 95       	ret

000011e0 <__prologue_saves__>:
    11e0:	2f 92       	push	r2
    11e2:	3f 92       	push	r3
    11e4:	4f 92       	push	r4
    11e6:	5f 92       	push	r5
    11e8:	6f 92       	push	r6
    11ea:	7f 92       	push	r7
    11ec:	8f 92       	push	r8
    11ee:	9f 92       	push	r9
    11f0:	af 92       	push	r10
    11f2:	bf 92       	push	r11
    11f4:	cf 92       	push	r12
    11f6:	df 92       	push	r13
    11f8:	ef 92       	push	r14
    11fa:	ff 92       	push	r15
    11fc:	0f 93       	push	r16
    11fe:	1f 93       	push	r17
    1200:	cf 93       	push	r28
    1202:	df 93       	push	r29
    1204:	cd b7       	in	r28, 0x3d	; 61
    1206:	de b7       	in	r29, 0x3e	; 62
    1208:	ca 1b       	sub	r28, r26
    120a:	db 0b       	sbc	r29, r27
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	de bf       	out	0x3e, r29	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	cd bf       	out	0x3d, r28	; 61
    1216:	09 94       	ijmp

00001218 <__epilogue_restores__>:
    1218:	2a 88       	ldd	r2, Y+18	; 0x12
    121a:	39 88       	ldd	r3, Y+17	; 0x11
    121c:	48 88       	ldd	r4, Y+16	; 0x10
    121e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1220:	6e 84       	ldd	r6, Y+14	; 0x0e
    1222:	7d 84       	ldd	r7, Y+13	; 0x0d
    1224:	8c 84       	ldd	r8, Y+12	; 0x0c
    1226:	9b 84       	ldd	r9, Y+11	; 0x0b
    1228:	aa 84       	ldd	r10, Y+10	; 0x0a
    122a:	b9 84       	ldd	r11, Y+9	; 0x09
    122c:	c8 84       	ldd	r12, Y+8	; 0x08
    122e:	df 80       	ldd	r13, Y+7	; 0x07
    1230:	ee 80       	ldd	r14, Y+6	; 0x06
    1232:	fd 80       	ldd	r15, Y+5	; 0x05
    1234:	0c 81       	ldd	r16, Y+4	; 0x04
    1236:	1b 81       	ldd	r17, Y+3	; 0x03
    1238:	aa 81       	ldd	r26, Y+2	; 0x02
    123a:	b9 81       	ldd	r27, Y+1	; 0x01
    123c:	ce 0f       	add	r28, r30
    123e:	d1 1d       	adc	r29, r1
    1240:	0f b6       	in	r0, 0x3f	; 63
    1242:	f8 94       	cli
    1244:	de bf       	out	0x3e, r29	; 62
    1246:	0f be       	out	0x3f, r0	; 63
    1248:	cd bf       	out	0x3d, r28	; 61
    124a:	ed 01       	movw	r28, r26
    124c:	08 95       	ret

0000124e <_exit>:
    124e:	f8 94       	cli

00001250 <__stop_program>:
    1250:	ff cf       	rjmp	.-2      	; 0x1250 <__stop_program>
